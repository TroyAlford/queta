{"version":3,"sources":["webpack://queta/./temp/glaemscribe.js"],"names":["window","Glaemscribe","stringListToCleanArray","str","separator","split","map","elt","trim","filter","n","defineProperty","stringFromCharCode","floor","fromCodePoint","productizeArray","array1","array2","result","Array","length","i","j","arrayEquals","l","isArray","glaemEach","object","callback","o","hasOwnProperty","String","$defineProperty","Object","error","fromCharCode","Math","highSurrogate","lowSurrogate","MAX_SIZE","codeUnits","index","arguments","codePoint","Number","isFinite","RangeError","push","apply","Function","prototype","inheritsFrom","parentClassOrObject","constructor","this","parent","raw_modes","raw_charsets","loaded_modes","loaded_charsets","pre_processor_operator_classes","post_processor_operator_classes","ResourceManager","load_charsets","charset_list","keys","charset_name","charset","CharsetParser","parse","load_modes","mode_list","mode_name","mode","ModeParser","register_pre_processor_class","operator_name","operator_class","register_post_processor_class","class_for_pre_processor_operator_name","class_for_post_processor_operator_name","resource_manager","Char","is_virtual","is_sequence","output","VirtualChar","classes","lookup_table","reversed","VirtualClass","target","triggers","vc","n2c","VIRTUAL_CHAR_OUTPUT","finalize","_","vclass","result_char","trigger_char","errors","Glaeml","Error","line","rc","tc","names","trigger_char_name","c","SequenceChar","sequence","sq","symbol","Charset","name","chars","add_char","code","undefined","indexOf","add_virtual_char","deflt","add_sequence_char","seq","virtual_chars","sort","c1","c2","localeCompare","cname","parse_raw","raw","doc","Parser","root_node","gpath","char","parseInt","args","slice","seq_elemnt","child_node","children","is_text","virtual_element","class_element","reversed_element","default_element","Document","NodeType","Text","ElementInline","ElementBlock","Node","type","clone","new_element","child_index","child","is_element","pathfind_crawl","apath","found","bpath","shift","path","text","add_text_node","lnum","parent_node","current_parent_node","raw_data","replace","cap","match","join","parser","lines","rmatch","substring","rest","Shellwords","concat","ShellwordsEscapeMode","Unicode","reset_state","sw","is_escaping","is_eating_arg","is_eating_arg_between_quotes","current_arg","escape_mode","unicode_escape_counter","unicode_escape_str","advance_inside_arg","advance_inside_escape","toLowerCase","Fragment","sheaf","expression","fragment","rule","equivalences","EQUIVALENCE_RX_OUT","eq_exp","exp","EQUIVALENCE_RX_IN","exec","EQUIVALENCE_SEPARATOR","leaf","finalize_fragment_leaf","is_dst","eq","member","k","token","supported_charsets","res","x","y","combinations","is_src","RuleGroup","UNICODE_VAR_NAME_REGEXP_OUT","cap_var","p1","offset","new_char","RegExp","WORD_BOUNDARY_LANG","WORD_BOUNDARY_TREE","ModeDebugContext","preprocessor_output","processor_pathes","processor_output","postprocessor_output","Mode","options","warnings","latest_option_values","has_tts","current_tts_voice","raw_mode_name","pre_processor","TranscriptionPreProcessor","processor","TranscriptionProcessor","post_processor","TranscriptionPostProcessor","trans_options","oname","default_value_name","valname","opt","value_for_value_name","trans_options_converted","Option","Type","ENUM","values","val","get_raw_mode","espeak_option","value_name_for_value","TTS","option_name_to_voice","raw_mode","loaded_raw_mode","glaem_clone","strict_transcribe","content","debug_context","default_charset","synthesize_ipa","voice","has_raw_mode","tts_output","e","ret","restore_lf","transcribe","to_transcribe","tr_mode","rr","succ","r","visibility","option","BOOL","value_to_names","vname","v","default_value","val_name","value","is_visible","if_eval","Eval","err","console","log","Macro","rule_group","arg_names","macro","module","root_code_block","IfTree","CodeBlock","validate_presence_of_args","node","arg_count","validate_presence_of_children","elt_name","elt_count","verify_mode_glaeml","ce","charset_element","oe","option_element","ve","value_element","outspace_element","re","rules_element","create_if_cond_for_if_term","if_term","cond","ifcond","IfCond","child_code_block","if_conds","traverse_if_tree","context","text_procedure","element_procedure","owner","root_element","current_parent_code_block","cond_attribute","IfTerm","terms","parent_if_cond","parent_if_term","parent_code_block","macro_name","macro_args","arg","macros","macro_context","wanted_argcount","given_argcount","macro_node","MacroDeployTerm","parse_pre_post_processor","processor_element","pre_not_post","processor_context","element","term","is_pre_post_processor_operators","PrePostProcessorOperatorsTerm","operators","mode_options","language","writing","human_name","authors","version","invention","world","is_radio","value_name","visible_element","__","option_name_at","option_default_val_at","charset_elements","is_default","preprocessor_element","postprocessor_element","out_space","rules_elements","rule_group_name","rule_groups","is_code_lines","CodeLinesTerm","lcount","codeline","CodeLine","code_lines","voice_list","includes","Rule","sub_rules","cross_schema","srccounter","SheafChainIterator","src_sheaf_chain","dstcounter","dst_sheaf_chain","srcp","proto","dstp","src_combinations","dst_combination","src_combination","SubRule","iterate","RuleGroupVar","is_pointer","is_p","VAR_NAME_REGEXP","VAR_DECL_REGEXP","POINTER_VAR_DECL_REGEXP","UNICODE_VAR_NAME_REGEXP_IN","RULE_REGEXP","CROSS_SCHEMA_REGEXP","CROSS_RULE_REGEXP","add_var","var_name","vars","apply_vars","string","allow_unicode_vars","goterror","had_replacements","stack_depth","rep","nil","descend_if_tree","code_block","t","cl","finalize_code_line","is_macro_deploy","possible_error","arg_values","arg_name","var_value","var_value_ex","arg_value_expressions","pop","if_cond","finalize_rule","match_exp","replacement_exp","replacement","SheafChain","rules","code_line","cross","in_charset","sr","letters","inchar","WORD_BREAKER","Sheaf","sheaf_chain","linkable","fragment_exps","SHEAF_SEPARATOR","fragments","fragment_exp","sheaf_exps","SHEAF_REGEXP_OUT","sheaf_exp","SHEAF_REGEXP_IN","sheaves","sd","sci","sizes","iterators","identity_cross_array","sheaf_count","iterable_idxs","prototype_array","cross_array","proto_attr","it_count","ca_count","it_identity_array","prototype_array_permutted","from","to","to_permut","permut","resolved","counter","e1","e2","pos","realpos","Term","dump","level","call","Token","is_regexp","Lexer","token_chain","retain_last","uneat","EXP_TOKENS","TOKEN_END","advance","lexer","parse_top_level","explore_bool","explore_compare","stop","explore_add","explore_mult","explore_primary","cast_constant","constant_is_float","cst","isNaN","constant_is_int","constant_is_string","f","parseFloat","TranscriptionTreeNode","character","tree_node","siblings","is_effective","add_subpath","source","cc","sibling","path_to_here","chain","last_node","PrePostProcessorOperator","glaeml_element","eval_arg","to_eval","finalize_glaeml_element","ge","op","idx","finalized_glaeml_element","PreProcessorOperator","raw_args","PostProcessorOperator","TranscriptionPrePostProcessor","op_num","operator","tokens","out_charset","out_space_str","UNKNOWN_CHAR_OUTPUT","transcription_tree","gname","rg","group","group_for_char","sub_rule","add_subrule","current_group","accumulated_word","transcribe_word","c_group","word","ttret","len","eaten","DowncasePreProcessorOperator","RxSubstitutePreProcessorOperator","what","SubstitutePreProcessorOperator","inSource","inToReplace","inReplaceWith","outString","repLen","UpDownTehtaSplitPreProcessorOperator","vowel_list","consonant_list","s","vowel_map","consonant_map","splitter_tree","word_split_map","vi","ci","all_letters","self","li","type_of_token","apply_to_word","w","res_modified","r0","r1","r2","t0","t1","t2","letter","ElvishNumbersPreProcessorOperator","base","reverse","inbase","toString","toUpperCase","ReversePostProcessorOperator","ResolveVirtualsPostProcessorOperator","last_triggers","reset_trigger_states","object_reference","apply_loop","new_tokens","last_trigger","apply_sequences","glaemEachReversed","global","freeze","O","OP","create","getOwnPropertyNames","defineProperties","getOwnPropertyDescriptor","getPrototypeOf","isFrozen","isSealed","seal","isExtensible","preventExtensions","defaults","dst","src","forEach","isPrimitive","isFunction","signatureOf","HASWEAKMAP","wm","WeakMap","set","get","defaultCK","descriptors","extensibility","enumerator","specs","installProperties","descs","deep","ck","_clone","sig","has","isarray","desc","valueOf","TypeError","configurable","writable","enumerable","proxy","ESpeakNGGlue","ipa_configurations","special_token_ncn","special_token_ncs","special_token_scn","special_token_scs","special_token_ipa_ncn","special_token_ipa_ncs","special_token_ipa_scn","special_token_ipa_scs","clauseaffecting_punctuation","clauseunaffecting_punctuation","pre_reconsitute_markers_callback","make_char_checker","escape_raw_mode","entry","full_remove","captured","pre_ipa","config","cup","accum","kept_signs","prec_is_space","next_is_space","post_ipa","ipa","kept_tokens","ncnr","scnr","ncsr","scsr","contents","nth","onended","client","pre_raw_tokens","ts","Date","pre_raw_res","pre_ipa_tokens","pre_ipa_res","set_voice","synthesize","pho","te","synthesis_time","synthesize_wav","set_rate","rate","set_pitch","pitch","is_engine_loaded"],"mappings":"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","file":"queta-glaemscribe.min.js","sourcesContent":["/* eslint-disable */\nexport default (function() {\n\tif (window.Glaemscribe) {\n\t\treturn window.Glaemscribe;\n\t}\n\n/*\nGlǽmscribe (also written Glaemscribe) is a software dedicated to\nthe transcription of texts between writing systems, and more \nspecifically dedicated to the transcription of J.R.R. Tolkien's \ninvented languages to some of his devised writing systems.\n\nCopyright (C) 2017 Benjamin Babut (Talagan).\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\nany later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Affero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public License\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nVersion : 1.2.1\n*/\n\n\"use strict\";\n\n/*\n  Adding utils/string_list_to_clean_array.js \n*/\nfunction stringListToCleanArray(str,separator)\n{\n  return str.split(separator)\n      .map(function(elt) { return elt.trim() })\n      .filter(function(n){ return n != \"\" }); ;\n}\n\n\n\n/*\n  Adding utils/string_from_code_point.js \n*/\n/*! http://mths.be/fromcodepoint v0.1.0 by @mathias */\nif (!String.fromCodePoint) {\n  (function() {\n    var defineProperty = (function() {\n      // IE 8 only supports `Object.defineProperty` on DOM elements\n      try {\n        var object = {};\n        var $defineProperty = Object.defineProperty;\n        var result = $defineProperty(object, object, object) && $defineProperty;\n      } catch(error) {}\n      return result;\n    }());\n    var stringFromCharCode = String.fromCharCode;\n    var floor = Math.floor;\n    var fromCodePoint = function() {\n      var MAX_SIZE = 0x4000;\n      var codeUnits = [];\n      var highSurrogate;\n      var lowSurrogate;\n      var index = -1;\n      var length = arguments.length;\n      if (!length) {\n        return '';\n      }\n      var result = '';\n      while (++index < length) {\n        var codePoint = Number(arguments[index]);\n        if (\n          !isFinite(codePoint) ||       // `NaN`, `+Infinity`, or `-Infinity`\n          codePoint < 0 ||              // not a valid Unicode code point\n          codePoint > 0x10FFFF ||       // not a valid Unicode code point\n          floor(codePoint) != codePoint // not an integer\n        ) {\n          throw RangeError('Invalid code point: ' + codePoint);\n        }\n        if (codePoint <= 0xFFFF) { // BMP code point\n          codeUnits.push(codePoint);\n        } else { // Astral code point; split in surrogate halves\n          // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n          codePoint -= 0x10000;\n          highSurrogate = (codePoint >> 10) + 0xD800;\n          lowSurrogate = (codePoint % 0x400) + 0xDC00;\n          codeUnits.push(highSurrogate, lowSurrogate);\n        }\n        if (index + 1 == length || codeUnits.length > MAX_SIZE) {\n          result += stringFromCharCode.apply(null, codeUnits);\n          codeUnits.length = 0;\n        }\n      }\n      return result;\n    };\n    if (defineProperty) {\n      defineProperty(String, 'fromCodePoint', {\n        'value': fromCodePoint,\n        'configurable': true,\n        'writable': true\n      });\n    } else {\n      String.fromCodePoint = fromCodePoint;\n    }\n  }());\n}\n\n/*\n  Adding utils/inherits_from.js \n*/\n// Thank you mozilla! https://developer.mozilla.org/en-US/docs/Web/JavaScript/Inheritance_and_the_prototype_chain\n\nFunction.prototype.inheritsFrom = function( parentClassOrObject ){ \n\tif ( parentClassOrObject.constructor == Function ) \n\t{ \n\t\t//Normal Inheritance \n\t\tthis.prototype = new parentClassOrObject;\n\t\tthis.prototype.constructor = this;\n\t\tthis.prototype.parent = parentClassOrObject.prototype;\n\t} \n\telse \n\t{ \n\t\t//Pure Virtual Inheritance \n\t\tthis.prototype = parentClassOrObject;\n\t\tthis.prototype.constructor = this;\n\t\tthis.prototype.parent = parentClassOrObject;\n\t} \n\treturn this;\n} \n\n\n/*\n  Adding utils/array_productize.js \n*/\nfunction productizeArray(array1, array2) {\n\tvar result = new Array(array1.length * array2.length);\n\n\tfor (var i = 0; i < array1.length; i++) {\n\t\tfor (var j = 0; j < array2.length; j++) {\n\t\t\tresult[i * array2.length + j] = [array1[i], array2[j]];\n\t\t}\n\t}\n\n\treturn result;\n}\n\n\n/*\n  Adding utils/array_equals.js \n*/\nfunction arrayEquals(array1, array2) {\n\tif (!array2) {\n\t\treturn false;\n\t}\n\n\tif (array1.length != array2.length) {\n\t\treturn false;\n\t}\n\n\tfor (var i = 0, l=array1.length; i < l; i++) {\n\t\tif (Array.isArray(array1[i]) && Array.isArray(array2[i])) {\n\t\t\tif (!arrayEquals(array1[i], array2[i])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} else if (array1[i] != array2[i]) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n\n/*\n  Adding utils/array_unique.js \n*/\nfunction uniqueArray(array) {\n  return array.filter(function(value, index, self) {\n    return self.indexOf(value) === index;\n  });\n}\n\n\n/*\n  Adding utils/glaem_object.js \n*/\nfunction glaemEach(object, callback) {\n\tfor(var o in object) {\n\t\tif(!object.hasOwnProperty(o)) continue;\n\n\t\tvar res = callback(o, object[o])\n\t\tif (res == false) break;\n\t}\n}\n\nfunction glaemEachReversed(object, callback) {\n\tif(!Array.isArray(object)) {\n\t\treturn glaemEach(object, callback);\n\t}\n\n\tfor(var o = object.length - 1; o >= 0; o--) {\n\t\tif(!object.hasOwnProperty(o)) continue;\n\n\t\tvar res = callback(o, object[o])\n\t\tif (res == false) break;\n\t}\n}\n\n\n/*\n  Adding api.js \n*/\n\n\nvar Glaemscribe           = {};\n\n\n\n/*\n  Adding api/constants.js \n*/\n\n\nGlaemscribe.WORD_BREAKER        = \"|\";\n\nGlaemscribe.WORD_BOUNDARY_LANG  = \"_\"\nGlaemscribe.WORD_BOUNDARY_TREE  = \"\\u0000\"\n\nGlaemscribe.UNKNOWN_CHAR_OUTPUT = \"☠\"      \nGlaemscribe.VIRTUAL_CHAR_OUTPUT = \"☢\" \n\n\n/*\n  Adding api/resource_manager.js \n*/\n\n\nGlaemscribe.ResourceManager = function() {  \n  this.raw_modes                    = {}; // name is misleading it clashes with raw mode. TODO : refactor? Maybe not it could break the js loading\n  this.raw_charsets                 = {};\n  this.loaded_modes                     = {};\n  this.loaded_charsets                  = {};\n  this.pre_processor_operator_classes   = {};\n  this.post_processor_operator_classes  = {};\n  return this;\n}\n\nGlaemscribe.ResourceManager.prototype.load_charsets = function(charset_list) {\n  \n  // Load all charsets if null is passed\n  if(charset_list == null)\n     charset_list = Object.keys(this.raw_charsets);\n  \n  // If passed a name, wrap into an array\n  if(typeof charset_list === 'string' || charset_list instanceof String)\n    charset_list = [charset_list];\n     \n  for(var i=0;i<charset_list.length;i++)\n  {\n    var charset_name = charset_list[i];\n    \n    // Don't load a charset twice\n    if(this.loaded_charsets[charset_name])\n      continue;\n       \n    // Cannot load a charset that does not exist\n    if(!this.raw_charsets[charset_name])\n      continue;\n       \n    var cp      = new Glaemscribe.CharsetParser();\n    var charset = cp.parse(charset_name);\n    \n    if(charset)\n      this.loaded_charsets[charset_name] = charset;\n  }\n}\n\nGlaemscribe.ResourceManager.prototype.load_modes = function(mode_list) {\n \n  // Load all modes if null is passed\n  if(mode_list == null)\n     mode_list = Object.keys(this.raw_modes);\n  \n  // If passed a name, wrap into an array\n  if(typeof mode_list === 'string' || mode_list instanceof String)\n    mode_list = [mode_list];\n    \n  for(var i=0;i<mode_list.length;i++)\n  {\n    var mode_name = mode_list[i];\n    \n    // Don't load a charset twice\n    if(this.loaded_modes[mode_name])\n      continue;\n       \n    // Cannot load a charset that does not exist\n    if(!this.raw_modes[mode_name])\n      continue;\n       \n    var mp      = new Glaemscribe.ModeParser();\n    var mode    = mp.parse(mode_name);\n    \n    if(mode)\n      this.loaded_modes[mode_name] = mode;\n  }\n}\n\nGlaemscribe.ResourceManager.prototype.register_pre_processor_class = function(operator_name, operator_class)\n{\n  this.pre_processor_operator_classes[operator_name] = operator_class;  \n}\n\nGlaemscribe.ResourceManager.prototype.register_post_processor_class = function(operator_name, operator_class)\n{\n  this.post_processor_operator_classes[operator_name] = operator_class;\n}\n\nGlaemscribe.ResourceManager.prototype.class_for_pre_processor_operator_name = function(operator_name)\n{\n  return this.pre_processor_operator_classes[operator_name]; \n}\n\nGlaemscribe.ResourceManager.prototype.class_for_post_processor_operator_name = function(operator_name)\n{\n  return this.post_processor_operator_classes[operator_name]  \n}\n\nGlaemscribe.resource_manager = new Glaemscribe.ResourceManager();\n\n\n\n/*\n  Adding api/charset.js \n*/\n\n\nGlaemscribe.Char = function()\n{\n  return this;\n}\n\nGlaemscribe.Char.prototype.is_virtual = function()\n{\n  return false;\n}\n\nGlaemscribe.Char.prototype.is_sequence = function()\n{\n  return false;\n}\n\nGlaemscribe.Char.prototype.output = function()\n{\n  return this.str;\n}\n\n// ======================\n\nGlaemscribe.VirtualChar = function()\n{\n  this.classes      = [];\n  this.lookup_table = {};\n  this.reversed     = false;\n  this.default      = null;\n  return this;\n}\n\nGlaemscribe.VirtualChar.VirtualClass = function()\n{\n  this.target   = '';\n  this.triggers = [];\n}\n\nGlaemscribe.VirtualChar.prototype.is_virtual = function()\n{\n  return true;\n}\n\nGlaemscribe.VirtualChar.prototype.is_sequence = function()\n{\n  return false;\n}\n\nGlaemscribe.VirtualChar.prototype.output = function()\n{\n  var vc = this;\n  if(vc.default)\n    return vc.charset.n2c(vc.default).output();\n  else\n    return Glaemscribe.VIRTUAL_CHAR_OUTPUT;\n}\n\nGlaemscribe.VirtualChar.prototype.finalize = function()\n{\n  var vc = this;\n  \n  vc.lookup_table = {};\n  glaemEach(vc.classes, function(_, vclass) {\n    var result_char   = vclass.target;\n    var trigger_chars = vclass.triggers;\n    \n    glaemEach(trigger_chars, function(_,trigger_char) {\n      var found = vc.lookup_table[trigger_char];\n      if(found != null)\n      {\n        vc.charset.errors.push(new Glaemscribe.Glaeml.Error(vc.line, \"Trigger char \" + trigger_char + \"found twice in virtual char.\"));\n      }\n      else\n      {\n        var rc = vc.charset.n2c(result_char);\n        var tc = vc.charset.n2c(trigger_char);\n        \n        if(rc == null) {\n          vc.charset.errors.push(new Glaemscribe.Glaeml.Error(vc.line, \"Trigger char \" + trigger_char + \" points to unknown result char \" + result_char + \".\"));\n        }\n        else if(tc == null) {\n          vc.charset.errors.push(new Glaemscribe.Glaeml.Error(vc.line, \"Unknown trigger char \" + trigger_char + \".\"));\n        }\n        else if(rc instanceof Glaemscribe.VirtualChar) {\n          vc.charset.errors.push(new Glaemscribe.Glaeml.Error(vc.line, \"Trigger char \" + trigger_char + \" points to another virtual char \" + result_char + \". This is not supported!\"));          \n        }\n        else {\n          glaemEach(tc.names, function(_,trigger_char_name) {\n            vc.lookup_table[trigger_char_name] = rc;\n          });\n        }\n      }\n    });\n  });\n  if(vc.default)\n  {\n    var c = vc.charset.lookup_table[vc.default];\n    if(!c)\n      vc.charset.errors.push(new Glaemscribe.Glaeml.Error(vc.line, \"Default char \"+ vc.default + \" does not match any real character in the charset.\"));\n    else if(c.is_virtual())\n      vc.charset.errors.push(new Glaemscribe.Glaeml.Error(vc.line, \"Default char \"+ vc.default + \" is virtual, it should be real only.\"));\n  }\n}\n\nGlaemscribe.VirtualChar.prototype.n2c = function(trigger_char_name) {\n  return this.lookup_table[trigger_char_name];\n}\n\n// =======================\n\nGlaemscribe.SequenceChar = function()\n{\n  this.sequence = [];\n  return this;\n}\n\nGlaemscribe.SequenceChar.prototype.is_virtual = function()\n{\n  return false;\n}\n\nGlaemscribe.SequenceChar.prototype.is_sequence = function()\n{\n  return true;\n}\n\nGlaemscribe.SequenceChar.prototype.str = function()\n{\n  // A sequence char should never arrive unreplaced\n  return Glaemscribe.VIRTUAL_CHAR_OUTPUT;\n}\n  \nGlaemscribe.SequenceChar.prototype.finalize = function()\n{\n  var sq = this;\n  if(sq.sequence.length == 0)\n  {\n    sq.charset.errors.push(new Glaemscribe.Glaeml.Error(sq.line, \"Sequence for sequence char is empty.\"));\n  }\n  glaemEach(sq.sequence, function(_,symbol) {\n    if(!sq.charset.n2c(symbol))\n      sq.charset.errors.push(new Glaemscribe.Glaeml.Error(sq.line, \"Sequence char \" + symbol + \"cannot be found in the charset.\"));     \n  });\n}\n    \n// =========================\n\nGlaemscribe.Charset = function(charset_name) {\n  \n  this.name         = charset_name;\n  this.chars        = [];\n  this.errors       = [];\n  return this;\n}\n\nGlaemscribe.Charset.prototype.add_char = function(line, code, names)\n{\n  if(names == undefined || names.length == 0 || names.indexOf(\"?\") != -1) // Ignore characters with '?'\n    return;\n  \n  var c     = new Glaemscribe.Char();    \n  c.line    = line;\n  c.code    = code;\n  c.names   = names;    \n  c.str     = String.fromCodePoint(code);\n  c.charset = this;\n  this.chars.push(c);\n}\n\nGlaemscribe.Charset.prototype.add_virtual_char = function(line, classes, names, reversed, deflt)\n{\n  if(names == undefined || names.length == 0 || names.indexOf(\"?\") != -1) // Ignore characters with '?'\n    return;\n \n  var c      = new Glaemscribe.VirtualChar();    \n  c.line     = line;\n  c.names    = names;\n  c.classes  = classes; // We'll check errors in finalize\n  c.charset  = this;\n  c.default  = deflt;\n  c.reversed = reversed;\n  this.chars.push(c);  \n}\n\nGlaemscribe.Charset.prototype.add_sequence_char = function(line, names, seq) {\n  \n  if(names == undefined || names.length == 0 || names.indexOf(\"?\") != -1) // Ignore characters with '?'\n    return;\n \n  var c         = new Glaemscribe.SequenceChar();    \n  c.line        = line;\n  c.names       = names;\n  c.sequence    = stringListToCleanArray(seq,/\\s/);\n  c.charset     = this;\n  this.chars.push(c); \n}\n\nGlaemscribe.Charset.prototype.finalize = function()\n{\n  var charset = this;\n  \n  charset.errors         = [];\n  charset.lookup_table   = {};\n  charset.virtual_chars  = []\n  \n  charset.chars = charset.chars.sort(function(c1,c2) {\n    if(c1.is_virtual() && c2.is_virtual())\n      return c1.names[0].localeCompare(c2.names[0]);\n    if(c1.is_virtual())\n      return 1;\n    if(c2.is_virtual())\n      return -1;\n    \n    return (c1.code - c2.code);\n  });\n  \n  for(var i=0;i<charset.chars.length;i++)\n  {\n    var c = charset.chars[i];  \n    for(var j=0;j<c.names.length;j++)\n    {\n      var cname = c.names[j];\n      var found = charset.lookup_table[cname];\n      if(found != null)\n        charset.errors.push(new Glaemscribe.Glaeml.Error(c.line, \"Character \" + cname + \" found twice.\"));\n      else\n        charset.lookup_table[cname] = c;\n    }\n  }\n  \n  glaemEach(charset.chars, function(_,c) {\n    if(c.is_virtual()) {\n      c.finalize();\n      charset.virtual_chars.push(c);\n    }\n  });\n  \n  glaemEach(charset.chars, function(_,c) {\n     if(c.is_sequence()) {\n       c.finalize();\n     }\n  });\n}\n\nGlaemscribe.Charset.prototype.n2c = function(cname)\n{\n  return this.lookup_table[cname];\n}\n\n\n/*\n  Adding api/charset_parser.js \n*/\n\n\nGlaemscribe.CharsetParser = function()\n{\n  return this;\n}\n\nGlaemscribe.CharsetParser.prototype.parse_raw = function(charset_name, raw)\n{\n  var charset = new Glaemscribe.Charset(charset_name);\n  var doc     = new Glaemscribe.Glaeml.Parser().parse(raw);\n\n  if(doc.errors.length>0)\n  {\n    charset.errors = doc.errors;\n    return charset;\n  }\n \n  var chars   = doc.root_node.gpath('char');\n\n  for(var c=0;c<chars.length;c++)\n  {\n    var char    = chars[c];\n    var code    = parseInt(char.args[0],16);\n    var names   = char.args.slice(1);\n    charset.add_char(char.line, code, names)\n  }  \n  \n  glaemEach(doc.root_node.gpath(\"seq\"), function(_,seq_elemnt) {\n    var names       = seq_elemnt.args;\n    var child_node  = seq_elemnt.children[0];   \n    var seq         = (child_node && child_node.is_text())?(child_node.args[0]):(\"\")\n    charset.add_sequence_char(seq_elemnt.line,names,seq);\n  });\n  \n  glaemEach(doc.root_node.gpath(\"virtual\"), function(_,virtual_element) {\n    var names     = virtual_element.args;\n    var classes   = [];\n    var reversed  = false;\n    var deflt     = null;\n    glaemEach(virtual_element.gpath(\"class\"), function(_,class_element) {\n      var vc        = new Glaemscribe.VirtualChar.VirtualClass();\n      vc.target     = class_element.args[0];\n      vc.triggers   = class_element.args.slice(1);   \n      classes.push(vc);\n    });\n    glaemEach(virtual_element.gpath(\"reversed\"), function(_,reversed_element) {\n      reversed = true;\n    });\n    glaemEach(virtual_element.gpath(\"default\"), function(_,default_element) {\n      deflt = default_element.args[0];\n    });\n    charset.add_virtual_char(virtual_element.line,classes,names,reversed,deflt);\n  });\n  \n  charset.finalize(); \n  return charset;  \n}\n\nGlaemscribe.CharsetParser.prototype.parse = function(charset_name) {\n  \n  var raw     = Glaemscribe.resource_manager.raw_charsets[charset_name];\n  \n  return this.parse_raw(charset_name, raw);\n}\n\n\n/*\n  Adding api/glaeml.js \n*/\n\n\nGlaemscribe.Glaeml = {}\n\nGlaemscribe.Glaeml.Document = function() {\n  this.errors     = [];\n  this.root_node  = null;\n  return this;\n}\n\nGlaemscribe.Glaeml.NodeType = {}\nGlaemscribe.Glaeml.NodeType.Text = 0\nGlaemscribe.Glaeml.NodeType.ElementInline = 1\nGlaemscribe.Glaeml.NodeType.ElementBlock = 2\n\nGlaemscribe.Glaeml.Node = function(line, type, name) {\n  this.type     = type;\n  this.name     = name;\n  this.line     = line;\n  this.args     = [];\n  this.children = [];\n  \n  return this\n}\n\nGlaemscribe.Glaeml.Node.prototype.clone = function() {\n    var new_element  = new Glaemscribe.Glaeml.Node(this.line, this.type, this.name);\n    // Clone the array of args\n    new_element.args = this.args.slice(0); \n    // Clone the children\n    glaemEach(this.children, function(child_index, child) {\n        new_element.children.push(child.clone());\n    });\n    return new_element;\n}\n\nGlaemscribe.Glaeml.Node.prototype.is_text = function()\n{\n  return (this.type == Glaemscribe.Glaeml.NodeType.Text);\n}\n\nGlaemscribe.Glaeml.Node.prototype.is_element = function()\n{\n  return (this.type == Glaemscribe.Glaeml.NodeType.ElementInline || \n  this.type == Glaemscribe.Glaeml.NodeType.ElementBlock) ;\n}\n\nGlaemscribe.Glaeml.Node.prototype.pathfind_crawl = function(apath, found)\n{\n  var tnode = this;\n  \n  for(var i=0; i < tnode.children.length; i++)\n  {\n    var c = tnode.children[i];\n\n    if(c.name == apath[0])\n    {\n      if(apath.length == 1)\n      {\n        found.push(c);\n      }\n      else\n      {\n        var bpath = apath.slice(0);\n        bpath.shift();\n        c.pathfind_crawl(bpath, found)\n      }\n    }\n  }\n}\n\nGlaemscribe.Glaeml.Node.prototype.gpath = function(path)\n{\n  var apath = path.split(\".\");\n  var found     = [];\n  this.pathfind_crawl(apath,found);\n  return found;\n}\n\nGlaemscribe.Glaeml.Error = function(line,text) {\n  this.line = line;\n  this.text = text;\n  return this;\n}\n\nGlaemscribe.Glaeml.Parser = function() {}\n\nGlaemscribe.Glaeml.Parser.prototype.add_text_node = function(lnum, text) {\n  \n  var n         = new Glaemscribe.Glaeml.Node(lnum, Glaemscribe.Glaeml.NodeType.Text, null);\n  n.args.push(text);\n  n.parent_node = this.current_parent_node     \n  this.current_parent_node.children.push(n);   \n}\n\nGlaemscribe.Glaeml.Parser.prototype.parse = function(raw_data) {\n  raw_data = raw_data.replace(/\\r/g,\"\");\n  raw_data = raw_data.replace(/\\\\\\*\\*([\\s\\S]*?)\\*\\*\\\\/mg, function(cap) {\n    // Keep the good number of lines\n    return new Array( (cap.match(/\\n/g) || []).length + 1).join(\"\\n\");\n  }) \n \n  var lnum                    = 0;\n  var parser                  = this;\n \n  var doc                     = new Glaemscribe.Glaeml.Document;\n  doc.root_node               = new Glaemscribe.Glaeml.Node(lnum, Glaemscribe.Glaeml.NodeType.ElementBlock, \"root\");\n  parser.current_parent_node  = doc.root_node;\n \n  var lines = raw_data.split(\"\\n\")\n  for(var i=0;i<lines.length;i++)\n  {\n    lnum += 1;\n    \n    var l = lines[i];\n    l = l.trim();\n    if(l == \"\")\n    {\n      parser.add_text_node(lnum, l);\n      continue;\n    }  \n    \n    if(l[0] == \"\\\\\")\n    {\n      if(l.length == 1)\n      {\n        doc.errors.push(new Glaemscribe.Glaeml.Error(lnum, \"Incomplete Node\"));\n      }\n      else\n      {\n        var rmatch = null;\n        \n        if(l[1] == \"\\\\\") // First backslash is escaped\n        {\n          parser.add_text_node(lnum, l.substring(1));\n        }\n        else if(rmatch = l.match(/^(\\\\beg\\s+)/)) \n        {       \n          var found = rmatch[0];\n          var rest  = l.substring(found.length);\n   \n          var args  = [];\n          var name  = \"???\";\n          \n          if( !(rmatch = rest.match(/^([a-z_]+)/)) )\n          {\n            doc.errors.push(new Glaemscribe.Glaeml.Error(lnum, \"Bad element name.\"));\n          }\n          else\n          {\n            name    = rmatch[0];\n            \n            try { \n              args    = new Glaemscribe.Glaeml.Shellwords().parse(rest.substring(name.length)); \n            }\n            catch(error) {\n                doc.errors.push(new Glaemscribe.Glaeml.Error(lnum, \"Error parsing glaeml args (\" + error + \").\"));\n            }\n          }\n          \n          var n         = new Glaemscribe.Glaeml.Node(lnum, Glaemscribe.Glaeml.NodeType.ElementBlock, name);\n          n.args        = n.args.concat(args);\n          n.parent_node = parser.current_parent_node;\n              \n          parser.current_parent_node.children.push(n);\n          parser.current_parent_node = n;\n        }\n        else if(rmatch = l.match(/^(\\\\end(\\s|$))/))\n        {\n          if( !parser.current_parent_node.parent_node )\n            doc.errors.push(new Glaemscribe.Glaeml.Error(lnum, \"Element 'end' unexpected.\"));\n          else if( l.substring(rmatch[0].length).trim() != \"\" )\n            doc.errors.push(new Glaemscribe.Glaeml.Error(lnum, \"Element 'end' should not have any argument.\"));\n          else\n            parser.current_parent_node = parser.current_parent_node.parent_node;\n        }\n        else\n        {\n          // Read the name of the node\n          l       = l.substring(1);\n          rmatch  = l.match( /^([a-z_]+)/ )   \n\n          if(!rmatch)\n            doc.errors.push(new Glaemscribe.Glaeml.Error(lnum, \"Cannot understand element name.\"));\n          else\n          {\n            var name      = rmatch[0];\n            var args      = [];\n            \n            try           { \n              args    = new Glaemscribe.Glaeml.Shellwords().parse(l.substring(name.length)); \n            }\n            catch(error)  { \n              doc.errors.push(new Glaemscribe.Glaeml.Error(lnum, \"Error parsing glaeml args (\" + error + \").\")); \n            }\n                                       \n            n             = new Glaemscribe.Glaeml.Node(lnum, Glaemscribe.Glaeml.NodeType.ElementInline, name);\n            n.args        = n.args.concat(args);\n            n.parent_node = parser.current_parent_node;\n            \n            parser.current_parent_node.children.push(n);\n          }   \n        }\n      }\n    }\n    else\n    {\n      parser.add_text_node(lnum, l);\n    }\n  }\n  \n  if(parser.current_parent_node != doc.root_node)\n    doc.errors.push(new Glaemscribe.Glaeml.Error(lnum, \"Missing 'end' element.\"));\n \n  return doc;\n}\n\n/*\n  Adding api/glaeml_shellwords.js \n*/\n\n\nGlaemscribe.Glaeml.Shellwords = function() {\n  return this;\n}\n\nGlaemscribe.Glaeml.ShellwordsEscapeMode = {};\nGlaemscribe.Glaeml.ShellwordsEscapeMode.Unicode = 1;\n\nGlaemscribe.Glaeml.Shellwords.prototype.reset_state = function() {\n  var sw = this;\n  \n  sw.is_escaping                = false;\n  sw.is_eating_arg              = false;\n  sw.is_eating_arg_between_quotes  = false;\n  sw.args = [];\n  sw.current_arg = \"\";\n  sw.escape_mode            = null;\n  sw.unicode_escape_counter = 0;\n  sw.unicode_escape_str     = '';\n}\n  \nGlaemscribe.Glaeml.Shellwords.prototype.advance_inside_arg = function(l,i) {\n  var sw = this;\n  \n  if(l[i] == \"\\\\\") {\n    sw.is_escaping      = true;\n    sw.escape_mode      = null;\n  }\n  else {\n    sw.current_arg += l[i];\n  }\n}\n\nGlaemscribe.Glaeml.Shellwords.prototype.advance_inside_escape = function(l,i) {\n\n  var sw = this;\n\n  if(sw.escape_mode == null) {\n    // We don't now yet what to do.\n    switch(l[i])\n    {\n    case 'n':\n      {\n        sw.current_arg += \"\\n\";\n        sw.is_escaping = false;\n        break;\n      }\n    case \"\\\\\":\n      {\n        sw.current_arg +=  \"\\\\\";\n        sw.is_escaping = false;\n        break;\n      }\n    case \"t\":\n      {\n        sw.current_arg +=  \"\\t\";\n        sw.is_escaping = false;\n        break;      \n      }\n    case \"\\\"\":\n      {\n        sw.current_arg +=  \"\\\"\";\n        sw.is_escaping = false;\n        break;      \n      }\n    case \"u\":\n      {\n        sw.escape_mode = Glaemscribe.Glaeml.ShellwordsEscapeMode.Unicode;\n        sw.unicode_escape_counter = 0;\n        sw.unicode_escape_str     = '';\n        break;\n      }\n    default:\n      {\n        throw new Error(\"Unknown escapment : \\\\\" + l[i]);\n      }\n    }\n  }\n  else\n  {\n    switch(sw.escape_mode)\n    {\n    case Glaemscribe.Glaeml.ShellwordsEscapeMode.Unicode:\n      {\n        var c = l[i].toLowerCase();\n          \n        if(!(c.match(/[0-9a-f]/))) {\n          throw new Error(\"Wrong format for unicode escaping, should be \\\\u with 4 hex digits\");\n        }\n          \n        sw.unicode_escape_counter += 1\n        sw.unicode_escape_str     += c\n        if(sw.unicode_escape_counter == 4) {\n          sw.is_escaping = false\n          sw.current_arg += String.fromCodePoint(parseInt(sw.unicode_escape_str, 16));\n        }\n        break;\n      }\n    default:\n      {\n        throw new Error(\"Unimplemented escape mode\")\n      }\n    }\n  }\n}\n\nGlaemscribe.Glaeml.Shellwords.prototype.parse = function(l) {\n  var sw = this;\n  \n  sw.reset_state();\n  \n  for(var i=0;i<l.length;i++) {\n    \n    if(!sw.is_eating_arg) {\n      \n      if(l[i].match(/\\s/))\n        continue;\n      \n      if(l[i] == \"'\")\n        throw new Error(\"Glaeml strictly uses double quotes, not simple quotes for args\") \n      \n      sw.is_eating_arg                = true;\n      sw.is_eating_arg_between_quotes = (l[i] == \"\\\"\");\n      \n      if(!sw.is_eating_arg_between_quotes)\n        sw.current_arg += l[i];\n    }\n    else {\n      \n      // Eating arg\n      if(sw.is_escaping) {\n        sw.advance_inside_escape(l,i);\n      }\n      else {\n        if(!sw.is_eating_arg_between_quotes) {\n          \n          if(l[i].match(/[\\s\"]/)) {\n            \n            sw.args.push(sw.current_arg);\n            sw.current_arg    = \"\";\n            sw.is_eating_arg  = (l[i] == \"\\\"\"); // Starting a new arg directly\n            sw.is_eating_arg_between_quotes = sw.is_eating_arg;\n            continue;\n            \n          }\n          else {\n            sw.advance_inside_arg(l,i)\n          }\n        }\n        else {\n          \n          if(l[i] == \"\\\"\") {\n            sw.args.push(sw.current_arg);\n            sw.current_arg    = \"\";\n            sw.is_eating_arg  = false;\n          }\n          else {\n            sw.advance_inside_arg(l,i);\n          }\n        }\n      }\n    }\n  }\n\n  if(sw.is_eating_arg && sw.is_eating_arg_between_quotes) {\n    throw new Error(\"Unmatched quote.\");\n  }\n\n  if(sw.current_arg.trim() != '') {\n    sw.args.push(sw.current_arg)\n  }\n\n  return sw.args;\n}           \n           \n           \n\n/*\n  Adding api/fragment.js \n*/\n\n\nGlaemscribe.Fragment = function(sheaf, expression) {\n  \n  var fragment = this;\n  \n  fragment.sheaf        = sheaf;\n  fragment.mode         = sheaf.mode;\n  fragment.rule         = sheaf.rule;\n  fragment.expression   = expression;\n\n  // Next line : no need to filter empty strings, js does not put them\n  fragment.equivalences = stringListToCleanArray(fragment.expression, Glaemscribe.Fragment.EQUIVALENCE_RX_OUT); \n  fragment.equivalences = fragment.equivalences.map(function(eq_exp) {\n    var eq  = eq_exp;\n    var exp = Glaemscribe.Fragment.EQUIVALENCE_RX_IN.exec(eq_exp);  \n\n    if(exp)\n    {\n      eq = exp[1]; \n      eq = eq.split(Glaemscribe.Fragment.EQUIVALENCE_SEPARATOR).map(function(elt) {\n        elt = elt.trim();\n        return elt.split(/\\s/).map(function(leaf) {return fragment.finalize_fragment_leaf(leaf)});\n      });      \n    }\n    else\n    {\n      eq = [eq_exp.split(/\\s/).map(function(leaf) {return fragment.finalize_fragment_leaf(leaf)})];\n    }\n    return eq;\n  });\n  \n  if(fragment.equivalences.length == 0)\n    fragment.equivalences = [[[\"\"]]];\n\n  // Verify all symbols used are known in all charsets\n  if(fragment.is_dst())\n  {\n    var mode = fragment.sheaf.mode;   \n    for(var i=0;i<fragment.equivalences.length;i++)\n    {\n      var eq = fragment.equivalences[i];\n      for(var j=0;j<eq.length;j++)\n      {\n        var member = eq[j];\n        for(var k=0;k<member.length;k++)\n        {\n          var token = member[k];\n          if(token == \"\") // Case of NULL\n            continue;\n           \n          for(var charset_name in mode.supported_charsets)\n          {           \n            var charset     = mode.supported_charsets[charset_name];\n            var symbol      = charset.n2c(token);\n            if(symbol == null)\n            {\n               fragment.rule.errors.push(\"Symbol '\" + token + \"' not found in charset '\"+ charset.name + \"'!\");   \n               return;  \n            }      \n          }\n        }\n      }\n    }\n  }\n  \n  // Calculate all combinations\n  var res = fragment.equivalences[0];\n \n  for (var i = 0; i < fragment.equivalences.length - 1; i++) {\n    var prod = productizeArray(res, fragment.equivalences[i+1]);\n    res = prod.map(function(elt) {\n  \n      var x = elt[0];\n      var y = elt[1];\n  \n      return x.concat(y);\n    });\n    \n  }\n  fragment.combinations = res; \n}\n\nGlaemscribe.Fragment.prototype.finalize_fragment_leaf = function(leaf) {\n  var fragment = this;\n      \n      \n  if(fragment.is_src()) {\n    leaf = leaf.replace(Glaemscribe.RuleGroup.UNICODE_VAR_NAME_REGEXP_OUT, function(cap_var,p1,offset,str) { \n      var new_char  = String.fromCodePoint(parseInt(p1, 16));\n      if(new_char == \"_\")\n        new_char = \"\\u0001\"; // Temporary mem true underscore\n\n      return new_char;\n    });\n    leaf = leaf.replace(new RegExp(Glaemscribe.WORD_BOUNDARY_LANG,\"g\"), Glaemscribe.WORD_BOUNDARY_TREE);\n    leaf = leaf.replace(new RegExp(\"\\u0001\",\"g\"),\"_\"); // Put true underscore back\n  }\n\n  return leaf;\n}\n      \nGlaemscribe.Fragment.EQUIVALENCE_SEPARATOR = \",\"\nGlaemscribe.Fragment.EQUIVALENCE_RX_OUT    = /(\\(.*?\\))/\nGlaemscribe.Fragment.EQUIVALENCE_RX_IN     = /\\((.*?)\\)/\n\nGlaemscribe.Fragment.prototype.is_src = function() {  return this.sheaf.is_src(); };\nGlaemscribe.Fragment.prototype.is_dst = function() {  return this.sheaf.is_dst(); };\n\n\n/*\n  Adding api/mode.js \n*/\n\n\nGlaemscribe.ModeDebugContext = function()\n{\n  this.preprocessor_output  = \"\";\n  this.processor_pathes     = [];\n  this.processor_output     = [];\n  this.postprocessor_output = \"\";\n  \n  return this;\n}\n\n\nGlaemscribe.Mode = function(mode_name) {\n  this.name                 = mode_name;\n  this.supported_charsets   = {};\n  this.options              = {};\n  this.errors               = [];\n  this.warnings             = [];\n  this.latest_option_values = {};\n  this.has_tts              = false;\n  this.current_tts_voice    = null;\n  \n  this.raw_mode_name        = null;\n\n  this.pre_processor    = new Glaemscribe.TranscriptionPreProcessor(this);\n  this.processor        = new Glaemscribe.TranscriptionProcessor(this);\n  this.post_processor   = new Glaemscribe.TranscriptionPostProcessor(this);\n  \n  return this;\n}\n\nGlaemscribe.Mode.prototype.finalize = function(options) {\n  \n  var mode = this;\n  \n  if(options == null)\n    options = {};\n  \n  // Hash: option_name => value_name\n  var trans_options = {};\n  \n  // Build default options\n  glaemEach(mode.options, function(oname, o) {\n    trans_options[oname] = o.default_value_name;\n  });\n  \n  // Push user options\n  glaemEach(options, function(oname, valname) {\n    // Check if option exists\n    var opt = mode.options[oname];\n    if(!opt)\n      return true; // continue\n    var val = opt.value_for_value_name(valname)\n    if(val == null)\n      return true; // value name is not valid\n    \n    trans_options[oname] = valname;\n  });\n    \n  var trans_options_converted = {};\n \n  // Do a conversion to values space\n  glaemEach(trans_options, function(oname,valname) {\n    trans_options_converted[oname] = mode.options[oname].value_for_value_name(valname);\n  });\n\n  // Add the option defined constants to the whole list for evaluation purposes\n  glaemEach(mode.options, function(oname, o) {\n    // For enums, add the values as constants for the evaluator\n    if(o.type == Glaemscribe.Option.Type.ENUM )\n    {\n      glaemEach(o.values, function(name,val) {\n        trans_options_converted[name] = val\n      });\n    }\n  });   \n  \n  this.latest_option_values = trans_options_converted;\n    \n  this.pre_processor.finalize(this.latest_option_values);\n  this.post_processor.finalize(this.latest_option_values);\n  this.processor.finalize(this.latest_option_values);\n  \n  if(mode.get_raw_mode())\n    mode.get_raw_mode().finalize(options);\n  \n  if(this.has_tts) {\n    var espeak_option       = mode.options['espeak_voice'].value_name_for_value(mode.latest_option_values['espeak_voice'])\n    this.current_tts_voice  = Glaemscribe.TTS.option_name_to_voice(espeak_option)\n  }\n  \n  return this;\n}\n\nGlaemscribe.Mode.prototype.get_raw_mode = function() {\n  var mode = this;\n  \n  if(mode.raw_mode != null)\n    return mode.raw_mode;\n  \n  var loaded_raw_mode = (mode.raw_mode_name && Glaemscribe.resource_manager.loaded_modes[mode.raw_mode_name]);\n  if(loaded_raw_mode == null)\n    return null;\n  \n  mode.raw_mode = Object.glaem_clone(loaded_raw_mode);\n  return mode.raw_mode;\n}\n\nGlaemscribe.Mode.prototype.strict_transcribe = function(content, charset, debug_context) {\n  \n  var mode = this;\n\n  if(charset == null)\n    charset = this.default_charset;\n  \n  if(charset == null)\n    return [false, \"*** No charset usable for transcription. Failed!\"];\n\n  // TTS pre-transcription\n  if(mode.has_tts) {\n    try {\n      // Pre-ipa conversion with TTS engine\n      var esp = new Glaemscribe.TTS(); \n      var res = esp.synthesize_ipa(content,{voice: mode.current_tts_voice, has_raw_mode: (mode.get_raw_mode() != null) });\n      content = res['ipa'];\n\n      debug_context.tts_output += content;\n    } catch(e) {\n      return [false, \"TTS pre-transcription failed : \" + e];\n    }\n  }\n\n  var ret   = \"\"\n  var lines = content.split(/(\\n)/);\n  \n  for(var i=0;i<lines.length;i++)\n  {\n    var l = lines[i];\n    var restore_lf = false;\n    \n    if(l[l.length-1] == \"\\n\")\n    {\n      restore_lf = true;\n      l = l.slice(0,-1);\n    }\n    \n    l = this.pre_processor.apply(l);\n    debug_context.preprocessor_output += l + \"\\n\";\n    \n    l = this.processor.apply(l, debug_context);\n    debug_context.processor_output = debug_context.processor_output.concat(l);\n    \n    l = this.post_processor.apply(l, charset);\n    debug_context.postprocessor_output += l + \"\\n\";\n\n    if(restore_lf)\n      l += \"\\n\";\n    \n    ret += l;\n  }\n\n  return [true, ret, debug_context];  \n}\n\nGlaemscribe.Mode.prototype.transcribe = function(content, charset) {\n\n  var mode          = this;\n  var debug_context = new Glaemscribe.ModeDebugContext();\n\n  var raw_mode      = mode.get_raw_mode();\n\n  var ret = \"\";\n  var res = true;\n  \n  debug_context.tts_output = \"\";\n \n  if(raw_mode != null)\n  {\n    var chunks = content.split(/({{[\\s\\S]*?}})/);\n       \n    glaemEach(chunks, function(_,c) {\n      var rmatch = null;\n      \n      var to_transcribe = c;\n      var tr_mode       = mode;\n      \n      if(rmatch = c.match(/{{([\\s\\S]*?)}}/))\n      {\n        to_transcribe = rmatch[1];\n        tr_mode       = raw_mode;\n        // Don't forget to keep raw things inside tts output\n        // debug_context.tts_output += \"{{\" + to_transcribe + \"}}\";\n      }\n      \n      var rr = tr_mode.strict_transcribe(to_transcribe,charset,debug_context);\n      var succ = rr[0]; var r = rr[1]; \n      \n      if(!succ)\n        return [false, r , debug_context];\n        \n      ret += r;   \n    });\n  }\n  else\n  {\n    var rr = mode.strict_transcribe(content,charset,debug_context);\n    var succ = rr[0]; var r = rr[1]; \n\n    if(!succ)\n      return [false, r , debug_context];\n      \n    ret += r;   \n  }\n    \n  return [res, ret, debug_context];  \n}\n\n\n\n/*\n  Adding api/option.js \n*/\n\n\nGlaemscribe.Option = function(mode, name, default_value_name, values, line, visibility)\n{\n  var option = this;\n  \n  this.mode               = mode;\n  this.name               = name;\n  this.default_value_name = default_value_name;\n  this.type               = (Object.keys(values).length == 0)?(Glaemscribe.Option.Type.BOOL):(Glaemscribe.Option.Type.ENUM);\n  this.values             = values;\n  this.visibility         = visibility;\n  this.line               = line;\n  \n  option.value_to_names     = {};\n  glaemEach(option.values, function(vname,v) {\n    option.value_to_names[v] = vname;\n  });\n  \n  return this;\n}\nGlaemscribe.Option.Type = {};\nGlaemscribe.Option.Type.BOOL = \"BOOL\";\nGlaemscribe.Option.Type.ENUM = \"ENUM\";\n\n\nGlaemscribe.Option.prototype.default_value = function()\n{\n  if(this.type == Glaemscribe.Option.Type.BOOL)\n    return (this.default_value_name == 'true')\n  else\n    return this.values[this.default_value_name];\n}\n\nGlaemscribe.Option.prototype.value_for_value_name = function(val_name)\n{\n  if(this.type == Glaemscribe.Option.Type.BOOL)\n  {\n    if(val_name == 'true' || val_name == true)\n      return true;\n    \n    if(val_name == 'false' || val_name == false)\n      return false;\n    \n    return null;\n  }\n  else\n  {\n    return this.values[val_name];\n  }\n}\n\n\nGlaemscribe.Option.prototype.value_name_for_value = function(value) {\n  if(this.type == Glaemscribe.Option.Type.BOOL)\n  {\n    if(value == true  || value == \"true\")     return \"true\";\n    if(value == false || value == \"false\")    return \"false\";\n\n    return null;    \n  }\n  else\n  {\n    return this.value_to_names[value];\n  }\n}\n  \nGlaemscribe.Option.prototype.is_visible = function() {\n  var if_eval = new Glaemscribe.Eval.Parser;\n        \n  var res = false;\n  \n  try\n  {\n    res = if_eval.parse(this.visibility || \"true\", this.mode.latest_option_values || {});\n    return (res == true);\n  }\n  catch(err)\n  {\n    console.log(err);\n    return null;\n  }                \n}\n\n\n/*\n  Adding api/macro.js \n*/\n\n\nGlaemscribe.Macro = function(rule_group, name, arg_names) {\n  var macro = this;\n  macro.rule_group = rule_group;\n  macro.module     = rule_group.mode;\n  macro.name       = rule_group.name;\n  macro.arg_names  = arg_names;\n  macro.root_code_block = new Glaemscribe.IfTree.CodeBlock();\n}\n\n\n/*\n  Adding api/mode_parser.js \n*/\n\n\nGlaemscribe.ModeParser = function() { \n  return this;\n}\n\nGlaemscribe.ModeParser.prototype.validate_presence_of_args = function(node, arg_count)\n{\n  var parser  = this;\n  \n  if(arg_count != null)\n  {\n    if(node.args.length != arg_count)\n      parser.mode.errors.push(new Glaemscribe.Glaeml.Error(node.line,\"Element '\" + node.name + \"' should have \" + arg_count + \" arguments.\"));\n  }\n}  \n\nGlaemscribe.ModeParser.prototype.validate_presence_of_children = function(parent_node, elt_name, elt_count, arg_count) {\n  \n  var parser  = this;\n  var res     = parent_node.gpath(elt_name);\n  \n  if(elt_count)\n  {\n    if(res.length != elt_count)\n       parser.mode.errors.push(new Glaemscribe.Glaeml.Error(parent_node.line,\"Element '\" + parent_node.name + \"' should have exactly \" + elt_count + \" children of type '\" + elt_name + \"'.\"));\n  }\n  if(arg_count)\n  {\n    glaemEach(res, function(c,child_node) {\n      parser.validate_presence_of_args(child_node, arg_count)\n    });\n  }\n}\n\n// Very simplified 'dtd' like verification\nGlaemscribe.ModeParser.prototype.verify_mode_glaeml = function(doc)\n{\n  var parser  = this;\n\n  parser.validate_presence_of_children(doc.root_node, \"language\", 1, 1);\n  parser.validate_presence_of_children(doc.root_node, \"writing\",  1, 1);\n  parser.validate_presence_of_children(doc.root_node, \"mode\",     1, 1);\n  parser.validate_presence_of_children(doc.root_node, \"authors\",  1, 1);\n  parser.validate_presence_of_children(doc.root_node, \"version\",  1, 1);\n \n  glaemEach(doc.root_node.gpath(\"charset\"), function (ce, charset_element) {\n    parser.validate_presence_of_args(charset_element, 2);\n  });\n \n  glaemEach(doc.root_node.gpath(\"options.option\"), function (oe, option_element) {\n    parser.validate_presence_of_args(option_element, 2);\n    glaemEach(option_element.gpath(\"value\"), function (ve, value_element) {\n      parser.validate_presence_of_args(value_element, 2);\n    });\n  });\n  \n  glaemEach(doc.root_node.gpath(\"outspace\"), function (oe, outspace_element) {\n    parser.validate_presence_of_args(outspace_element, 1);\n  });\n\n  glaemEach(doc.root_node.gpath(\"processor.rules\"), function (re, rules_element) {\n    parser.validate_presence_of_args(rules_element, 1);\n    parser.validate_presence_of_children(rules_element,\"if\",null,1);\n    parser.validate_presence_of_children(rules_element,\"elsif\",null,1);\n  });\n\n  glaemEach(doc.root_node.gpath(\"preprocessor.if\"), function (re, rules_element) { parser.validate_presence_of_args(rules_element,  1) });\n  glaemEach(doc.root_node.gpath(\"preprocessor.elsif\"), function (re, rules_element) { parser.validate_presence_of_args(rules_element,  1) });\n  glaemEach(doc.root_node.gpath(\"postprocessor.if\"), function (re, rules_element) { parser.validate_presence_of_args(rules_element,  1) });\n  glaemEach(doc.root_node.gpath(\"postprocessor.elsif\"), function (re, rules_element) { parser.validate_presence_of_args(rules_element,  1) });\n}\n\nGlaemscribe.ModeParser.prototype.create_if_cond_for_if_term = function(line, if_term, cond)\n{\n  var ifcond                          = new Glaemscribe.IfTree.IfCond(line, if_term, cond);\n  var child_code_block                = new Glaemscribe.IfTree.CodeBlock(ifcond);\n  ifcond.child_code_block             = child_code_block;                \n  if_term.if_conds.push(ifcond);   \n  return ifcond;            \n}\n\nGlaemscribe.ModeParser.prototype.traverse_if_tree = function(context, text_procedure, element_procedure)\n{\n  var mode                      = this.mode;\n  var owner                     = context.owner;\n  var root_element              = context.root_element;\n  var rule_group                = context.rule_group;\n  var root_code_block           = owner.root_code_block;\n  var current_parent_code_block = root_code_block;\n  \n  for(var c = 0;c<root_element.children.length;c++)\n  {\n    var child = root_element.children[c];\n              \n    if(child.is_text())\n    {\n      if(text_procedure != null)\n        text_procedure(current_parent_code_block,child);\n      \n      continue;\n    }\n    \n    if(child.is_element())\n    {\n      switch(child.name)\n      {\n      case 'if':\n        \n        var cond_attribute                  = child.args[0];\n        var if_term                         = new Glaemscribe.IfTree.IfTerm(current_parent_code_block);\n        current_parent_code_block.terms.push(if_term) ;            \n        var if_cond                         = this.create_if_cond_for_if_term(child.line, if_term, cond_attribute);\n        current_parent_code_block           = if_cond.child_code_block;\n               \n        break;\n      case 'elsif':\n        \n        var cond_attribute                  = child.args[0];\n        var if_term                         = current_parent_code_block.parent_if_cond.parent_if_term;\n          \n        if(if_term == null)\n        {\n          mode.errors.push(new Glaemscribe.Glaeml.Error(child.line, \"'elsif' without a 'if'.\"));\n          return;\n        }\n        \n        // TODO : check that precendent one is a if or elseif\n        var if_cond                         = this.create_if_cond_for_if_term(child.line, if_term,cond_attribute);\n        current_parent_code_block           = if_cond.child_code_block;\n          \n        break;\n      case 'else':\n        \n        var if_term                         = current_parent_code_block.parent_if_cond.parent_if_term; \n        \n        if(if_term == null)\n        {\n          mode.errors.push(new Glaemscribe.Glaeml.Error(child.line, \"'else' without a 'if'.\"));\n          return;\n        }\n        \n        // TODO : check if precendent one is a if or elsif\n        var if_cond                         = this.create_if_cond_for_if_term(child.line, if_term,\"true\");\n        current_parent_code_block           = if_cond.child_code_block;\n          \n        break;\n      case 'endif':\n        \n        var if_term                         = current_parent_code_block.parent_if_cond.parent_if_term;  \n      \n        if(if_term == null)\n        {\n          mode.errors.push(new Glaemscribe.Glaeml.Error(child.line, \"'endif' without a 'if'.\"));\n          return;\n        }\n        \n        current_parent_code_block           = if_term.parent_code_block;\n              \n        break;\n        \n      case 'macro':\n        \n        // Macro definition, cannot be defined in conditional blocks\n        if(current_parent_code_block.parent_if_cond || root_element.name != \"rules\") {\n          mode.errors.push(new Glaemscribe.Glaeml.Error(child.line, \"Macros can only defined in the 'rules' scope, not in a conditional block (because they are replaced and used at parsing time) or a macro block (local macros are not handled).\"));\n          return;      \n        }\n        \n        if(!child.args || child.args.length == 0) {\n          mode.errors.push(new Glaemscribe.Glaeml.Error(child.line, \"Macro misses a name.\"));\n          return;   \n        }\n\n        var macro_args = child.args.slice(0);\n        var macro_name = macro_args.shift();\n        glaemEach(macro_args,  function(_,arg) {\n          if(!arg.match(/[0-9A-Z_]+/)) {\n            mode.errors.push(new Glaemscribe.Glaeml.Error(child.line, \"Macro argument name \" + arg + \" has wrong format.\"));\n            return;\n          }\n        });\n        \n        if(rule_group.macros[macro_name] != null) {\n          mode.errors.push(new Glaemscribe.Glaeml.Error(child.line, \"Redefining macro \" + macro_name + \".\"));\n          return;           \n        }\n        \n        var macro         = new Glaemscribe.Macro(rule_group,macro_name,macro_args);\n        var macro_context = {owner: macro, root_element: child, rule_group: rule_group};\n        \n        this.traverse_if_tree(macro_context, text_procedure, element_procedure);\n\n        rule_group.macros[macro_name] = macro;\n      \n        break;\n      case 'deploy':\n\n        if(!rule_group) {\n          mode.errors.push(new Glaemscribe.Glaeml.Error(child.line,\"Macros can only be deployed in a rule group.\"));\n          return;   \n        }\n\n        var macro_args = child.args.slice(0);\n        var macro_name = macro_args.shift();\n        var macro      = rule_group.macros[macro_name]\n\n        if(macro == null) {\n          mode.errors.push(new Glaemscribe.Glaeml.Error(child.line,\"Macro '\" + macro_name + \"' not found in rule group '\" + rule_group.name + \"'.\"));\n          return;   \n        }\n\n        var wanted_argcount = macro.arg_names.length;\n        var given_argcount  = macro_args.length;\n        \n        if(wanted_argcount != given_argcount) {\n          mode.errors.push(new Glaemscribe.Glaeml.Error(child.line,\"Macro '\" + macro_name + \"' takes \" + wanted_argcount + \" arguments, not \" + given_argcount + \".\"));\n          return;          \n        }\n\n        var macro_node = new Glaemscribe.IfTree.MacroDeployTerm(macro, child.line, current_parent_code_block, macro_args);\n        current_parent_code_block.terms.push(macro_node);\n        \n        break;\n        \n      default:\n        \n        // Do something with this child element\n        if(element_procedure != null)\n          element_procedure(current_parent_code_block, child);            \n        \n        break;\n      }\n    }\n  }\n  \n  if(current_parent_code_block.parent_if_cond)\n    mode.errors.push(new Glaemscribe.Glaeml.Error(child.line, \"Unended 'if' at the end of this '\" + root_element.name + \"' element.\"));\n\n}\n\nGlaemscribe.ModeParser.prototype.parse_pre_post_processor = function(processor_element, pre_not_post)\n{\n  var mode = this.mode;\n  \n  // Do nothing with text elements\n  var text_procedure    = function(current_parent_code_block, element) {}             \n  var element_procedure = function(current_parent_code_block, element) {\n        \n    // A block of operators. Put them in a PrePostProcessorOperatorsTerm.   \n    var term = current_parent_code_block.terms[current_parent_code_block.terms.length-1];\n\n    if(term == null || !term.is_pre_post_processor_operators() )\n    {\n      term = new Glaemscribe.IfTree.PrePostProcessorOperatorsTerm(current_parent_code_block);\n      current_parent_code_block.terms.push(term);\n    }\n    \n    var operator_name   = element.name; \n    var operator_class  = null;\n    var procname        = \"Preprocessor\";\n      \n    if(pre_not_post)\n      operator_class = Glaemscribe.resource_manager.class_for_pre_processor_operator_name(operator_name);\n    else\n      operator_class = Glaemscribe.resource_manager.class_for_post_processor_operator_name(operator_name);\n  \n    if(!operator_class)\n    {\n      mode.errors.push(new Glaemscribe.Glaeml.Error(element.line, \"Operator '\" + operator_name + \"' is unknown.\"));\n    }\n    else\n    {         \n      term.operators.push(new operator_class(element.clone()));     \n    }     \n  }  \n  \n  var processor_context = {\n    owner:        ((pre_not_post)?(mode.pre_processor):(mode.post_processor)),\n    root_element: processor_element,\n    rule_group:   null\n  }\n  \n  this.traverse_if_tree(processor_context, text_procedure, element_procedure )                       \n}\n\nGlaemscribe.ModeParser.prototype.parse_raw = function(mode_name, raw, mode_options) {\n\n  var mode    = new Glaemscribe.Mode(mode_name);\n  this.mode   = mode;\n  mode.raw    = raw;\n  \n  if(raw == null)\n  {\n    mode.errors.push(new Glaemscribe.Glaeml.Error(0, \"No sourcecode. Forgot to load it?\"));\n    return mode;\n  }\n\n  if(mode_options == null)\n    mode_options = {};\n \n  var doc     = new Glaemscribe.Glaeml.Parser().parse(raw);\n  if(doc.errors.length > 0)\n  {\n    mode.errors = doc.errors\n    return mode;\n  }\n  \n  this.verify_mode_glaeml(doc);\n  \n  if(mode.errors.length > 0)\n    return mode;\n    \n  mode.language    = doc.root_node.gpath('language')[0].args[0]\n  mode.writing     = doc.root_node.gpath('writing')[0].args[0]\n  mode.human_name  = doc.root_node.gpath('mode')[0].args[0]\n  mode.authors     = doc.root_node.gpath('authors')[0].args[0]\n  mode.version     = doc.root_node.gpath('version')[0].args[0]\n  mode.invention   = (doc.root_node.gpath('invention')[0] || {args:[]}).args[0]\n  mode.world       = (doc.root_node.gpath('world')[0] || {args:[]}).args[0]\n  mode.raw_mode_name = (doc.root_node.gpath('raw_mode')[0] || {args:[]}).args[0]    \n  \n  glaemEach(doc.root_node.gpath('options.option'), function(_,option_element) {\n\n    var values          = {};\n    var visibility      = null;\n    var is_radio        = false;\n    \n    glaemEach(option_element.gpath('value'), function(_, value_element) {\n      var value_name                = value_element.args[0];\n      values[value_name]            = parseInt(value_element.args[1]);    \n    });\n    glaemEach(option_element.gpath('visible_when'), function(_, visible_element) {\n      visibility = visible_element.args[0];\n    });    \n    glaemEach(option_element.gpath('radio'), function(_,__) { is_radio = true });\n\n    var option_name_at          = option_element.args[0];\n    var option_default_val_at   = option_element.args[1];\n    // TODO: check syntax of the option name\n    \n    if(option_default_val_at == null)\n    {\n      mode.errors.push(new Glaemscribe.Glaeml.Error(option_element.line, \"Missing option 'default' value.\"));\n    }\n    \n    var option                = new Glaemscribe.Option(mode, option_name_at, option_default_val_at, values, option_element.line, visibility);\n    option.is_radio           = is_radio;\n    mode.options[option.name] = option;\n  }); \n  \n  var charset_elements   = doc.root_node.gpath('charset');\n \n  for(var c=0; c<charset_elements.length; c++)\n  { \n    var charset_element     = charset_elements[c];\n\n    var charset_name        = charset_element.args[0];\n    var charset             = Glaemscribe.resource_manager.loaded_charsets[charset_name];\n    \n    if(!charset)\n    {\n      Glaemscribe.resource_manager.load_charsets([charset_name]);\n      charset = Glaemscribe.resource_manager.loaded_charsets[charset_name]; \n    }\n    \n    if(charset)\n    {\n      if(charset.errors.length > 0)\n      {\n        for(var e=0; e<charset.errors.length; e++)\n        {\n          var err = charset.errors[e];\n          mode.errors.push(new Glaemscribe.Glaeml.Error(charset_element.line, charset_name + \":\" + err.line + \":\" + err.text));\n        }\n        return mode;\n      }\n      \n      mode.supported_charsets[charset_name] = charset;\n      var is_default = charset_element.args[1];\n      if(is_default && is_default == \"true\")\n        mode.default_charset = charset\n    }\n    else\n    {\n      mode.warnings.push(new Glaemscribe.Glaeml.Error(charset_element.line, \"Failed to load charset '\" + charset_name + \"'.\"));\n    }\n  }\n   \n  if(!mode.default_charset)\n  {\n    mode.warnings.push(new Glaemscribe.Glaeml.Error(0, \"No default charset defined!!\")); \n  }\n    \n  // Read the preprocessor\n  var preprocessor_element  = doc.root_node.gpath(\"preprocessor\")[0];\n  if(preprocessor_element)\n    this.parse_pre_post_processor(preprocessor_element, true);\n  \n  // Read the postprocessor\n  var postprocessor_element  = doc.root_node.gpath(\"postprocessor\")[0];\n  if(postprocessor_element)\n    this.parse_pre_post_processor(postprocessor_element, false);\n    \n  var outspace_element   = doc.root_node.gpath('outspace')[0];\n  if(outspace_element)\n  {\n    var val                        = outspace_element.args[0];\n    mode.post_processor.out_space  = stringListToCleanArray(val,/\\s/);   \n  } \n \n  var rules_elements  = doc.root_node.gpath('processor.rules');\n  \n  for(var re=0; re<rules_elements.length; re++)\n  {\n    var rules_element = rules_elements[re];\n    \n    var rule_group_name                               = rules_element.args[0]; \n    var rule_group                                    = new Glaemscribe.RuleGroup(mode, rule_group_name)\n    mode.processor.rule_groups[rule_group_name]       = rule_group\n\n    var text_procedure = function(current_parent_code_block, element) {        \n  \n      // A block of code lines. Put them in a codelinesterm.   \n      var term = current_parent_code_block.terms[current_parent_code_block.terms.length-1];\n      if(term == null || !term.is_code_lines() )\n      {\n        term = new Glaemscribe.IfTree.CodeLinesTerm(current_parent_code_block);\n        current_parent_code_block.terms.push(term);\n      }\n      \n      var lcount          = element.line;\n      var lines           = element.args[0].split(\"\\n\");\n      \n      for(var l=0; l < lines.length; l++)\n      {\n        var line        = lines[l].trim();       \n        var codeline    = new Glaemscribe.IfTree.CodeLine(line, lcount);\n        term.code_lines.push(codeline);  \n        lcount += 1;\n      }                 \n    }\n    \n    var element_procedure = function(current_parent_code_block, element) {     \n      // This is fatal.\n      mode.errors.push(new Glaemscribe.Glaeml.Error(element.line, \"Unknown directive \" + element.name + \".\"));\n    }  \n    \n    var processor_context = {\n      owner:        rule_group,\n      root_element: rules_element,\n      rule_group:   rule_group\n    }\n    \n    this.traverse_if_tree(processor_context, text_procedure, element_procedure );                 \n  }\n \n  var espeak_option = mode.options['espeak_voice'];\n  if(espeak_option) {\n    // IN JS, TTS ENGINE SHOULD BE LOADED SEPARATELY AND MAYBE AFTERWARDS OR ASYNCHRONOUSLY. DON'T LOAD HERE.\n    // TTS::load_engine\n    mode.has_tts = true;\n    \n    glaemEach(espeak_option.values, function(vname,_) {\n      var voice = Glaemscribe.TTS.option_name_to_voice(vname);\n      // Even if the TTS engine may not be loaded, the wrapper is. \n      // As such, we can check if voices are correct here.\n      if(!Glaemscribe.TTS.voice_list().includes(voice)) {\n        mode.errors.push(new Glaemscribe.Glaeml.Error(espeak_option.line, \"Option has unhandled voice  \" + voice + \".\"));\n      }  \n    });\n  }\n  \n  if(mode.errors.length == 0)\n    mode.finalize(mode_options);\n\n  return mode;  \n}\n\nGlaemscribe.ModeParser.prototype.parse = function(mode_name) {\n  var parser  = this;\n  var raw     = Glaemscribe.resource_manager.raw_modes[mode_name];\n  return parser.parse_raw(mode_name, raw);\n}\n\n/*\n  Adding api/rule.js \n*/\n\n\nGlaemscribe.Rule = function(line, rule_group) {\n  this.line       = line;\n  this.rule_group = rule_group;\n  this.mode       = rule_group.mode;\n  this.sub_rules  = [];\n  this.errors     = [];\n}\n\nGlaemscribe.Rule.prototype.finalize = function(cross_schema) {\n  \n  if(this.errors.length > 0)\n  {\n    for(var i=0; i<this.errors.length; i++)\n    {\n      var e = this.errors[i];\n      this.mode.errors.push(new Glaemscribe.Glaeml.Error(this.line, e));\n    }\n    return;    \n  }\n\n  var srccounter  = new Glaemscribe.SheafChainIterator(this.src_sheaf_chain)\n  var dstcounter  = new Glaemscribe.SheafChainIterator(this.dst_sheaf_chain, cross_schema)\n  \n  if(srccounter.errors.length > 0)\n  {\n    for(var i=0; i<srccounter.errors.length; i++)\n    {\n      var e = srccounter.errors[i];\n      this.mode.errors.push(new Glaemscribe.Glaeml.Error(this.line, e));\n    }\n    return;\n  }  \n  if(dstcounter.errors.length > 0)\n  {\n    for(var i=0; i<dstcounter.errors.length; i++)\n    {\n      var e = dstcounter.errors[i];\n      this.mode.errors.push(new Glaemscribe.Glaeml.Error(this.line, e));\n    }\n    return;\n  }  \n\n  var srcp = srccounter.proto();\n  var dstp = dstcounter.proto();\n  \n  if(srcp != dstp)\n  {\n    this.mode.errors.push(new Glaemscribe.Glaeml.Error(this.line, \"Source and destination are not compatible (\" + srcp + \" vs \" + dstp + \")\"));\n    return;\n  }\n  \n  do {\n    \n    // All equivalent combinations ...\n    var src_combinations  = srccounter.combinations(); \n    // ... should be sent to one destination\n    var dst_combination   = dstcounter.combinations()[0];\n    \n    for(var c=0;c<src_combinations.length;c++)\n    {\n      var src_combination = src_combinations[c];\n      this.sub_rules.push(new Glaemscribe.SubRule(this, src_combination, dst_combination));\n    }\n\n    dstcounter.iterate()\n  }\n  while(srccounter.iterate())\n}\n\n\n/*\n  Adding api/rule_group.js \n*/\n\n\nGlaemscribe.RuleGroupVar = function(name, value, is_pointer) {\n\n  this.name       = name;\n  this.value      = value;\n  this.is_p       = is_pointer;\n}\n\nGlaemscribe.RuleGroupVar.prototype.is_pointer = function() {\n  return this.is_p;\n}\n\n////////\n\nGlaemscribe.RuleGroup = function(mode,name) {\n  this.name             = name;\n  this.mode             = mode;\n  this.macros           = {}\n  this.root_code_block  = new Glaemscribe.IfTree.CodeBlock();       \n  \n  return this;\n}\n\nGlaemscribe.RuleGroup.VAR_NAME_REGEXP             = /{([0-9A-Z_]+)}/g;\nGlaemscribe.RuleGroup.VAR_DECL_REGEXP             = /^\\s*{([0-9A-Z_]+)}\\s+===\\s+(.+?)\\s*$/\nGlaemscribe.RuleGroup.POINTER_VAR_DECL_REGEXP     = /^\\s*{([0-9A-Z_]+)}\\s+<=>\\s+(.+?)\\s*$/\nGlaemscribe.RuleGroup.UNICODE_VAR_NAME_REGEXP_IN  = /^UNI_([0-9A-F]+)$/\nGlaemscribe.RuleGroup.UNICODE_VAR_NAME_REGEXP_OUT = /{UNI_([0-9A-F]+)}/\nGlaemscribe.RuleGroup.RULE_REGEXP                 = /^\\s*(.*?)\\s+-->\\s+(.+?)\\s*$/\nGlaemscribe.RuleGroup.CROSS_SCHEMA_REGEXP         = /[0-9]+(\\s*,\\s*[0-9]+)*/\nGlaemscribe.RuleGroup.CROSS_RULE_REGEXP           = /^\\s*(.*?)\\s+-->\\s+([0-9]+(\\s*,\\s*[0-9]+)*|{([0-9A-Z_]+)}|identity)\\s+-->\\s+(.+?)\\s*$/\n\n\nGlaemscribe.RuleGroup.prototype.add_var = function(var_name, value, is_pointer) {\n  this.vars[var_name] = new Glaemscribe.RuleGroupVar(var_name,value,is_pointer);\n}\n\n// Replace all vars in expression\nGlaemscribe.RuleGroup.prototype.apply_vars = function(line,string,allow_unicode_vars) {\n  var rule_group  = this;\n  var mode        = this.mode;\n  var goterror    = false;  \n  \n  var ret               = string;  \n  var had_replacements  = true;\n  var stack_depth       = 0;\n  \n  while(had_replacements) {\n    \n    had_replacements = false;\n    ret = ret.replace(Glaemscribe.RuleGroup.VAR_NAME_REGEXP, function(match,p1,offset,str) { \n      var vname = p1;\n      var v     = rule_group.vars[vname];\n      var rep   = null;\n\n      if(v == null)\n      {\n        if(Glaemscribe.RuleGroup.UNICODE_VAR_NAME_REGEXP_IN.exec(vname))\n        {\n          // A unicode variable.\n          if(allow_unicode_vars)\n          {\n            // Just keep this variable intact, it will be replaced at the last moment of the parsing\n            rep = match;\n          }\n          else\n          {\n            mode.errors.push(new Glaemscribe.Glaeml.Error(line, \"In expression: \"+ string + \": making wrong use of unicode variable: \" + match + \". Unicode vars can only be used in source members of a rule or in the definition of another variable.\"))\n            goterror = true;\n            return \"\"; \n          }  \n        }\n        else\n        {\n          mode.errors.push(new Glaemscribe.Glaeml.Error(line, \"In expression: \"+ string + \": failed to evaluate variable: \" + match + \".\"));\n          goterror = true;\n          return \"\"; \n        }      \n      }\n      else\n      {\n        rep = v.value;\n        // Only count replacements on non unicode vars\n        had_replacements = true;\n      }\n    \n      return rep;\n    });\n    \n    if(goterror)\n      return null;\n    \n    stack_depth += 1\n    \n    if(!had_replacements)\n      break;\n    \n    if(stack_depth > 16)\n    {\n      mode.errors.push(new Glaemscribe.Glaeml.Error(line, \"In expression: \"+ string + \": evaluation stack overflow.\"));\n      return nil;\n    }\n    \n  }\n    \n  return ret;\n}\n\nGlaemscribe.RuleGroup.prototype.descend_if_tree = function(code_block,options)\n{    \n  var rule_group  = this;\n  var mode        = this.mode;\n  \n  for(var t=0; t < code_block.terms.length; t++)\n  {\n    var term = code_block.terms[t];           \n           \n    if(term.is_code_lines())\n    {\n      for(var o=0; o<term.code_lines.length; o++)\n      {\n        var cl = term.code_lines[o];\n        this.finalize_code_line(cl);\n      } \n    }\n    else if(term.is_macro_deploy()) \n    {      \n      // Ok this is a bit dirty but I don't want to rewrite the error managamenet\n      // So add an error and if it's still the last (meaning there were no error) one remove it      \n      var possible_error = new Glaemscribe.Glaeml.Error(term.line,  \">> Macro backtrace : \" + term.macro.name + \"\");\n      mode.errors.push(possible_error);\n    \n      // First, test if variable is pushable\n      var arg_values = []\n      glaemEach(term.macro.arg_names, function(i,arg_name) {\n        var var_value = null;\n        \n        if(rule_group.vars[arg_name]) {\n          mode.errors.push(new Glaemscribe.Glaeml.Error(term.line, \"Local variable \" + arg_name + \" hinders a variable with the same name in this context. Use only local variable names in macros!\"));\n        }\n        else\n        {\n          // Evaluate local var\n          var var_value_ex  = term.arg_value_expressions[i];\n          var var_value     = rule_group.apply_vars(term.line, var_value_ex, true)      \n        \n          if(var_value == null) {\n            mode.errors.push(new Glaemscribe.Glaeml.Error(term.line,  \"Thus, variable \" + var_name + \" could not be declared.\"));\n          }\n        }    \n        arg_values.push({name: arg_name, val: var_value});\n      });\n    \n      // We push local vars after the whole loop to avoid interferences between them when evaluating them\n      glaemEach(arg_values, function(_,v) {\n        if(v.val != null)\n          rule_group.add_var(v.name,v.val,false)\n      });\n\n      rule_group.descend_if_tree(term.macro.root_code_block, options)\n    \n      // Remove the local vars from the scope (only if they were leggit)\n      glaemEach(arg_values, function(_,v) {\n        if(v.val != null)\n          rule_group.vars[v.name] = null;\n      });\n              \n      if(mode.errors[mode.errors.length-1] == possible_error) {\n        // Remove the error scope if there were no errors\n        mode.errors.pop();\n      }\n      else\n      {\n        // Add another one to close the context\n        mode.errors.push(new Glaemscribe.Glaeml.Error(term.line,  \"<< Macro backtrace : \" + term.macro.name + \"\"));\n      }\n    }\n    else\n    { \n      for(var i=0; i<term.if_conds.length; i++)\n      {\n        var if_cond = term.if_conds[i];\n        var if_eval = new Glaemscribe.Eval.Parser;\n        \n        var res = false;\n        \n        try\n        {\n          res = if_eval.parse(if_cond.expression, options);\n        }\n        catch(err)\n        {\n          mode.errors.push(new Glaemscribe.Glaeml.Error(if_cond.line, \"Failed to evaluate condition '\" + if_cond.expression + \"'.\"));\n        }       \n        \n        if(res == true)\n        {\n          this.descend_if_tree(if_cond.child_code_block, options)\n          break;\n        }        \n      }        \n    }\n  }\n}\n\nGlaemscribe.RuleGroup.prototype.finalize_rule = function(line, match_exp, replacement_exp, cross_schema)\n{\n  var match             = this.apply_vars(line, match_exp, true);\n  var replacement       = this.apply_vars(line, replacement_exp, false);\n  \n  if(match == null || replacement == null) // Failed\n    return;\n\n  var rule              = new Glaemscribe.Rule(line, this);                             \n  rule.src_sheaf_chain  = new Glaemscribe.SheafChain(rule, match, true);\n  rule.dst_sheaf_chain  = new Glaemscribe.SheafChain(rule, replacement, false);\n   \n  rule.finalize(cross_schema);\n  \n  this.rules.push(rule);\n}\n\nGlaemscribe.RuleGroup.prototype.finalize_code_line = function(code_line) {\n\n  var mode = this.mode;\n  \n  var exp = Glaemscribe.RuleGroup.VAR_DECL_REGEXP.exec(code_line.expression);\n  if(exp)\n  {\n    var var_name      = exp[1];\n    var var_value_ex  = exp[2];\n    var var_value     = this.apply_vars(code_line.line, var_value_ex, true);\n        \n    if(var_value == null)\n    {\n      mode.errors.push(new Glaemscribe.Glaeml.Error(code_line.line, \"Thus, variable {\"+ var_name + \"} could not be declared.\"));\n      return;\n    }\n         \n    this.add_var(var_name,var_value,false);                         \n  }\n  else if(exp = Glaemscribe.RuleGroup.POINTER_VAR_DECL_REGEXP.exec(code_line.expression))\n  {\n    var var_name      = exp[1];\n    var var_value_ex  = exp[2];         \n    this.add_var(var_name,var_value_ex,true);    \n  }\n  else if(exp = Glaemscribe.RuleGroup.CROSS_RULE_REGEXP.exec(code_line.expression))\n  {\n    var match         = exp[1];\n    var cross         = exp[2];\n\n    var var_name      = exp[4];\n    var replacement   = exp[5];      \n    \n    if(var_name)\n    {\n      // This was a variable declaration           \n      var var_value = this.apply_vars(code_line.line, cross, false);\n      if(!var_value)\n      {\n        mode.errors.push(new Glaemscribe.Glaeml.Error(code_line.line, \"Thus, variable {\"+ var_name + \"} could not be declared.\"));\n        return;\n      }\n      cross = var_value;\n    }\n    \n    if(cross == \"identity\")\n      cross = null;    \n      \n    this.finalize_rule(code_line.line, match, replacement, cross)\n  }\n  else if(exp = Glaemscribe.RuleGroup.RULE_REGEXP.exec(code_line.expression ))\n  {\n    var match         = exp[1];\n    var replacement   = exp[2];\n\n    this.finalize_rule(code_line.line, match, replacement)\n  }\n  else if(code_line.expression == \"\")\n  {\n    // Do nothing\n  }\n  else\n  {\n    mode.errors.push(new Glaemscribe.Glaeml.Error(code_line.line, \": Cannot understand '\" + code_line.expression  + \"'.\"));\n  }\n}\n\nGlaemscribe.RuleGroup.prototype.finalize = function(options) {\n  var rule_group        = this;\n  \n  this.vars       = {}\n  this.in_charset = {}\n  this.rules      = []\n  \n  this.add_var(\"NULL\",\"\",false);\n \n  // Characters that are not easily entered or visible in a text editor\n  this.add_var(\"NBSP\",           \"{UNI_A0}\"  , false)\n  this.add_var(\"WJ\",             \"{UNI_2060}\", false)\n  this.add_var(\"ZWSP\",           \"{UNI_200B}\", false)\n  this.add_var(\"ZWNJ\",           \"{UNI_200C}\", false)        \n\n  // The following characters are used by the mode syntax.\n  // Redefine some convenient tools.\n  this.add_var(\"UNDERSCORE\",     \"{UNI_5F}\", false)\n  this.add_var(\"ASTERISK\",       \"{UNI_2A}\", false)\n  this.add_var(\"COMMA\",          \"{UNI_2C}\", false)\n  this.add_var(\"LPAREN\",         \"{UNI_28}\", false)\n  this.add_var(\"RPAREN\",         \"{UNI_29}\", false)\n  this.add_var(\"LBRACKET\",       \"{UNI_5B}\", false)\n  this.add_var(\"RBRACKET\",       \"{UNI_5D}\", false)\n\n  this.descend_if_tree(this.root_code_block, options)\n  \n  // Now that we have selected our rules, create the in_charset of the rule_group \n  rule_group.in_charset = {};\n  for(var r=0;r<rule_group.rules.length;r++)\n  {\n    var rule = rule_group.rules[r];\n    for(var sr=0;sr<rule.sub_rules.length;sr++)\n    {\n      var sub_rule  = rule.sub_rules[sr];      \n      var letters   = sub_rule.src_combination.join(\"\").split(\"\");\n      \n      for(var l=0;l<letters.length;l++)\n      {\n        var inchar = letters[l];\n        \n        // Ignore '\\u0000' (bounds of word) and '|' (word breaker)\n        if(inchar != Glaemscribe.WORD_BREAKER && inchar != Glaemscribe.WORD_BOUNDARY_TREE)\n          rule_group.in_charset[inchar] = rule_group;      \n      }\n    }\n  }\n}\n\n\n/*\n  Adding api/sub_rule.js \n*/\n\n\nGlaemscribe.SubRule = function(rule, src_combination, dst_combination)\n{\n  this.src_combination = src_combination;\n  this.dst_combination = dst_combination;\n}\n\n\n/*\n  Adding api/sheaf.js \n*/\n\n\nGlaemscribe.Sheaf = function(sheaf_chain, expression, linkable) {\n  \n  var sheaf = this;\n  \n  sheaf.sheaf_chain    = sheaf_chain;\n  sheaf.mode           = sheaf_chain.mode;\n  sheaf.rule           = sheaf_chain.rule;\n  sheaf.expression     = expression;\n  sheaf.linkable       = linkable;\n  \n  // The ruby function has -1 to tell split not to remove empty stirngs at the end\n  // Javascript does not need this\n  sheaf.fragment_exps  = expression.split(Glaemscribe.Sheaf.SHEAF_SEPARATOR).map(function(elt) {return elt.trim();});\n\n  if(sheaf.fragment_exps.length == 0)\n    sheaf.fragment_exps  = [\"\"]; \n           \n  sheaf.fragments = sheaf.fragment_exps.map(function(fragment_exp) { \n    return new Glaemscribe.Fragment(sheaf, fragment_exp)\n  });\n}\nGlaemscribe.Sheaf.SHEAF_SEPARATOR = \"*\"\n\nGlaemscribe.Sheaf.prototype.is_src = function() { return this.sheaf_chain.is_src; };\nGlaemscribe.Sheaf.prototype.is_dst = function() { return !this.sheaf_chain.is_src };\nGlaemscribe.Sheaf.prototype.mode   = function() { return this.sheaf_chain.mode(); };\n\n\n/*\n  Adding api/sheaf_chain.js \n*/\n\n\nGlaemscribe.SheafChain = function(rule, expression, is_src)\n{\n  var sheaf_chain = this;\n  \n  sheaf_chain.rule       = rule;\n  sheaf_chain.mode       = rule.mode;\n  sheaf_chain.is_src     = is_src;\n  sheaf_chain.expression = expression;\n   \n  sheaf_chain.sheaf_exps = stringListToCleanArray(expression,Glaemscribe.SheafChain.SHEAF_REGEXP_OUT)\n\n  sheaf_chain.sheaf_exps = sheaf_chain.sheaf_exps.map(function(sheaf_exp) { \n    var exp       =  Glaemscribe.SheafChain.SHEAF_REGEXP_IN.exec(sheaf_exp);\n    var linkable  = false;\n    if(exp) {\n      sheaf_exp   = exp[1];\n      linkable    = true;\n    }\n    \n    return { exp: sheaf_exp.trim(), linkable: linkable} ;\n  });\n\n  sheaf_chain.sheaves    = sheaf_chain.sheaf_exps.map(function(sd) { return new Glaemscribe.Sheaf(sheaf_chain, sd['exp'], sd['linkable']) });\n  \n  if(sheaf_chain.sheaves.length == 0)\n    sheaf_chain.sheaves    = [new Glaemscribe.Sheaf(sheaf_chain, \"\", false)]\n    \n  return sheaf_chain;    \n}\n\nGlaemscribe.SheafChain.SHEAF_REGEXP_IN    = /\\[(.*?)\\]/;\nGlaemscribe.SheafChain.SHEAF_REGEXP_OUT   = /(\\[.*?\\])/;\n\nGlaemscribe.SheafChain.prototype.mode = function() { return this.rule.mode() };\n\n/*\n  Adding api/sheaf_chain_iterator.js \n*/\n\n\nGlaemscribe.SheafChainIterator = function (sheaf_chain, cross_schema)\n{\n  var sci = this;\n  \n  sci.sheaf_chain = sheaf_chain;\n  sci.sizes       = sheaf_chain.sheaves.map(function(sheaf) {  return sheaf.fragments.length });\n   \n  sci.iterators   = sci.sizes.map(function(elt) { return 0;});\n  \n  sci.errors      = [];\n\n  var identity_cross_array  = []\n  var sheaf_count           = sheaf_chain.sheaves.length;\n\n  // Construct the identity array\n  for(var i=0;i<sheaf_count;i++)\n    identity_cross_array.push(i);\n  \n  // Make a list of linkable sheaves\n  var iterable_idxs   = [];\n  var prototype_array = [];\n  glaemEach(sheaf_chain.sheaves, function(i,sheaf) {\n    if(sheaf.linkable)\n    {\n      iterable_idxs.push(i);\n      prototype_array.push(sheaf.fragments.length);\n    }\n  });\n    \n  sci.cross_array = identity_cross_array;\n  sci.proto_attr  = prototype_array.join('x');\n  if(sci.proto_attr == '')\n    sci.proto_attr = 'CONST';\n\n  // Construct the cross array\n  if(cross_schema != null)\n  {\n    cross_schema    = cross_schema.split(\",\").map(function(i) { return parseInt(i) - 1 });\n\n    // Verify that the number of iterables is equal to the cross schema length\n    var it_count    = iterable_idxs.length;\n    var ca_count    = cross_schema.length;\n    \n    if(ca_count != it_count)\n    {\n      sci.errors.push(it_count + \" linkable sheaves found in right predicate, but \" + ca_count + \" elements in cross rule.\"); \n      return; \n    }\n    \n    // Verify that the cross schema is correct (should be a permutation of the identity)\n    var it_identity_array = [];\n    for(var i=0;i<it_count;i++)\n      it_identity_array.push(i);\n    \n    var sorted = cross_schema.slice(0).sort(); // clone and sort\n    \n    if (!arrayEquals(it_identity_array, sorted)) {\n      sci.errors.push(\"Cross rule schema should be a permutation of the identity (it should contain 1,2,..,n numbers once and only once).\");\n      return;\n    }\n    \n    var prototype_array_permutted = prototype_array.slice(0);\n    \n    // Now calculate the cross array\n    glaemEach(cross_schema, function(from,to) {\n      var to_permut = iterable_idxs[from];\n      var permut    = iterable_idxs[to];\n      sci.cross_array[to_permut] = permut;\n      prototype_array_permutted[from] = prototype_array[to];\n    });\n    prototype_array = prototype_array_permutted;\n  }\n\n  sci.proto_attr = prototype_array.join('x');\n  if(sci.proto_attr == '')\n    sci.proto_attr = 'CONST';\n}\n\n// Beware, 'prototype' is a reserved keyword\nGlaemscribe.SheafChainIterator.prototype.proto = function() {\n  var sci = this;\n  return sci.proto_attr;\n}\n\nGlaemscribe.SheafChainIterator.prototype.combinations = function()\n{\n  var sci = this;\n  var resolved = [];\n  \n  for(var i=0;i<sci.iterators.length;i++)\n  {\n    var counter   = sci.iterators[i];\n    var sheaf     = sci.sheaf_chain.sheaves[i];\n    \n    var fragment  = sheaf.fragments[counter];\n    resolved.push(fragment.combinations); \n  }\n    \n  var res = resolved[0]; \n  for(var i=0;i<resolved.length-1;i++)\n  {\n    var prod  = productizeArray(res, resolved[i+1]);\n    res = prod.map(function(elt) {\n      var e1 = elt[0];\n      var e2 = elt[1];\n      return e1.concat(e2);\n    }); \n  }\n  return res;\n}\n\nGlaemscribe.SheafChainIterator.prototype.iterate = function()\n{\n  var sci = this;\n  var pos = 0\n  \n  while(pos < sci.sizes.length)\n  {\n    var realpos = sci.cross_array[pos];\n    sci.iterators[realpos] += 1;\n    if(sci.iterators[realpos] >= sci.sizes[realpos])\n    {\n      sci.iterators[realpos] = 0;\n      pos += 1;\n    }\n    else\n      return true;\n  }\n  \n  // Wrapped!\n  return false  \n}\n\n\n/*\n  Adding api/if_tree.js \n*/\n\n\nGlaemscribe.IfTree = {}\n\n/* ================ */\n\nGlaemscribe.IfTree.IfCond = function(line, parent_if_term, expression)\n{\n  this.line = line;\n  this.parent_if_term = parent_if_term;\n  this.expression = expression;\n  return this;\n}\n\n/* ================ */\n\nGlaemscribe.IfTree.Term = function(parent_code_block)\n{\n  this.parent_code_block = parent_code_block;\n  return this;\n}\nGlaemscribe.IfTree.Term.prototype.is_code_lines = function()\n{\n  return false;\n}\nGlaemscribe.IfTree.Term.prototype.is_macro_deploy = function() {\n  return false;\n}\nGlaemscribe.IfTree.Term.prototype.is_pre_post_processor_operators = function()\n{\n  return false;\n}\nGlaemscribe.IfTree.Term.prototype.name = function()\n{\n  return \"TERM\"\n}\nGlaemscribe.IfTree.Term.prototype.dump = function(level)\n{\n  var str = \"\";\n  for(var i=0;i<level;i++)\n    str += \" \";\n  str += \"|-\" + this.name(); \n  console.log(str);\n}\n\n/* ================ */\n\nGlaemscribe.IfTree.IfTerm = function(parent_code_block)\n{\n  Glaemscribe.IfTree.Term.call(this,parent_code_block); //super\n  this.if_conds = [];\n  return this;\n}\nGlaemscribe.IfTree.IfTerm.inheritsFrom( Glaemscribe.IfTree.Term );  \n\nGlaemscribe.IfTree.IfTerm.prototype.name = function()\n{\n  return \"IF_TERM\";\n}\nGlaemscribe.IfTree.IfTerm.prototype.dump = function(level)\n{\n  this.parent.dump.call(this,level);\n  \n}\n\n/* ================ */\n\nGlaemscribe.IfTree.CodeLine = function(expression, line)\n{\n  this.expression = expression;\n  this.line       = line;\n  return this;\n}\n\n/* ================ */\n\nGlaemscribe.IfTree.PrePostProcessorOperatorsTerm = function(parent_code_block)\n{\n  Glaemscribe.IfTree.Term.call(this,parent_code_block); //super\n  this.operators = []\n  return this;\n}\nGlaemscribe.IfTree.PrePostProcessorOperatorsTerm.inheritsFrom( Glaemscribe.IfTree.Term );  \n\nGlaemscribe.IfTree.PrePostProcessorOperatorsTerm.prototype.name = function()\n{\n  return \"OP_TERM\";\n}\nGlaemscribe.IfTree.PrePostProcessorOperatorsTerm.prototype.is_pre_post_processor_operators = function()\n{\n  return true;\n}\n\n/* ================ */\n\nGlaemscribe.IfTree.CodeLinesTerm = function(parent_code_block)\n{\n  Glaemscribe.IfTree.Term.call(this,parent_code_block); //super\n  this.code_lines = []\n  return this;\n}\nGlaemscribe.IfTree.CodeLinesTerm.inheritsFrom( Glaemscribe.IfTree.Term );  \n\nGlaemscribe.IfTree.CodeLinesTerm.prototype.name = function()\n{\n  return \"CL_TERM\";\n}\nGlaemscribe.IfTree.CodeLinesTerm.prototype.is_code_lines = function()\n{\n  return true;\n}\n\n/* ================ */\n\nGlaemscribe.IfTree.MacroDeployTerm = function(macro, line, parent_code_block, arg_value_expressions)\n{\n  Glaemscribe.IfTree.Term.call(this,parent_code_block); //super\n  this.line                   = line;\n  this.macro                  = macro;\n  this.arg_value_expressions  = arg_value_expressions\n  return this;\n}\nGlaemscribe.IfTree.MacroDeployTerm.inheritsFrom( Glaemscribe.IfTree.Term );  \n\nGlaemscribe.IfTree.MacroDeployTerm.prototype.name = function()\n{\n  return \"DEPLOY_TERM\";\n}\nGlaemscribe.IfTree.MacroDeployTerm.prototype.is_macro_deploy = function()\n{\n  return true;\n}\n      \n/* ================ */\n\nGlaemscribe.IfTree.CodeBlock = function(parent_if_cond)\n{\n  this.parent_if_cond = parent_if_cond;\n  this.terms          = [];\n  return this;\n}\n\nGlaemscribe.IfTree.CodeBlock.prototype.dump = function(level)\n{\n  var str = \"\";\n  for(var i=0;i<level;i++)\n    str += \" \";\n  str += \"|-BLOCK\"; \n  console.log(str);\n  \n  for(var t=0;t<this.terms.length; t++)\n    this.terms[t].dump(level+1);\n}\n\n\n\n/*\n  Adding api/eval.js \n*/\n\n\nGlaemscribe.Eval = {}\nGlaemscribe.Eval.Token = function(name, expression)\n{\n  this.name       = name;\n  this.expression = expression;\n}\nGlaemscribe.Eval.Token.prototype.is_regexp = function()\n{\n  return (this.expression instanceof RegExp);\n}\nGlaemscribe.Eval.Token.prototype.clone = function(value)\n{\n  var t = new Glaemscribe.Eval.Token(this.name, this.expression);\n  t.value = value;\n  return t;\n}\n\nGlaemscribe.Eval.Lexer = function(exp) {\n  this.exp            = exp;\n  this.token_chain    = [];\n  this.retain_last    = false\n}\nGlaemscribe.Eval.Lexer.prototype.uneat = function()\n{\n  this.retain_last = true;\n}\nGlaemscribe.Eval.Lexer.prototype.EXP_TOKENS = [\n  new Glaemscribe.Eval.Token(\"bool_or\",      \"||\"),\n  new Glaemscribe.Eval.Token(\"bool_and\",     \"&&\"),\n  new Glaemscribe.Eval.Token(\"cond_inf_eq\",  \"<=\"),\n  new Glaemscribe.Eval.Token(\"cond_inf\",     \"<\"),\n  new Glaemscribe.Eval.Token(\"cond_sup_eq\",  \">=\"),\n  new Glaemscribe.Eval.Token(\"cond_sup\",     \">\"),\n  new Glaemscribe.Eval.Token(\"cond_eq\",      \"==\"),\n  new Glaemscribe.Eval.Token(\"cond_not_eq\",  \"!=\"),\n  new Glaemscribe.Eval.Token(\"add_plus\",     \"+\"),\n  new Glaemscribe.Eval.Token(\"add_minus\",    \"-\"),\n  new Glaemscribe.Eval.Token(\"mult_times\",   \"*\"),\n  new Glaemscribe.Eval.Token(\"mult_div\",     \"/\"),\n  new Glaemscribe.Eval.Token(\"mult_modulo\",  \"%\"),\n  new Glaemscribe.Eval.Token(\"prim_not\",     \"!\"),\n  new Glaemscribe.Eval.Token(\"prim_lparen\",  \"(\"),\n  new Glaemscribe.Eval.Token(\"prim_rparen\",  \")\"),\n  new Glaemscribe.Eval.Token(\"prim_string\",  /^'[^']*'/),\n  new Glaemscribe.Eval.Token(\"prim_string\",  /^\"[^\"]*\"/),\n  new Glaemscribe.Eval.Token(\"prim_const\",   /^[a-zA-Z0-9_.]+/)\n];   \nGlaemscribe.Eval.Lexer.prototype.TOKEN_END = new Glaemscribe.Eval.Token(\"prim_end\",\"\");\n\nGlaemscribe.Eval.Lexer.prototype.advance = function()\n{\n  this.exp = this.exp.trim();\n    \n  if(this.retain_last == true) \n  {\n    this.retain_last = false\n    return this.token_chain[this.token_chain.length-1];\n  }\n  \n  if(this.exp == Glaemscribe.Eval.Lexer.prototype.TOKEN_END.expression)\n  {\n    var t = Glaemscribe.Eval.Lexer.prototype.TOKEN_END.clone(\"\");\n    this.token_chain.push(t);\n    return t;\n  }\n  \n  for(var t=0;t<Glaemscribe.Eval.Lexer.prototype.EXP_TOKENS.length;t++)\n  {\n    var token = Glaemscribe.Eval.Lexer.prototype.EXP_TOKENS[t];\n    if(token.is_regexp())\n    {\n      var match = this.exp.match(token.expression);\n      if(match)\n      {\n        var found = match[0];\n        this.exp  = this.exp.substring(found.length);\n        var t     = token.clone(found);\n        this.token_chain.push(t);\n        return t;\n      }\n    }\n    else\n    {\n      if(this.exp.indexOf(token.expression) == 0)\n      {\n        this.exp = this.exp.substring(token.expression.length);\n        var t    = token.clone(token.expression);\n        this.token_chain.push(t);\n        return t;        \n      }\n    }\n  }\n  \n  throw \"UnknownToken\";    \n}\n\nGlaemscribe.Eval.Parser = function() {}\nGlaemscribe.Eval.Parser.prototype.parse = function(exp, vars)\n{  \n  this.lexer  = new Glaemscribe.Eval.Lexer(exp);\n  this.vars   = vars;\n  return this.parse_top_level();\n}\n\nGlaemscribe.Eval.Parser.prototype.parse_top_level = function()\n{\n  return this.explore_bool();\n}\n\nGlaemscribe.Eval.Parser.prototype.explore_bool = function()\n{\n  var v     = this.explore_compare();\n  var stop  = false\n  while(!stop)\n  {\n    switch(this.lexer.advance().name)\n    {\n    case 'bool_or':\n      if(v == true)\n        this.explore_bool();\n      else\n        v = this.explore_compare();\n      break;\n    case 'bool_and':\n      if(!v == true)\n        this.explore_bool(); \n      else\n        v = this.explore_compare();\n      break;\n    default:\n      stop = true;\n    }\n  }      \n  this.lexer.uneat(); // Keep the unused token for the higher level\n  return v;\n}\n\nGlaemscribe.Eval.Parser.prototype.explore_compare = function()\n{\n  var v = this.explore_add();\n  var stop = false;\n  while(!stop)\n  {\n    switch(this.lexer.advance().name)\n    {\n      case 'cond_inf_eq': v = (v <= this.explore_add() ); break;\n      case 'cond_inf':    v = (v <  this.explore_add() ); break;\n      case 'cond_sup_eq': v = (v >= this.explore_add() ); break;\n      case 'cond_sup':    v = (v >  this.explore_add() ); break;\n      case 'cond_eq':     v = (v == this.explore_add() ); break;\n      case 'cond_not_eq': v = (v != this.explore_add() ); break;\n      default: stop = true; break;\n    }\n  }\n  this.lexer.uneat();\n  return v;\n}\n\n\n\nGlaemscribe.Eval.Parser.prototype.explore_add = function()\n{\n  var v = this.explore_mult();\n  var stop = false;\n  while(!stop) {\n    switch(this.lexer.advance().name)\n    {\n      case 'add_plus':  v += this.explore_mult(); break;\n      case 'add_minus': v -= this.explore_mult(); break;\n      default: stop = true; break;\n    }\n  }\n  this.lexer.uneat(); // Keep the unused token for the higher level\n  return v;\n}\n\nGlaemscribe.Eval.Parser.prototype.explore_mult = function()\n{\n  var v = this.explore_primary();\n  var stop = false;\n  while(!stop) {\n    switch(this.lexer.advance().name)\n    {\n      case 'mult_times':    v *= this.explore_primary(); break;\n      case 'mult_div':      v /= this.explore_primary(); break;\n      case 'mult_modulo':   v %= this.explore_primary(); break;\n      default: stop = true; break;\n    }\n  }\n  this.lexer.uneat(); // Keep the unused token for the higher level\n  return v;\n}\n\n\nGlaemscribe.Eval.Parser.prototype.explore_primary = function()\n{\n  var token = this.lexer.advance();\n  var v     = null;\n  switch(token.name)\n  {\n    case 'prim_const':  v = this.cast_constant(token.value); break;\n    case 'add_minus':   v = -this.explore_primary(); break; // Allow the use of - as primary token for negative numbers\n    case 'prim_not':    v = !this.explore_primary(); break; // Allow the use of ! for booleans\n    case 'prim_lparen':   \n    \n      v               = this.parse_top_level();\n      var rtoken      = this.lexer.advance(); \n    \n      if(rtoken.name != 'prim_rparen') \n        throw \"Missing right parenthesis.\"; \n    \n      break;\n    default:\n      throw \"Cannot understand: \" + token.value + \".\";\n      break;\n  }\n  return v;\n}\n\nGlaemscribe.Eval.Parser.prototype.constant_is_float = function(cst)\n{\n  if(isNaN(cst))\n    return false;\n  \n  return  Number(cst) % 1 !== 0;  \n}\n\nGlaemscribe.Eval.Parser.prototype.constant_is_int = function(cst)\n{\n  if(isNaN(cst))\n    return false;\n  \n  return Number(cst) % 1 === 0;\n}\n\nGlaemscribe.Eval.Parser.prototype.constant_is_string = function(cst)\n{\n  if(cst.length < 2)\n    return false;\n  \n  var f = cst[0]\n  var l = cst[cst.length-1]\n  \n  return ( f == l && (l == \"'\" || l == '\"') );\n}\n\nGlaemscribe.Eval.Parser.prototype.cast_constant = function(cst)\n{\n  var match = null;\n  \n  if(this.constant_is_int(cst))\n    return parseInt(cst);\n  else if(this.constant_is_float(cst))\n    return parseFloat(cst);\n  else if(match = cst.match(/^\\'(.*)\\'$/))\n    return match[0];\n  else if(match = cst.match(/^\\\"(.*)\\\"$/))\n    return match[0];\n  else if(cst == 'true')\n    return true;\n  else if(cst == 'false')\n    return false;\n  else if(cst == 'nil')\n    return null;\n  else if(this.vars[cst] != null)\n    return this.vars[cst];\n  else\n    throw \"Cannot understand constant '\" + cst + \"'.\";          \n}\n\n\n\n/*\n  Adding api/transcription_tree_node.js \n*/\n\n\nGlaemscribe.TranscriptionTreeNode = function(character,replacement,path) {\n  var tree_node         = this;\n  tree_node.character   = character;\n  tree_node.replacement = replacement;\n  tree_node.path        = path;\n  tree_node.siblings    = {}\n}\n\nGlaemscribe.TranscriptionTreeNode.prototype.is_effective = function() {\n  return this.replacement != null;\n}\n\nGlaemscribe.TranscriptionTreeNode.prototype.add_subpath = function(source, rep, path) {\n  if(source == null || source == \"\")\n    return;\n  \n  var tree_node     = this;\n  var cc            = source[0];\n  var sibling       = tree_node.siblings[cc];\n  var path_to_here  = (path || \"\") + cc;\n  \n  if(sibling == null)\n    sibling = new Glaemscribe.TranscriptionTreeNode(cc,null,path_to_here);\n    \n  tree_node.siblings[cc] = sibling;\n  \n  if(source.length == 1)\n    sibling.replacement = rep;\n  else\n    sibling.add_subpath(source.substring(1),rep,path_to_here);\n}\n\nGlaemscribe.TranscriptionTreeNode.prototype.transcribe = function(string, chain) {\n  \n  if(chain == null)\n    chain = [];\n  \n  chain.push(this);\n\n  if(string != \"\")\n  {\n    var cc = string[0];\n    var sibling = this.siblings[cc];\n    \n    if(sibling)\n      return sibling.transcribe(string.substring(1), chain);\n  }\n  \n  // We are at the end of the chain\n  while(chain.length > 1) {\n    var last_node = chain.pop();\n    if(last_node.is_effective())\n      return [last_node.replacement, chain.length] \n  }\n  \n  // Only the root node is in the chain, we could not find anything; return the \"unknown char\"\n  return [[\"*UNKNOWN\"], 1]; \n}\n\n\n/*\n  Adding api/transcription_pre_post_processor.js \n*/\n\n\n// ====================== //\n//      OPERATORS         //\n// ====================== //\n\nGlaemscribe.PrePostProcessorOperator = function(glaeml_element)\n{\n  this.glaeml_element = glaeml_element;\n  return this;\n}\nGlaemscribe.PrePostProcessorOperator.prototype.apply = function(l)\n{\n  throw \"Pure virtual method, should be overloaded.\";\n}\nGlaemscribe.PrePostProcessorOperator.prototype.eval_arg = function(arg, trans_options) {\n  if(arg == null)\n    return null;\n  \n  var rmatch = null;\n  if( rmatch = arg.match(/^\\\\eval\\s/) )\n  {\n    var to_eval = arg.substring( rmatch[0].length ); \n    return new Glaemscribe.Eval.Parser().parse(to_eval, trans_options);   \n  }\n  return arg;\n}\nGlaemscribe.PrePostProcessorOperator.prototype.finalize_glaeml_element = function(ge, trans_options) {\n  var op = this;\n  \n  for(var i=0;i<ge.args.length;i++)\n    ge.args[i] = op.eval_arg(ge.args[i], trans_options);\n\n  glaemEach(ge.children, function(idx, child) {\n    op.finalize_glaeml_element(child, trans_options);\n  });\n  return ge;\n}\nGlaemscribe.PrePostProcessorOperator.prototype.finalize = function(trans_options) {\n  var op = this;\n  \n  // Deep copy the glaeml_element so we can safely eval the inner args\n  op.finalized_glaeml_element = op.finalize_glaeml_element(op.glaeml_element.clone(), trans_options);\n}\n\n// Inherit from PrePostProcessorOperator\nGlaemscribe.PreProcessorOperator = function(raw_args)  \n{\n  Glaemscribe.PrePostProcessorOperator.call(this,raw_args);\n  return this;\n} \nGlaemscribe.PreProcessorOperator.inheritsFrom( Glaemscribe.PrePostProcessorOperator );  \n\n// Inherit from PrePostProcessorOperator\nGlaemscribe.PostProcessorOperator = function(raw_args)  \n{\n  Glaemscribe.PrePostProcessorOperator.call(this,raw_args);\n  return this;\n} \nGlaemscribe.PostProcessorOperator.inheritsFrom( Glaemscribe.PrePostProcessorOperator );  \n\n\n// =========================== //\n//      PRE/POST PROCESSORS    //\n// =========================== //\n\nGlaemscribe.TranscriptionPrePostProcessor = function(mode)\n{\n  this.mode             = mode;\n  this.root_code_block  = new Glaemscribe.IfTree.CodeBlock(); \n  return this;\n}\n\nGlaemscribe.TranscriptionPrePostProcessor.prototype.finalize = function(options)\n{\n  this.operators = []\n  this.descend_if_tree(this.root_code_block, options);\n  \n  glaemEach(this.operators, function(op_num, op) {\n    op.finalize(options);\n  });\n}\n\nGlaemscribe.TranscriptionPrePostProcessor.prototype.descend_if_tree = function(code_block, options)\n{\n  for(var t=0; t < code_block.terms.length; t++)\n  {\n    var term = code_block.terms[t];\n           \n    if(term.is_pre_post_processor_operators())\n    {\n      for(var o=0; o<term.operators.length; o++)\n      {\n        var operator = term.operators[o];\n        this.operators.push(operator);\n      } \n    }\n    else\n    { \n      for(var i=0; i < term.if_conds.length; i++)\n      {\n        var if_cond = term.if_conds[i];\n        var if_eval = new Glaemscribe.Eval.Parser();\n        \n        // TODO: CONTEXT VARS!!\n        if(if_eval.parse(if_cond.expression, options) == true)\n        {\n          this.descend_if_tree(if_cond.child_code_block, options)\n          break; // Don't try other conditions! \n        }\n      }        \n    }\n  }\n}\n\n// PREPROCESSOR\n// Inherit from TranscriptionPrePostProcessor; a bit more verbose than in ruby ...\nGlaemscribe.TranscriptionPreProcessor = function(mode)  \n{\n  Glaemscribe.TranscriptionPrePostProcessor.call(this,mode);\n  return this;\n} \nGlaemscribe.TranscriptionPreProcessor.inheritsFrom( Glaemscribe.TranscriptionPrePostProcessor ); \n\nGlaemscribe.TranscriptionPreProcessor.prototype.apply = function(l)\n{\n  var ret = l\n  \n  for(var i=0;i<this.operators.length;i++)\n  {\n    var operator  = this.operators[i];\n    ret       = operator.apply(ret);\n  }\n  \n  return ret;\n}   \n\n// POSTPROCESSOR\n// Inherit from TranscriptionPrePostProcessor; a bit more verbose than in ruby ...\nGlaemscribe.TranscriptionPostProcessor = function(mode)  \n{\n  Glaemscribe.TranscriptionPrePostProcessor.call(this,mode);\n  return this;\n} \nGlaemscribe.TranscriptionPostProcessor.inheritsFrom( Glaemscribe.TranscriptionPrePostProcessor ); \n\nGlaemscribe.TranscriptionPostProcessor.prototype.apply = function(tokens, out_charset)\n{\n  var out_space_str     = \" \";\n  if(this.out_space != null)\n  {\n    out_space_str       = this.out_space.map(function(token) { return out_charset.n2c(token).output() }).join(\"\");\n  }\n  \n  for(var i=0;i<this.operators.length;i++)\n  {\n    var operator  = this.operators[i];\n    tokens        = operator.apply(tokens, out_charset);\n  }\n  \n  // Convert output\n  var ret = \"\";\n  for(var t=0;t<tokens.length;t++)\n  {\n    var token = tokens[t];\n    switch(token)\n    {\n    case \"\":\n      break;\n    case \"*UNKNOWN\":\n      ret += Glaemscribe.UNKNOWN_CHAR_OUTPUT;\n      break;\n    case \"*SPACE\":\n      ret += out_space_str;\n      break;\n    case \"*LF\":\n      ret += \"\\n\";\n    default:\n      var c = out_charset.n2c(token);\n      if(!c)\n        ret += Glaemscribe.UNKNOWN_CHAR_OUTPUT; // Should not happen\n      else\n        ret += c.output();\n    }    \n  }\n \n  return ret;\n}   \n\n \n \n\n/*\n  Adding api/transcription_processor.js \n*/\n\n\nGlaemscribe.TranscriptionProcessor = function(mode)\n{\n  this.mode         = mode;\n  this.rule_groups  = {};\n  \n  return this;\n}\n\nGlaemscribe.TranscriptionProcessor.prototype.finalize = function(options) {\n  \n  var processor = this;\n  var mode = this.mode;\n    \n  processor.transcription_tree = new Glaemscribe.TranscriptionTreeNode(null,null,\"\");\n  processor.transcription_tree.add_subpath(Glaemscribe.WORD_BOUNDARY_TREE,  [\"\"]);\n  processor.transcription_tree.add_subpath(Glaemscribe.WORD_BREAKER,        [\"\"]);\n  \n  glaemEach(this.rule_groups, function(gname,rg) {\n    rg.finalize(options);\n  });\n  \n  // Build the input charsets\n  processor.in_charset = {}\n  \n  glaemEach(this.rule_groups, function(gname, rg) {\n    glaemEach(rg.in_charset, function(char, group) {\n      \n      var group_for_char  = processor.in_charset[char];\n           \n      if(group_for_char != null)\n        mode.errors.push(new Glaemscribe.Glaeml.Error(0, \"Group \" + gname + \" uses input character \" + char + \" which is also used by group \" + group_for_char.name + \". Input charsets should not intersect between groups.\")); \n      else\n        processor.in_charset[char] = group;\n      \n    })\n  });\n  \n  glaemEach(this.rule_groups, function(gname, rg) {\n    for(var r=0;r<rg.rules.length;r++)\n    {\n      var rule = rg.rules[r];\n      \n      for(var sr=0;sr<rule.sub_rules.length;sr++)\n      {  \n        var sub_rule = rule.sub_rules[sr];\n        processor.add_subrule(sub_rule);    \n      }  \n    }\n  });\n\n}\n\nGlaemscribe.TranscriptionProcessor.prototype.add_subrule = function(sub_rule) {\n  var path = sub_rule.src_combination.join(\"\");\n  this.transcription_tree.add_subpath(path, sub_rule.dst_combination)\n}\n\n\nGlaemscribe.TranscriptionProcessor.prototype.apply = function(l, debug_context) {\n      \n  var ret               = [];\n  var current_group     = null;\n  var accumulated_word  = \"\";\n  \n  var chars             = l.split(\"\");\n  for(var i=0;i<chars.length;i++)\n  {\n    var c = chars[i];\n    switch(c)\n    {\n      case \" \":\n      case \"\\t\":\n        ret = ret.concat(this.transcribe_word(accumulated_word, debug_context));\n        ret = ret.concat(\"*SPACE\");\n            \n        accumulated_word = \"\";\n        break;\n      case \"\\r\":\n        // ignore\n        break;\n      case \"\\n\":\n        ret = ret.concat(this.transcribe_word(accumulated_word, debug_context));\n        ret = ret.concat(\"*LF\");\n        \n        accumulated_word = \"\"\n        break;\n      default:\n        var c_group = this.in_charset[c];\n        if(c_group == current_group)\n          accumulated_word += c;\n        else\n        {\n          ret = ret.concat(this.transcribe_word(accumulated_word, debug_context));\n          current_group    = c_group;\n          accumulated_word = c;\n        }\n        break;\n    }\n    \n  }\n  // End of stirng\n  ret = ret.concat(this.transcribe_word(accumulated_word, debug_context));\n  return ret;\n}\n\nGlaemscribe.TranscriptionProcessor.prototype.transcribe_word = function(word, debug_context) {\n  \n  var processor = this;\n    \n  var res = [];\n  var word = Glaemscribe.WORD_BOUNDARY_TREE + word + Glaemscribe.WORD_BOUNDARY_TREE;\n\n  while(word.length != 0)\n  {    \n    // Explore tree\n    var ttret = this.transcription_tree.transcribe(word);   \n      \n    // r is the replacement, len its length\n    var tokens    = ttret[0];\n    var len       = ttret[1];   \n    var eaten     = word.substring(0,len);\n    \n    word          = word.substring(len); // eat len characters\n    res           = res.concat(tokens);\n    \n    debug_context.processor_pathes.push([eaten, tokens, tokens]);\n  }\n  \n  return res;\n}\n      \n\n/*\n  Adding api/pre_processor/downcase.js \n*/\n\n\nGlaemscribe.DowncasePreProcessorOperator = function(args)  \n{\n  Glaemscribe.PreProcessorOperator.call(this,args); //super\n  return this;\n} \nGlaemscribe.DowncasePreProcessorOperator.inheritsFrom( Glaemscribe.PreProcessorOperator );  \n\nGlaemscribe.DowncasePreProcessorOperator.prototype.apply = function(str)\n{\n  return str.toLowerCase();\n}  \n\nGlaemscribe.resource_manager.register_pre_processor_class(\"downcase\", Glaemscribe.DowncasePreProcessorOperator);    \n\n\n/*\n  Adding api/pre_processor/rxsubstitute.js \n*/\n\n\n// Inherit from PrePostProcessorOperator\nGlaemscribe.RxSubstitutePreProcessorOperator = function(glaeml_element)  \n{\n  Glaemscribe.PreProcessorOperator.call(this, glaeml_element); //super\n  return this;\n} \nGlaemscribe.RxSubstitutePreProcessorOperator.inheritsFrom( Glaemscribe.PreProcessorOperator );  \n\nGlaemscribe.RxSubstitutePreProcessorOperator.prototype.finalize = function(trans_options) {\n  \n  Glaemscribe.PreProcessorOperator.prototype.finalize.call(this, trans_options); // super\n  \n  // Ruby uses \\1, \\2, etc for captured expressions. Convert to javascript. \n  this.finalized_glaeml_element.args[1] = this.finalized_glaeml_element.args[1].replace(/(\\\\\\d)/g,function(cap) { return \"$\" + cap.replace(\"\\\\\",\"\")});  \n}\n\nGlaemscribe.RxSubstitutePreProcessorOperator.prototype.apply = function(str)\n{\n  var what  = new RegExp(this.finalized_glaeml_element.args[0],\"g\");\n  var to    = this.finalized_glaeml_element.args[1];\n\n  return str.replace(what,to);\n}  \n\nGlaemscribe.resource_manager.register_pre_processor_class(\"rxsubstitute\", Glaemscribe.RxSubstitutePreProcessorOperator);    \n\n\n/*\n  Adding api/pre_processor/substitute.js \n*/\n\n\n// Inherit from PrePostProcessorOperator\nGlaemscribe.SubstitutePreProcessorOperator = function(args)  \n{\n  Glaemscribe.PreProcessorOperator.call(this,args); //super\n  return this;\n} \nGlaemscribe.SubstitutePreProcessorOperator.inheritsFrom( Glaemscribe.PreProcessorOperator );  \n\nGlaemscribe.SubstitutePreProcessorOperator.prototype.apply = function(str)\n{\n  //This is bad to use a regexp if there are special chars like '*'\n  //var what  = new RegExp(this.finalized_glaeml_element.args[0],\"g\");\n  //var to    = this.finalized_glaeml_element.args[1];\n  //return str.replace(what,to);\n\n  var inSource      = str;\n  var inToReplace   = this.finalized_glaeml_element.args[0];\n  var inReplaceWith = this.finalized_glaeml_element.args[1];\n  \n  var outString = [];\n  var repLen = inToReplace.length;\n  var idx = inSource.indexOf(inToReplace);\n  while (idx !== -1) {\n    outString.push(inSource.substring(0, idx))\n    outString.push(inReplaceWith);\n\n    inSource = inSource.substring(idx + repLen);\n    idx = inSource.indexOf(inToReplace);\n  }\n  outString.push(inSource);\n  return outString.join(\"\");\n}  \n\nGlaemscribe.resource_manager.register_pre_processor_class(\"substitute\", Glaemscribe.SubstitutePreProcessorOperator);    \n\n\n/*\n  Adding api/pre_processor/up_down_tehta_split.js \n*/\n\n\n// Inherit from PrePostProcessorOperator\nGlaemscribe.UpDownTehtaSplitPreProcessorOperator = function(args)  \n{\n  Glaemscribe.PreProcessorOperator.call(this,args); //super \n  return this;\n} \nGlaemscribe.UpDownTehtaSplitPreProcessorOperator.inheritsFrom( Glaemscribe.PreProcessorOperator );  \n\nGlaemscribe.UpDownTehtaSplitPreProcessorOperator.prototype.finalize = function(trans_options) {\n  Glaemscribe.PreProcessorOperator.prototype.finalize.call(this, trans_options); // super\n   \n  var op    = this;\n  var args  = op.finalized_glaeml_element.args; \n  \n  var vowel_list      = args[0];\n  var consonant_list  = args[1];\n      \n  vowel_list          = vowel_list.split(/,/).map(function(s) {return s.trim(); });\n  consonant_list      = consonant_list.split(/,/).map(function(s) {return s.trim(); });\n     \n  this.vowel_map          = {}; // Recognize vowel tokens\n  this.consonant_map      = {};// Recognize consonant tokens\n  this.splitter_tree      = new Glaemscribe.TranscriptionTreeNode(null,null,\"\"); // Recognize tokens\n  this.word_split_map     = {};\n  // The word split map will help to recognize words\n  // The splitter tree will help to split words into tokens\n  \n  for(var vi=0;vi<vowel_list.length;vi++)\n  {\n    var v = vowel_list[vi];\n    this.splitter_tree.add_subpath(v, v); \n    this.vowel_map[v] = v;\n  }\n  for(var ci=0;ci<consonant_list.length;ci++)\n  {\n    var c = consonant_list[ci];\n    this.splitter_tree.add_subpath(c, c); \n    this.consonant_map[c] = c;\n  }\n\n  var all_letters = uniqueArray(vowel_list.concat(consonant_list).join(\"\").split(\"\").sort());\n\n  for(var li=0;li<all_letters.length;li++)\n  {\n    var l = all_letters[li];\n    this.word_split_map[l] = l;\n  }    \n   \n}\n\nGlaemscribe.UpDownTehtaSplitPreProcessorOperator.prototype.type_of_token = function(token)\n{\n  if(this.vowel_map[token] != null)          return \"V\";\n  if(this.consonant_map[token] != null)      return \"C\";\n  return \"X\";\n}\n\nGlaemscribe.UpDownTehtaSplitPreProcessorOperator.prototype.apply_to_word = function(w)\n{\n  var res = [];\n   \n  if(w.trim() == \"\")\n    res.push(w);\n  else\n  {\n    while(w.length != 0)\n    {\n      var ret = this.splitter_tree.transcribe(w)\n      var r   = ret[0];\n      var len = ret[1];   \n      \n      if (Array.isArray(r) && arrayEquals(r, [Glaemscribe.UNKNOWN_CHAR_OUTPUT])) {\n        res.push(w[0]); \n      } else {\n        res.push(r); \n      }\n    \n      w = w.substring(len);\n    }\n  }\n    \n    \n  var res_modified = [];\n\n  // We replace the pattern CVC by CvVC where v is a phantom vowel.\n  // This makes the pattern CVC not possible.\n  var i = 0\n  while(i < res.length - 2)\n  {\n    var r0 = res[i];\n    var r1 = res[i+1];\n    var r2 = res[i+2];;\n    var t0 = this.type_of_token(r0);\n    var t1 = this.type_of_token(r1);\n    var t2 = this.type_of_token(r2);\n   \n    if(t0 == \"C\" && t1 == \"V\" && t2 == \"C\")\n    {\n      res_modified.push(res[i]);\n      res_modified.push(\"@\");\n      res_modified.push(res[i+1]); \n      i += 2;\n    }\n    else\n    {   \n      res_modified.push(res[i]);\n      i += 1;\n    }\n  }\n\n  // Add the remaining stuff\n  while(i < res.length)\n  {\n    res_modified.push(res[i]);\n    i += 1\n  }\n    \n  return res_modified.join(\"\")       \n}\n\nGlaemscribe.UpDownTehtaSplitPreProcessorOperator.prototype.apply = function(content)\n{\n  var accumulated_word = \"\"  \n  var ret = \"\"\n        \n  var letters = content.split(\"\");\n  for(var li=0;li<letters.length;li++)\n  {\n    var letter = letters[li];\n    if(this.word_split_map[letter] != null)\n      accumulated_word += letter;\n    else\n    {\n      ret += this.apply_to_word(accumulated_word);\n      ret += letter;\n      accumulated_word = \"\";\n    }        \n  }\n  ret += this.apply_to_word(accumulated_word) \n  \n  return ret;         \n}  \n\nGlaemscribe.resource_manager.register_pre_processor_class(\"up_down_tehta_split\", Glaemscribe.UpDownTehtaSplitPreProcessorOperator);    \n\n\n\n/*\n  Adding api/pre_processor/elvish_numbers.js \n*/\n\n\nGlaemscribe.ElvishNumbersPreProcessorOperator = function(args)  {  Glaemscribe.PreProcessorOperator.call(this,args); return this; } \nGlaemscribe.ElvishNumbersPreProcessorOperator.inheritsFrom( Glaemscribe.PreProcessorOperator );  \nGlaemscribe.ElvishNumbersPreProcessorOperator.prototype.apply = function(str)\n{\n  var op      = this;\n  \n  var base    = op.finalized_glaeml_element.args[0];\n  base        = (base != null)?(parseInt(base)):(12);\n  \n  var reverse = op.finalized_glaeml_element.args[1]\n  reverse     = (reverse != null)?(reverse == true || reverse == \"true\"):(true) \n  \n  return str.replace(/\\d+/g,function(match) {\n    var inbase  = parseInt(match).toString(base);\n    inbase      = inbase.toUpperCase(); // Beware, we want letters in upper case!\n    \n    var ret = '';\n    if(reverse)\n    {\n      for(var i=inbase.length-1;i>=0;i--)\n        ret += inbase[i];\n    }\n    else\n    {\n      ret = inbase;\n    }\n    \n    return ret;\n  });\n\n}  \n\nGlaemscribe.resource_manager.register_pre_processor_class(\"elvish_numbers\", Glaemscribe.ElvishNumbersPreProcessorOperator);    \n\n\n/*\n  Adding api/post_processor/reverse.js \n*/\n\n\nGlaemscribe.ReversePostProcessorOperator = function(args)  \n{\n  Glaemscribe.PostProcessorOperator.call(this,args); //super\n  return this;\n} \nGlaemscribe.ReversePostProcessorOperator.inheritsFrom( Glaemscribe.PostProcessorOperator );  \n\nGlaemscribe.ReversePostProcessorOperator.prototype.apply = function(tokens, charset)\n{\n  return tokens.reverse();\n}  \n\nGlaemscribe.resource_manager.register_post_processor_class(\"reverse\", Glaemscribe.ReversePostProcessorOperator);    \n\n\n/*\n  Adding api/post_processor/resolve_virtuals.js \n*/\n\n\n\nGlaemscribe.ResolveVirtualsPostProcessorOperator = function(args)  \n{\n  Glaemscribe.PostProcessorOperator.call(this,args); //super\n  return this;\n} \nGlaemscribe.ResolveVirtualsPostProcessorOperator.inheritsFrom( Glaemscribe.PostProcessorOperator );  \n\n\nGlaemscribe.ResolveVirtualsPostProcessorOperator.prototype.finalize = function(trans_options)\n{\n  Glaemscribe.PostProcessorOperator.prototype.finalize.call(this, trans_options); // super\n  this.last_triggers = {}; // Allocate here to optimize\n}  \n\nGlaemscribe.ResolveVirtualsPostProcessorOperator.prototype.reset_trigger_states = function(charset) {\n  var op = this;\n  glaemEach(charset.virtual_chars, function(idx,vc) {\n    vc.object_reference                   = idx; // We cannot objects as references in hashes in js. Attribute a reference.\n    op.last_triggers[vc.object_reference] = null; // Clear the state\n  });\n}\n\nGlaemscribe.ResolveVirtualsPostProcessorOperator.prototype.apply_loop = function(charset, tokens, new_tokens, reversed, token, idx) {\n  var op = this;\n  if(token == '*SPACE' || token == '*LF') {\n    op.reset_trigger_states(charset);\n    return; // continue\n  }\n  var c = charset.n2c(token);\n\n  if(c == null)\n    return;\n  \n  if(c.is_virtual() && (reversed == c.reversed)) {\n    \n    // Try to replace\n    var last_trigger = op.last_triggers[c.object_reference];\n    if(last_trigger != null) {\n      new_tokens[idx] = last_trigger.names[0]; // Take the first name of the non-virtual replacement.\n      token = new_tokens[idx]; // Consider the token replaced, being itself a potential trigger for further virtuals (cascading virtuals)\n    };\n  }\n\n  // Update states of virtual classes\n  glaemEach(charset.virtual_chars, function(_,vc) {\n    var rc = vc.n2c(token);\n    if(rc != null)\n      op.last_triggers[vc.object_reference] = rc;\n  });\n}\n\n\nGlaemscribe.ResolveVirtualsPostProcessorOperator.prototype.apply_sequences = function(charset,tokens) {\n  var ret = [];\n  glaemEach(tokens, function(_, token) {\n    var c = charset.n2c(token);\n    if(c && c.is_sequence())\n      Array.prototype.push.apply(ret,c.sequence);\n    else\n      ret.push(token);\n  });\n  return ret;\n}\n\nGlaemscribe.ResolveVirtualsPostProcessorOperator.prototype.apply = function(tokens, charset) {   \n  var op = this;\n  \n  tokens = op.apply_sequences(charset, tokens);\n  \n  // Clone the array so that we can perform diacritics and ligatures without interfering\n  var new_tokens = tokens.slice(0);\n  \n  op.reset_trigger_states(charset);\n  glaemEach(tokens, function(idx,token) {\n    op.apply_loop(charset,tokens,new_tokens,false,token,idx);\n  });\n  \n  op.reset_trigger_states(charset);\n  glaemEachReversed(tokens, function(idx,token) {\n    op.apply_loop(charset,tokens,new_tokens,true,token,idx);    \n  });\n  return new_tokens;\n}  \n\nGlaemscribe.resource_manager.register_post_processor_class(\"resolve_virtuals\", Glaemscribe.ResolveVirtualsPostProcessorOperator);    \n\n\n\n/*\n  Adding extern/object-clone.js \n*/\n/*\n * $Id: object-clone.js,v 0.41 2013/03/27 18:29:04 dankogai Exp dankogai $\n *\n *  Licensed under the MIT license.\n *  http://www.opensource.org/licenses/mit-license.php\n *\n */\n\n(function(global) {\n    'use strict';\n    if (!Object.freeze || typeof Object.freeze !== 'function') {\n        throw Error('ES5 support required');\n    }\n    // from ES5\n    var O = Object, OP = O.prototype,\n    create = O.create,\n    defineProperty = O.defineProperty,\n    defineProperties = O.defineProperties,\n    getOwnPropertyNames = O.getOwnPropertyNames,\n    getOwnPropertyDescriptor = O.getOwnPropertyDescriptor,\n    getPrototypeOf = O.getPrototypeOf,\n    freeze = O.freeze,\n    isFrozen = O.isFrozen,\n    isSealed = O.isSealed,\n    seal = O.seal,\n    isExtensible = O.isExtensible,\n    preventExtensions = O.preventExtensions,\n    hasOwnProperty = OP.hasOwnProperty,\n    toString = OP.toString,\n    isArray = Array.isArray,\n    slice = Array.prototype.slice;\n    // Utility functions; some exported\n    function defaults(dst, src) {\n        getOwnPropertyNames(src).forEach(function(k) {\n            if (!hasOwnProperty.call(dst, k)) defineProperty(\n                dst, k, getOwnPropertyDescriptor(src, k)\n            );\n        });\n        return dst;\n    };\n    var isObject = function(o) { return o === Object(o) };\n    var isPrimitive = function(o) { return o !== Object(o) };\n    var isFunction = function(f) { return typeof(f) === 'function' };\n    var signatureOf = function(o) { return toString.call(o) };\n    var HASWEAKMAP = (function() { // paranoia check\n        try {\n            var wm = new WeakMap();\n            wm.set(wm, wm);\n            return wm.get(wm) === wm;\n        } catch(e) {\n            return false;\n        }\n    })();\n    // exported\n    function is (x, y) {\n        return x === y\n            ? x !== 0 ? true\n            : (1 / x === 1 / y) // +-0\n        : (x !== x && y !== y); // NaN\n    };\n    function isnt (x, y) { return !is(x, y) };\n    var defaultCK = {\n        descriptors:true,\n        extensibility:true,\n        enumerator:getOwnPropertyNames\n    };\n    function equals (x, y, ck) {\n        var vx, vy;\n        if (HASWEAKMAP) {\n            vx = new WeakMap();\n            vy = new WeakMap();\n        }\n        ck = defaults(ck || {}, defaultCK);\n        return (function _equals(x, y) {\n            if (isPrimitive(x)) return is(x, y);\n            if (isFunction(x))  return is(x, y);\n            // check deeply\n            var sx = signatureOf(x), sy = signatureOf(y);\n            var i, l, px, py, sx, sy, kx, ky, dx, dy, dk, flt;\n            if (sx !== sy) return false;\n            switch (sx) {\n            case '[object Array]':\n            case '[object Object]':\n                if (ck.extensibility) {\n                    if (isExtensible(x) !== isExtensible(y)) return false;\n                    if (isSealed(x) !== isSealed(y)) return false;\n                    if (isFrozen(x) !== isFrozen(y)) return false;\n                }\n                if (vx) {\n                    if (vx.has(x)) {\n                        // console.log('circular ref found');\n                        return vy.has(y);\n                    }\n                    vx.set(x, true);\n                    vy.set(y, true);\n                }\n                px = ck.enumerator(x);\n                py = ck.enumerator(y);\n                if (ck.filter) {\n                    flt = function(k) {\n                        var d = getOwnPropertyDescriptor(this, k);\n                        return ck.filter(d, k, this);\n                    };\n                    px = px.filter(flt, x);\n                    py = py.filter(flt, y);\n                }\n                if (px.length != py.length) return false;\n                px.sort(); py.sort();\n                for (i = 0, l = px.length; i < l; ++i) {\n                    kx = px[i];\n                    ky = py[i];\n                    if (kx !== ky) return false;\n                    dx = getOwnPropertyDescriptor(x, ky);\n                    dy = getOwnPropertyDescriptor(y, ky);\n                    if ('value' in dx) {\n                        if (!_equals(dx.value, dy.value)) return false;\n                    } else {\n                        if (dx.get && dx.get !== dy.get) return false;\n                        if (dx.set && dx.set !== dy.set) return false;\n                    }\n                    if (ck.descriptors) {\n                        if (dx.enumerable !== dy.enumerable) return false;\n                        if (ck.extensibility) {\n                            if (dx.writable !== dy.writable)\n                                return false;\n                            if (dx.configurable !== dy.configurable)\n                                return false;\n                        }\n                    }\n                }\n                return true;\n            case '[object RegExp]':\n            case '[object Date]':\n            case '[object String]':\n            case '[object Number]':\n            case '[object Boolean]':\n                return ''+x === ''+y;\n            default:\n                throw TypeError(sx + ' not supported');\n            }\n        })(x, y);\n    }\n    function clone(src, deep, ck) {\n        var wm;\n        if (deep && HASWEAKMAP) {\n            wm = new WeakMap();\n        }\n        ck = defaults(ck || {}, defaultCK);\n        return (function _clone(src) {\n            // primitives and functions\n            if (isPrimitive(src)) return src;\n            if (isFunction(src)) return src;\n            var sig = signatureOf(src);\n            switch (sig) {\n            case '[object Array]':\n            case '[object Object]':\n                if (wm) {\n                    if (wm.has(src)) {\n                        // console.log('circular ref found');\n                        return src;\n                    }\n                    wm.set(src, true);\n                }\n                var isarray = isArray(src);\n                var dst = isarray ? [] : create(getPrototypeOf(src));\n                ck.enumerator(src).forEach(function(k) {\n                    // Firefox forbids defineProperty(obj, 'length' desc)\n                    if (isarray && k === 'length') {\n                        dst.length = src.length;\n                    } else {\n                        if (ck.descriptors) {\n                            var desc = getOwnPropertyDescriptor(src, k);\n                            if (ck.filter && !ck.filter(desc, k, src)) return;\n                            if (deep && 'value' in desc)\n                                desc.value = _clone(src[k]);\n                            defineProperty(dst, k, desc);\n                        } else {\n                            dst[k] = _clone(src[k]);\n                        }\n                    }\n                });\n                if (ck.extensibility) {\n                    if (!isExtensible(src)) preventExtensions(dst);\n                    if (isSealed(src)) seal(dst);\n                    if (isFrozen(src)) freeze(dst);\n                }\n                return dst;\n            case '[object RegExp]':\n            case '[object Date]':\n            case '[object String]':\n            case '[object Number]':\n            case '[object Boolean]':\n                return deep ? new src.constructor(src.valueOf()) : src;\n            default:\n                throw TypeError(sig + ' is not supported');\n            }\n        })(src);\n    };\n    //  Install\n    var obj2specs = function(src) {\n        var specs = create(null);\n        getOwnPropertyNames(src).forEach(function(k) {\n            specs[k] = {\n                value: src[k],\n                configurable: true,\n                writable: true,\n                enumerable: false\n            };\n        });\n        return specs;\n    };\n    var defaultProperties = function(dst, descs) {\n        getOwnPropertyNames(descs).forEach(function(k) {\n            if (!hasOwnProperty.call(dst, k)) defineProperty(\n                dst, k, descs[k]\n            );\n        });\n        return dst;\n    };\n    (Object.installProperties || defaultProperties)(Object, obj2specs({\n        // Avoid conflicts with other projects, rename glaem_clone\n        glaem_clone: clone,\n        // is: is,\n        // isnt: isnt,\n        // equals: equals\n    }));\n})(this);\n\n\n/*\n  Adding ../lib_espeak/glaemscribe_tts.js \n*/\n/*\n\nGlǽmscribe (also written Glaemscribe) is a software dedicated to\nthe transcription of texts between writing systems, and more \nspecifically dedicated to the transcription of J.R.R. Tolkien's \ninvented languages to some of his devised writing systems.\n\nCopyright (C) 2015 Benjamin Babut (Talagan).\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\nany later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Affero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public License\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n*/\n\n\n// A wrapper around espeak to perform handle various TTS tasks,\n// and generate IPA and/or WAV while keeping punctuations.\n//\n// Espeak does not have this feature, so this is a significantly dirty hack.\n// \n// Additionally we perform a few glaemscribe-specific tasks, such as preserving raw tengwar\n\n\n// For the ruby loader, define the Glaemscribe module.\nGlaemscribe = (typeof(Glaemscribe) === 'undefined')?({}):(Glaemscribe);\n\nGlaemscribe.TTS = function() { \n  \n  var client = this;\n  client.proxy = new ESpeakNGGlue();\n}\n\nGlaemscribe.TTS.ipa_configurations = {\n  'en-tengwar': {\n    special_token_ncn: '', // no space / sign / no space\n    special_token_ncs: '', // no space / sign / space\n    special_token_scn: '', // space / sign / no space\n    special_token_scs: '', // space / sign / space  \n    \n    special_token_ipa_ncn: '',\n    special_token_ipa_ncs: '',\n    special_token_ipa_scn: '',\n    special_token_ipa_scs: '',\n    // Replace by special token AND KEEP when calculating ipa\n    clauseaffecting_punctuation: \"!.,;:!?–—\", \n    // Replace by special token but do not keep when calculating ipa\n    // '’ : apostrophes should stay in the original text !!! Don't break liz's bag !!\n    // This is because apostrophes shouldn't trigger a pause in the prononciation (e.g. genitives) \n    clauseunaffecting_punctuation: \"·“”«»-[](){}<>≤≥$|\\\"\" \n  },  \n  'frt': {\n    special_token_ncn: '', // no space / sign / no space\n    special_token_ncs: '', // no space / sign / space\n    special_token_scn: '', // space / sign / no space\n    special_token_scs: '', // space / sign / space  \n    \n    special_token_ipa_ncn: '',\n    special_token_ipa_ncs: '',\n    special_token_ipa_scn: '',\n    special_token_ipa_scs: '',\n    // Replace by special token AND KEEP when calculating ipa\n    clauseaffecting_punctuation: \"!.,;:!?–—\", \n    // Replace by special token but do not keep when calculating ipa\n    // '’ : apostrophes should stay in the original text, let espeak eat them\n    // This is because apostrophes shouldn't trigger a pause in the prononciation (e.g. genitives) \n    clauseunaffecting_punctuation: \"·“”«»-[](){}<>≤≥$|\\\"\",\n    // Callback before reconstituing markers.\n    pre_reconsitute_markers_callback: function(text) {\n      // Long vowel back replacement.\n      return text.replace(/-/g,\"ː\");\n    }\n  }\n}\n\nGlaemscribe.TTS.ipa_configurations['en-tengwar']         = Glaemscribe.TTS.ipa_configurations['en-tengwar'];\nGlaemscribe.TTS.ipa_configurations['en-tengwar-rp']      = Glaemscribe.TTS.ipa_configurations['en-tengwar'];\nGlaemscribe.TTS.ipa_configurations['en-tengwar-gb']      = Glaemscribe.TTS.ipa_configurations['en-tengwar'];\nGlaemscribe.TTS.ipa_configurations['en-tengwar-us']      = Glaemscribe.TTS.ipa_configurations['en-tengwar'];\n\n\nGlaemscribe.TTS.voice_list = function(voice) {\n  return Object.keys(Glaemscribe.TTS.ipa_configurations);\n}\n\n// Static helper. To be used in pure js (not ruby).\nGlaemscribe.TTS.option_name_to_voice = function(oname) {\n  \n  if(!oname)\n    return null;\n  \n  return oname.toLowerCase().replace(/^espeak_voice_/,'').replace(/_/g,'-');\n}\n\n\nGlaemscribe.TTS.prototype.make_char_checker = function(string){\n  var cc = {};\n  for(var i=0;i<string.length;i++)\n  {\n    cc[string[i]] = string[i];\n  }\n  return cc;\n}\n\nGlaemscribe.TTS.prototype.escape_raw_mode = function(entry,full_remove) {\n  \n  var rawgexp   = /({{[\\s\\S]*?}})/g;\n  var captured  = []; \n  \n  var ret = entry.replace(rawgexp, function(match,p1) {\n    \n    captured.push(match);\n    if(full_remove)\n      return ' ';\n    else\n      return '∰∰';\n  });\n  \n  return [ret, captured];\n}\n\nGlaemscribe.TTS.prototype.pre_ipa = function(voice,text) {\n  \n  var client = this;\n  var config = Glaemscribe.TTS.ipa_configurations[voice];\n  \n  if(!config)\n    throw \"Trying to use unsupported voice '\" + voice + \"'!\";\n  \n  // Normalize all tabs by spaces\n  text = text.replace(/\\t/g,\" \");\n  // Small hack to prevent espeak from pronouncing last dot \n  // since our tokenization may isolate it.\n  text += \"\\n\";\n  \n  var cap = client.make_char_checker(config['clauseaffecting_punctuation']);\n  var cup = client.make_char_checker(config['clauseunaffecting_punctuation']);\n  \n  var accum = \"\";\n  var kept_signs = [];\n  \n  var prec_is_space = false;\n  var next_is_space = false;\n  for(var i=0;i<text.length;i++)\n  {\n    // Is precedent char a space ?\n    if(i == 0)\n      prec_is_space = false;\n    else\n      prec_is_space = (text[i-1] == \" \");\n    \n    // Is precedent char a space ?\n    if(i == text.length-1)\n      next_is_space = false;\n    else\n      next_is_space = (text[i+1] == \" \");\n    \n    if(text[i] == \"\\n\")\n    {\n      accum += config['special_token_ncn'];\n      kept_signs.push(text[i]);\n    }\n    else if(cap[text[i]] != null)\n    {\n      if(!prec_is_space && !next_is_space)\n      {\n        // Always insert spaces, but remember how they were placed\n        accum += \" \" + config['special_token_ncn'] + \" \" + text[i] + \" \";     \n        kept_signs.push(text[i]);\n      }\n      if(!prec_is_space && next_is_space)\n      {\n        // Always insert spaces, but remember how they were placed\n        accum += \" \" + config['special_token_ncs'] + \" \" + text[i] + \" \"; \n        kept_signs.push(text[i] + \" \");\n      }\n       if(prec_is_space && !next_is_space)\n      {\n        // Always insert spaces, but remember how they were placed\n        accum += \" \" + config['special_token_scn'] + \" \" + text[i] + \" \"; \n        kept_signs.push(\" \" + text[i]);\n      }\n      if(prec_is_space && next_is_space)\n      {\n        // Always insert spaces, but remember how they were placed\n        accum += \" \" + config['special_token_scs'] + \" \" + text[i] + \" \"; \n        kept_signs.push(\" \" + text[i] + \" \");\n      }         \n    }\n    else if(cup[text[i]] != null)\n    {\n        // The difference is that we don't keep the sign before calculating ipa.\n        // Just remove them to avoid espeak spell them\n      if(!prec_is_space && !next_is_space)\n      {\n        accum += \" \" + config['special_token_ncn'] + \" \" ;     \n        kept_signs.push(text[i]);\n      }\n      if(!prec_is_space && next_is_space)\n      {\n        accum += \" \" + config['special_token_ncs'] + \" \" ; \n        kept_signs.push(text[i] + \" \");\n      }\n       if(prec_is_space && !next_is_space)\n      {\n        accum += \" \" + config['special_token_scn'] + \" \" ; \n        kept_signs.push(\" \" + text[i]);\n      }\n      if(prec_is_space && next_is_space)\n      {\n        accum += \" \" + config['special_token_scs'] + \" \" ; \n        kept_signs.push(\" \" + text[i] + \" \");\n      }      \n    }\n    else\n    {\n      accum += text[i];\n    }\n  }\n  \n  //console.log(accum);\n  //console.log(kept_signs)\n  return [accum,kept_signs];\n}\n\nGlaemscribe.TTS.prototype.post_ipa = function(voice, ipa, kept_tokens) {\n  \n  var config = Glaemscribe.TTS.ipa_configurations[voice];\n  ipa = ipa.replace(/\\n/g,\" \");\n  if(config['pre_reconsitute_markers_callback'])\n    ipa = config['pre_reconsitute_markers_callback'](ipa);\n    \n  var ncnr = new RegExp(\"\\\\s*(\" + config['special_token_ipa_ncn'] + \")\\\\s*\",\"g\");\n  var scnr = new RegExp(\"\\\\s*(\" + config['special_token_ipa_scn'] + \")\\\\s*\",\"g\");\n  var ncsr = new RegExp(\"\\\\s*(\" + config['special_token_ipa_ncs'] + \")\\\\s*\",\"g\");\n  var scsr = new RegExp(\"\\\\s*(\" + config['special_token_ipa_scs'] + \")\\\\s*\",\"g\");\n  \n  // console.log(\"=====\")\n  // console.log(ipa)\n  // console.log(config)\n  // console.log(ncsr)\n  \n  // Tokens have been accumulated linearly\n  ipa = ipa.replace(ncnr, function(match, contents, offset, s) {return '∰∰'; });\n  ipa = ipa.replace(ncsr, function(match, contents, offset, s) {return '∰∰'; });\n  ipa = ipa.replace(scnr, function(match, contents, offset, s) {return '∰∰'; });\n  ipa = ipa.replace(scsr, function(match, contents, offset, s) {return '∰∰'; });\n    \n  // console.log(\"=====\")\n  // console.log(ipa)\n  var nth = -1;\n  ipa = ipa.replace(/∰∰/g,function(match, contents, offset, s) {\n    nth += 1;\n    return kept_tokens[nth];\n  });\n  \n  // Post-treatment of anti 'dot' pronounciation hack\n  if(ipa[ipa.length-1] === \"\\n\") \n    ipa = ipa.slice(0,-1);\n  \n  // console.log(\"=====\")\n  // console.log(ipa)\n  return ipa\n}\n\n\nGlaemscribe.TTS.prototype.synthesize_ipa = function(text, args, onended) {\n  \n  var client = this;\n  \n  args            = args || {}\n  var voice       = args.voice  || 'en-tengwar'\n  \n  var ts = new Date();\n  var tp = ts;\n    \n  // Cache raw things\n  var pre_raw_tokens = [];\n  if(args.has_raw_mode) {\n    var pre_raw_res    = this.escape_raw_mode(text,false);\n    text               = pre_raw_res[0];\n    pre_raw_tokens     = pre_raw_res[1]; \n  } \n    \n  // Pre parse ipa\n  var pre_ipa_tokens  = [];\n  var pre_ipa_res     = client.pre_ipa(voice,text);\n  text                = pre_ipa_res[0];\n  pre_ipa_tokens      = pre_ipa_res[1];\n\n  // Restitute raw things\n  if(args.has_raw_mode) {\n    var nth = -1;\n    text = text.replace(/∰∰/g,function(match, contents, offset, s) {\n      nth += 1;\n      return pre_raw_tokens[nth];\n    });\n  }\n  \n  args = args || {}\n  client.proxy.set_voice(args.voice  || 'en-tengwar');\n\n  var ts = new Date();\n  var ret = {};\n  client.proxy.synthesize(text, false, true, true, function(result) {\n       \n    // Post parse ipa\n    result.ipa            = client.post_ipa(voice, result.pho, pre_ipa_tokens);\n\n    var te = new Date();\n    result.synthesis_time = (te - ts);\n    delete result.pho;\n    \n    if(onended)\n      onended(result);\n\n    ret = result;\n  });\n  return ret;\n}\n\n// Should be kept separated from IPA, because we do not work on the same text\nGlaemscribe.TTS.prototype.synthesize_wav = function(text, args, onended) {\n  \n  var client = this;\n  \n  args            = args || {}\n  var voice       = args.voice  || 'en-tengwar'\n\n  args = args || {}\n  client.proxy.set_rate(args.rate    || 120);\n  client.proxy.set_pitch(args.pitch  || 5);\n  client.proxy.set_voice(args.voice  || 'en-tengwar');\n  \n  if(args.has_raw_mode) {\n    var pre_raw_res    = this.escape_raw_mode(text,true);\n    text               = pre_raw_res[0];\n  } \n\n  var ret = {};\n  var ts = new Date();\n  client.proxy.synthesize(text, true, false, false, function(result) {\n    var te = new Date();\n    result.synthesis_time = (te - ts);\n    delete result.pho;\n      \n    // Uint8Array > Array conversion, for ruby?\n    // ret.wav = [].slice.call(ret.wav);  \n  \n    if(onended)\n      onended(result);\n    \n    ret = result;\n  });\n  \n  return ret;\n}\n\nGlaemscribe.TTS.is_engine_loaded = function() {\n  return (typeof(ESpeakNGGlue) !== 'undefined');\n};\n\n\nGlaemscribe.resource_manager.raw_charsets[\"cirth_ds\"] = \"\\\\**\\n\\nGlǽmscribe (also written Glaemscribe) is a software dedicated to\\nthe transcription of texts between writing systems, and more \\nspecifically dedicated to the transcription of J.R.R. Tolkien\\'s \\ninvented languages to some of his devised writing systems.\\n\\nCopyright (C) 2015 Benjamin Babut (Talagan).\\n\\nThis program is free software: you can redistribute it and/or modify\\nit under the terms of the GNU Affero General Public License as published by\\nthe Free Software Foundation, either version 3 of the License, or\\nany later version.\\n\\nThis program is distributed in the hope that it will be useful,\\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\nGNU Affero General Public License for more details.\\n\\nYou should have received a copy of the GNU Affero General Public License\\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\\n\\n**\\\\\\n\\n\\n\\\\**   **\\\\ \\\\char 20 SPACE\\n\\\\** ! **\\\\ \\\\char 21 CIRTH_11\\n\\\\** \\\" **\\\\ \\\\char 22 CIRTH_EREB_3\\n\\\\** # **\\\\ \\\\char 23 CIRTH_13\\n\\\\** $ **\\\\ \\\\char 24 CIRTH_14\\n\\\\** % **\\\\ \\\\char 25 CIRTH_15\\n\\\\** & **\\\\ \\\\char 26 CIRTH_EREB_4\\n\\\\** \\' **\\\\ \\\\char 27 ?\\n\\\\** ( **\\\\ \\\\char 28 CIRTH_EREB_6\\n\\\\** ) **\\\\ \\\\char 29 CIRTH_EREB_7\\n\\\\** * **\\\\ \\\\char 2a CIRTH_EREB_5\\n\\\\** + **\\\\ \\\\char 2b CIRTH_NUMERAL_4\\n\\\\** , **\\\\ \\\\char 2c CIRTH_53\\n\\\\** - **\\\\ \\\\char 2d ?\\n\\\\** . **\\\\ \\\\char 2e CIRTH_54\\n\\\\** / **\\\\ \\\\char 2f CIRTH_55\\n\\\\** 0 **\\\\ \\\\char 30 CIRTH_10\\n\\\\** 1 **\\\\ \\\\char 31 CIRTH_1\\n\\\\** 2 **\\\\ \\\\char 32 CIRTH_2\\n\\\\** 3 **\\\\ \\\\char 33 CIRTH_3\\n\\\\** 4 **\\\\ \\\\char 34 CIRTH_4\\n\\\\** 5 **\\\\ \\\\char 35 CIRTH_5\\n\\\\** 6 **\\\\ \\\\char 36 CIRTH_6\\n\\\\** 7 **\\\\ \\\\char 37 CIRTH_7\\n\\\\** 8 **\\\\ \\\\char 38 CIRTH_8\\n\\\\** 9 **\\\\ \\\\char 39 CIRTH_9\\n\\\\** : **\\\\ \\\\char 3a CIRTH_EREB_2\\n\\\\** ; **\\\\ \\\\char 3b CIRTH_40\\n\\\\** < **\\\\ \\\\char 3c CIRTH_52_ALT\\n\\\\** = **\\\\ \\\\char 3d ?\\n\\\\** > **\\\\ \\\\char 3e CIRTH_55_ALT\\n\\\\** ? **\\\\ \\\\char 3f CIRTH_56_ALT\\n\\\\** @ **\\\\ \\\\char 40 CIRTH_12\\n\\\\** A **\\\\ \\\\char 41 CIRTH_41\\n\\\\** B **\\\\ \\\\char 42 CIRTH_60\\n\\\\** C **\\\\ \\\\char 43 CIRTH_58\\n\\\\** D **\\\\ \\\\char 44 CIRTH_43\\n\\\\** E **\\\\ \\\\char 45 CIRTH_28\\n\\\\** F **\\\\ \\\\char 46 CIRTH_44\\n\\\\** G **\\\\ \\\\char 47 CIRTH_45\\n\\\\** H **\\\\ \\\\char 48 ?\\n\\\\** I **\\\\ \\\\char 49 CIRTH_PUNCT_MID_DOT\\n\\\\** J **\\\\ \\\\char 4a CIRTH_38_ALT\\n\\\\** K **\\\\ \\\\char 4b CIRTH_EREB_1\\n\\\\** L **\\\\ \\\\char 4c CIRTH_45_ALT\\n\\\\** M **\\\\ \\\\char 4d CIRTH_51_ALT\\n\\\\** N **\\\\ \\\\char 4e CIRTH_SPACE\\n\\\\** O **\\\\ \\\\char 4f CIRTH_PUNCT_TWO_DOTS\\n\\\\** P **\\\\ \\\\char 50 CIRTH_PUNCT_THREE_DOTS\\n\\\\** Q **\\\\ \\\\char 51 CIRTH_26\\n\\\\** R **\\\\ \\\\char 52 CIRTH_29\\n\\\\** S **\\\\ \\\\char 53 CIRTH_42\\n\\\\** T **\\\\ \\\\char 54 CIRTH_30\\n\\\\** U **\\\\ \\\\char 55 CIRTH_PUNCT_STAR\\n\\\\** V **\\\\ \\\\char 56 CIRTH_59\\n\\\\** W **\\\\ \\\\char 57 CIRTH_27\\n\\\\** X **\\\\ \\\\char 58 CIRTH_57\\n\\\\** Y **\\\\ \\\\char 59 ?\\n\\\\** Z **\\\\ \\\\char 5a CIRTH_56\\n\\\\** [ **\\\\ \\\\char 5b ?\\n\\\\** \\\\ **\\\\ \\\\char 5c CIRTH_PUNCT_DOT\\n\\\\** ] **\\\\ \\\\char 5d ?\\n\\\\** ^ **\\\\ \\\\char 5e ?\\n\\\\** _ **\\\\ \\\\char 5f ?\\n\\\\** ` **\\\\ \\\\char 60 CIRTH_SPACE_BIG\\n\\\\** a **\\\\ \\\\char 61 CIRTH_31\\n\\\\** b **\\\\ \\\\char 62 CIRTH_50\\n\\\\** c **\\\\ \\\\char 63 CIRTH_48\\n\\\\** d **\\\\ \\\\char 64 CIRTH_33\\n\\\\** e **\\\\ \\\\char 65 CIRTH_18\\n\\\\** f **\\\\ \\\\char 66 CIRTH_34\\n\\\\** g **\\\\ \\\\char 67 CIRTH_35\\n\\\\** h **\\\\ \\\\char 68 CIRTH_36\\n\\\\** i **\\\\ \\\\char 69 CIRTH_23\\n\\\\** j **\\\\ \\\\char 6a CIRTH_37\\n\\\\** k **\\\\ \\\\char 6b CIRTH_38\\n\\\\** l **\\\\ \\\\char 6c CIRTH_39\\n\\\\** m **\\\\ \\\\char 6d CIRTH_52\\n\\\\** n **\\\\ \\\\char 6e CIRTH_51\\n\\\\** o **\\\\ \\\\char 6f CIRTH_24\\n\\\\** p **\\\\ \\\\char 70 CIRTH_25\\n\\\\** q **\\\\ \\\\char 71 CIRTH_16\\n\\\\** r **\\\\ \\\\char 72 CIRTH_19\\n\\\\** s **\\\\ \\\\char 73 CIRTH_32\\n\\\\** t **\\\\ \\\\char 74 CIRTH_20\\n\\\\** u **\\\\ \\\\char 75 CIRTH_22\\n\\\\** v **\\\\ \\\\char 76 CIRTH_49\\n\\\\** w **\\\\ \\\\char 77 CIRTH_17\\n\\\\** x **\\\\ \\\\char 78 CIRTH_47\\n\\\\** y **\\\\ \\\\char 79 CIRTH_21\\n\\\\** z **\\\\ \\\\char 7a CIRTH_46\\n\\\\** { **\\\\ \\\\char 7b CIRTH_PUNCT_THREE_DOTS_L\\n\\\\** | **\\\\ \\\\char 7c CIRTH_PUNCT_DOUBLE_VBAR\\n\\\\** } **\\\\ \\\\char 7d CIRTH_PUNCT_FOUR_DOTS\\n\\\\** ~ **\\\\ \\\\char 7e ?\\n\\\\**  **\\\\ \\\\char 80 ?\\n\\\\**   **\\\\ \\\\char a0 ?\\n\\\\** ¤ **\\\\ \\\\char a4 ?\\n\\\\** § **\\\\ \\\\char a7 ?\\n\\\\** © **\\\\ \\\\char a9 ?\\n\\\\** « **\\\\ \\\\char ab ?\\n\\\\** ® **\\\\ \\\\char ae ?\\n\\\\** ¶ **\\\\ \\\\char b6 ?\\n\\\\** » **\\\\ \\\\char bb ?\\n\\\\** ¼ **\\\\ \\\\char bc ?\\n\\\\** ½ **\\\\ \\\\char bd ?\\n\\\\** ¾ **\\\\ \\\\char be ?\\n\\\\** ¿ **\\\\ \\\\char bf ?\\n\\\\** À **\\\\ \\\\char c0 ?\\n\\\\** Á **\\\\ \\\\char c1 ?\\n\\\\** Â **\\\\ \\\\char c2 ?\\n\\\\** Ã **\\\\ \\\\char c3 ?\\n\\\\** Ä **\\\\ \\\\char c4 ?\\n\\\\** Å **\\\\ \\\\char c5 ?\\n\\\\** Æ **\\\\ \\\\char c6 ?\\n\\\\** Ç **\\\\ \\\\char c7 ?\\n\\\\** È **\\\\ \\\\char c8 ?\\n\\\\** É **\\\\ \\\\char c9 ?\\n\\\\** Ê **\\\\ \\\\char ca ?\\n\\\\** Ë **\\\\ \\\\char cb ?\\n\\\\** Ì **\\\\ \\\\char cc ?\\n\\\\** Í **\\\\ \\\\char cd ?\\n\\\\** Î **\\\\ \\\\char ce ?\\n\\\\** Ï **\\\\ \\\\char cf ?\\n\\\\** Ð **\\\\ \\\\char d0 ?\\n\\\\** Ñ **\\\\ \\\\char d1 ?\\n\\\\** Ò **\\\\ \\\\char d2 ?\\n\\\\** Ó **\\\\ \\\\char d3 ?\\n\\\\** Ô **\\\\ \\\\char d4 ?\\n\\\\** Õ **\\\\ \\\\char d5 ?\\n\\\\** Ö **\\\\ \\\\char d6 ?\\n\\\\** × **\\\\ \\\\char d7 ?\\n\\\\** Ø **\\\\ \\\\char d8 ?\\n\\\\** Ù **\\\\ \\\\char d9 ?\\n\\\\** Ú **\\\\ \\\\char da ?\\n\\\\** Û **\\\\ \\\\char db ?\\n\\\\** Ü **\\\\ \\\\char dc ?\\n\\\\** Ý **\\\\ \\\\char dd ?\\n\\\\** Þ **\\\\ \\\\char de ?\\n\\\\** ß **\\\\ \\\\char df ?\\n\\\\** à **\\\\ \\\\char e0 ?\\n\\\\** á **\\\\ \\\\char e1 ?\\n\\\\** â **\\\\ \\\\char e2 ?\\n\\\\** ã **\\\\ \\\\char e3 ?\\n\\\\** ä **\\\\ \\\\char e4 ?\\n\\\\** å **\\\\ \\\\char e5 ?\\n\\\\** æ **\\\\ \\\\char e6 ?\\n\\\\** ç **\\\\ \\\\char e7 ?\\n\\\\** è **\\\\ \\\\char e8 ?\\n\\\\** é **\\\\ \\\\char e9 ?\\n\\\\** ê **\\\\ \\\\char ea ?\\n\\\\** ë **\\\\ \\\\char eb ?\\n\\\\** ì **\\\\ \\\\char ec ?\\n\\\\** í **\\\\ \\\\char ed ?\\n\\\\** î **\\\\ \\\\char ee ?\\n\\\\** ï **\\\\ \\\\char ef ?\\n\\\\** ð **\\\\ \\\\char f0 ?\\n\\\\** ñ **\\\\ \\\\char f1 ?\\n\\\\** ò **\\\\ \\\\char f2 ?\\n\\\\** ó **\\\\ \\\\char f3 ?\\n\\\\** ô **\\\\ \\\\char f4 ?\\n\\\\** õ **\\\\ \\\\char f5 ?\\n\\\\** ö **\\\\ \\\\char f6 ?\\n\\\\** ÷ **\\\\ \\\\char f7 ?\\n\\\\** ø **\\\\ \\\\char f8 ?\\n\\\\** ù **\\\\ \\\\char f9 ?\\n\\\\** ú **\\\\ \\\\char fa ?\\n\\\\** û **\\\\ \\\\char fb ?\\n\\\\** ü **\\\\ \\\\char fc ?\\n\\\\** ý **\\\\ \\\\char fd ?\\n\\\\** þ **\\\\ \\\\char fe ?\\n\\\\** ÿ **\\\\ \\\\char ff ?\\n\\\\** ‘ **\\\\ \\\\char 2018 ?\\n\\\\** • **\\\\ \\\\char 2022 ?\\n\\\\** … **\\\\ \\\\char 2026 ?\\n\\\\** ‹ **\\\\ \\\\char 2039 ?\\n\\\\** › **\\\\ \\\\char 203a ?\\n\\\\** ∙ **\\\\ \\\\char 2219 ?\\n\\\\** ◼ **\\\\ \\\\char 25fc ?\\n\\n\"\nGlaemscribe.resource_manager.raw_charsets[\"eldamar\"] = \"\\\\**\\n\\nGlǽmscribe (also written Glaemscribe) is a software dedicated to\\nthe transcription of texts between writing systems, and more \\nspecifically dedicated to the transcription of J.R.R. Tolkien\\'s \\ninvented languages to some of his devised writing systems.\\n\\nCopyright (C) 2015 Benjamin Babut (Talagan).\\n\\nThis program is free software: you can redistribute it and/or modify\\nit under the terms of the GNU Affero General Public License as published by\\nthe Free Software Foundation, either version 3 of the License, or\\nany later version.\\n\\nThis program is distributed in the hope that it will be useful,\\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\nGNU Affero General Public License for more details.\\n\\nYou should have received a copy of the GNU Affero General Public License\\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\\n\\n**\\\\\\n\\n\\\\version 0.0.1\\n\\n\\\\beg changelog\\n  \\\\entry \\\"0.0.1\\\" \\\"Copy pasted from FreeMono charset.\\\"\\n\\\\end\\n\\n\\\\char 20 SPACE\\n\\\\char a0 NBSP\\n\\n\\\\** PUSTAR, take them in unicode not in personnal use (deprecation) **\\\\\\n\\\\char 2e31 PUNCT_DOT\\n\\\\char   3a PUNCT_DDOT\\n\\\\char 205D PUNCT_TDOT PUSTA_3\\n\\\\char 2058 PUSTA_4\\n\\\\char 10FB PUSTA_4_HALFED\\n\\\\char 2E2C PUSTA_4_SQUARED\\n\\\\char 2E2D PUSTA_5\\n\\n\\\\char e000  TW_11 TINCO     \\n\\\\char e001  TW_12 PARMA\\n\\\\char e002  TW_13 CALMA\\n\\\\char e003  TW_14 QUESSE\\n\\n\\\\char e004  TW_21 ANDO  \\n\\\\char e005  TW_22 UMBAR\\n\\\\char e006  TW_23 ANGA  \\n\\\\char e007  TW_24 UNGWE\\n      \\n\\\\char e008  TW_31 SULE THULE\\n\\\\char e009  TW_32 FORMEN\\n\\\\char e00A  TW_33 AHA  \\n\\\\char e00B  TW_34 HWESTA\\n\\n\\\\char e00C  TW_41 ANTO\\n\\\\char e00D  TW_42 AMPA\\n\\\\char e00E  TW_43 ANCA\\n\\\\char e00F  TW_44 UNQUE\\n\\n\\\\char e010  TW_51 NUMEN \\n\\\\char e011  TW_52 MALTA\\n\\\\char e012  TW_53 NOLDO\\n\\\\char e013  TW_54 NWALME\\n\\n\\\\char e014  TW_61 ORE\\n\\\\char e015  TW_62 VALA\\n\\\\char e016  TW_63 ANNA\\n\\\\char e017  TW_64 VILYA\\n\\n\\\\char e018  TW_EXT_11 TINCO_EXT SULE_EXT THULE_EXT\\n\\\\char e019  TW_EXT_12 PARMA_EXT FORMEN_EXT \\n\\\\char e01A  TW_EXT_13 CALMA_EXT AHA_EXT\\n\\\\char e01B  TW_EXT_14 QUESSE_EXT HWESTA_EXT\\n        \\n\\\\char e01C  TW_EXT_21 ANDO_EXT ANTO_EXT \\n\\\\char e01D  TW_EXT_22 UMBAR_EXT AMPA_EXT\\n\\\\char e01E  TW_EXT_23 ANGA_EXT ANCA_EXT\\n\\\\char e01F  TW_EXT_24 UNGWE_EXT UNQUE_EXT\\n\\n\\\\char e020  TW_71 ROMEN\\n\\\\char e021  TW_72 ARDA\\n\\\\char e022  TW_73 LAMBE\\n\\\\char e023  TW_74 ALDA \\n\\n\\\\char e024  TW_81 SILME \\n\\\\** Unfortunately, monotengwar is missing silme nuquerna used for y in beleriand **\\\\\\n\\\\char e025  TW_82 SILME_NUQUERNA SILME_NUQUERNA_ALT\\n\\\\char e026  TW_83 ESSE\\n\\\\char e027  TW_84 ESSE_NUQUERNA\\n\\n\\\\char e028  TW_91 HYARMEN \\n\\\\char e029  TW_92 HWESTA_SINDARINWA \\n\\\\char e02A  TW_93 YANTA\\n\\\\char e02B  TW_94 URE\\n\\n\\\\char e02C  ARA\\n\\\\char e02D  HALLA\\n\\\\char e02E  TELCO\\n\\\\char e02F  ?      \\n\\n\\\\char e030  REVERSED_OSSE\\n\\\\char e031  BOMBADIL_W \\n\\\\char e032  OSSE\\n\\\\char e033  ?\\n\\n\\\\char e034  LIGATING_SHORT_CARRIER\\n\\\\char e035  ?\\n\\\\char e036  ANNA_OPEN\\n\\\\char e037  CHRISTOPHER_QU\\n\\n\\\\char e038  ?\\n\\\\char e039  BOMBADIL_HW\\n\\\\char e03A  TW_MH MALTA_W_HOOK \\n\\\\char e03B  TW_MH_BELERIANDIC VALA_W_HOOK \\n\\n\\\\char e03C  TW_HW_LOWDHAM HARP_SHAPED\\n\\\\char e03D  VAIA WAIA VAIYA\\n\\\\char e03E  ?\\n\\\\char e03F  ?      \\n\\n\\\\char e040  A_TEHTA\\n\\\\char e041  A_TEHTA_INF\\n\\\\char e042  I_TEHTA_DOUBLE Y_TEHTA\\n\\\\char e043  I_TEHTA_DOUBLE_INF PALATAL_SIGN Y_TEHTA_INF \\n\\n\\\\char e044  I_TEHTA\\n\\\\char e045  I_TEHTA_INF NO_VOWEL_DOT UNUTIXE\\n\\\\char e046  E_TEHTA\\n\\\\char e047  E_TEHTA_INF\\n\\n\\\\char e048  E_TEHTA_DOUBLE\\n\\\\char e049  E_TEHTA_DOUBLE_INF GEMINATE_DOUBLE\\n\\\\char e04A  O_TEHTA\\n\\\\char e04B  O_TEHTA_INF\\n\\n\\\\char e04C  U_TEHTA\\n\\\\char e04D  U_TEHTA_INF\\n\\\\char e04E  O_TEHTA_DOUBLE\\n\\\\char e04F  U_TEHTA_DOUBLE\\n\\n\\\\char e050  NASALIZE_SIGN NASALIZE_SIGN_TILD      \\n\\\\char e051  GEMINATE_SIGN GEMINATE_SIGN_TILD\\n\\\\char e052  WA_TEHTA SEV_TEHTA\\n\\\\char e053  TEHTA_BREVE A_TEHTA_CIRCUM_REVERSED\\n\\n\\\\char e054  E_TEHTA_GRAVE\\n\\\\char e055  A_TEHTA_CIRCUM  \\n\\\\char e056  A_TEHTA_REVERSED A_TEHTA_DOUBLE\\n\\\\char e057  THINNAS  THINF_STROKE\\n\\n\\\\** THE TWO FOLLOWING ONES ARE HIGHLY DISCUSSABLE, MAYBE WE SHOULD ADD A VIRTUAL CHAR FOR THESE **\\\\\\n\\\\char e058  SARINCE_ENDING_LONG SARINCE_FLOURISHED\\n\\\\char e059  SARINCE COMBINING_SARINCE SHOOK_RIGHT_L SHOOK_LEFT_L \\n\\\\char e05A  ?\\n\\\\char e05B  ?\\n\\n\\\\char e065  PUNCT_EXCLAM\\n\\\\char e066  PUNCT_INTERR\\n\\\\char e067  ELVISH_PAREN PUNCT_PAREN_L PUNCT_PAREN_R PUNCT_PAREN_L_ALT PUNCT_PAREN_R_ALT BOOKMARK_SIGN\\n\\\\char e068  PUNCT_TILD\\n \\n\\\\char e069  PUNCT_DTILD RING_MARK_L RING_MARK_R\\n\\n\\\\char e06A  DQUOT_OPEN\\n\\\\char e06B  DQUOT_CLOSE\\n\\\\char e06C  THORIN_EXCLAMATION\\n\\n\\\\char e070 NUM_0 \\n\\\\char e071 NUM_1 \\n\\\\char e072 NUM_2 \\n\\\\char e073 NUM_3 \\n\\\\char e074 NUM_4 \\n\\\\char e075 NUM_5 \\n\\\\char e076 NUM_6 \\n\\\\char e077 NUM_7 \\n\\\\char e078 NUM_8 \\n\\\\char e079 NUM_9 \\n\\\\char e07A NUM_10\\n\\\\char e07B NUM_11\\n\\\\char e07C NUM_12\\n\\n\\\\char e07D CIRC_TEHTA_INF\\n\\n\\\\** Ligatured results are mapped here **\\\\\\n\\\\**\\n\\\\char 10037 AHA_TINCO\\n\\\\char 10038 HWESTA_TINCO\\n\\\\char 10039 ANCA_CLOSED SILME_AHA\\n**\\\\\\n\\n\\\\char 204A OLD_ENGLISH_AND\\n\\n\\\\char 200d ZWJ\\n\\n\\\\** Ligatured sequences used as one entity in modes **\\\\\\n\\\\beg seq AHA_TINCO\\n  AHA ZWJ TINCO\\n\\\\end\\n\\n\\\\beg seq HWESTA_TINCO\\n  HWESTA ZWJ TINCO\\n\\\\end\\n\\n\\\\beg seq ANCA_CLOSED SILME_AHA\\n  SILME ZWJ AHA\\n\\\\end\\n\\n\"\nGlaemscribe.resource_manager.raw_charsets[\"sarati_eldamar\"] = \"\\\\**\\n\\nGlǽmscribe (also written Glaemscribe) is a software dedicated to\\nthe transcription of texts between writing systems, and more \\nspecifically dedicated to the transcription of J.R.R. Tolkien\\'s \\ninvented languages to some of his devised writing systems.\\n\\nCopyright (C) 2015 Benjamin Babut (Talagan).\\n\\nThis program is free software: you can redistribute it and/or modify\\nit under the terms of the GNU Affero General Public License as published by\\nthe Free Software Foundation, either version 3 of the License, or\\nany later version.\\n\\nThis program is distributed in the hope that it will be useful,\\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\nGNU Affero General Public License for more details.\\n\\nYou should have received a copy of the GNU Affero General Public License\\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\\n\\n**\\\\\\n\\n\\\\**   **\\\\ \\\\char 20 ?\\n\\\\** ! **\\\\ \\\\char 21 SARATI_SPACE\\n\\\\** \\\" **\\\\ \\\\char 22 SARATI_T\\n\\\\** # **\\\\ \\\\char 23 SARATI_QUENYA_C\\n\\\\** $ **\\\\ \\\\char 24 ?\\n\\\\** % **\\\\ \\\\char 25 SARATI_D\\n\\\\** & **\\\\ \\\\char 26 SARATI_NG\\n\\\\** \\' **\\\\ \\\\char 27 SARATI_PHONETIC_GW\\n\\\\** ( **\\\\ \\\\char 28 ?\\n\\\\** ) **\\\\ \\\\char 29 ?\\n\\\\** * **\\\\ \\\\char 2a ?\\n\\\\** + **\\\\ \\\\char 2b SARATI_QUENYA_VELAR_NASAL\\n\\\\** , **\\\\ \\\\char 2c SARATI_QUENYA_NW\\n\\\\** - **\\\\ \\\\char 2d ?\\n\\\\** . **\\\\ \\\\char 2e ?\\n\\\\** / **\\\\ \\\\char 2f ?\\n\\\\** 0 **\\\\ \\\\char 30 ?\\n\\\\** 1 **\\\\ \\\\char 31 ?\\n\\\\** 2 **\\\\ \\\\char 32 ?\\n\\\\** 3 **\\\\ \\\\char 33 ?\\n\\\\** 4 **\\\\ \\\\char 34 ?\\n\\\\** 5 **\\\\ \\\\char 35 ?\\n\\\\** 6 **\\\\ \\\\char 36 ?\\n\\\\** 7 **\\\\ \\\\char 37 ?\\n\\\\** 8 **\\\\ \\\\char 38 ?\\n\\\\** 9 **\\\\ \\\\char 39 ?\\n\\\\** : **\\\\ \\\\char 3a ?\\n\\\\** ; **\\\\ \\\\char 3b ?\\n\\\\** < **\\\\ \\\\char 3c ?\\n\\\\** = **\\\\ \\\\char 3d ?\\n\\\\** > **\\\\ \\\\char 3e ?\\n\\\\** ? **\\\\ \\\\char 3f SARATI_L\\n\\\\** @ **\\\\ \\\\char 40 ?\\n\\\\** A **\\\\ \\\\char 41 SARATI_QUENYA_HL\\n\\\\** B **\\\\ \\\\char 42 ?\\n\\\\** C **\\\\ \\\\char 43 ?\\n\\\\** D **\\\\ \\\\char 44 ?\\n\\\\** E **\\\\ \\\\char 45 ?\\n\\\\** F **\\\\ \\\\char 46 SARATI_R\\n\\\\** G **\\\\ \\\\char 47 ?\\n\\\\** H **\\\\ \\\\char 48 ?\\n\\\\** I **\\\\ \\\\char 49 ?\\n\\\\** J **\\\\ \\\\char 4a SARATI_QUENYA_HR\\n\\\\** K **\\\\ \\\\char 4b ?\\n\\\\** L **\\\\ \\\\char 4c ?\\n\\\\** M **\\\\ \\\\char 4d ?\\n\\\\** N **\\\\ \\\\char 4e ?\\n\\\\** O **\\\\ \\\\char 4f ?\\n\\\\** P **\\\\ \\\\char 50 SARATI_M\\n\\\\** Q **\\\\ \\\\char 51 ?\\n\\\\** R **\\\\ \\\\char 52 ?\\n\\\\** S **\\\\ \\\\char 53 ?\\n\\\\** T **\\\\ \\\\char 54 ?\\n\\\\** U **\\\\ \\\\char 55 ?\\n\\\\** V **\\\\ \\\\char 56 ?\\n\\\\** W **\\\\ \\\\char 57 ?\\n\\\\** X **\\\\ \\\\char 58 ?\\n\\\\** Y **\\\\ \\\\char 59 ?\\n\\\\** Z **\\\\ \\\\char 5a SARATI_P\\n\\\\** [ **\\\\ \\\\char 5b SARATI_F\\n\\\\** \\\\ **\\\\ \\\\char 5c SARATI_QUENYA_F_ALT\\n\\\\** ] **\\\\ \\\\char 5d ?\\n\\\\** ^ **\\\\ \\\\char 5e ?\\n\\\\** _ **\\\\ \\\\char 5f SARATI_B SARATI_QUENYA_MB\\n\\\\** ` **\\\\ \\\\char 60 SARATI_V\\n\\\\** a **\\\\ \\\\char 61 SARATI_QUENYA_V_ALT\\n\\\\** b **\\\\ \\\\char 62 ?\\n\\\\** c **\\\\ \\\\char 63 ?\\n\\\\** d **\\\\ \\\\char 64 SARATI_QUENYA_MP SARATI_QUENYA_QU_ALT\\n\\\\** e **\\\\ \\\\char 65 ?\\n\\\\** f **\\\\ \\\\char 66 ?\\n\\\\** g **\\\\ \\\\char 67 SARATI_QUENYA_TS\\n\\\\** h **\\\\ \\\\char 68 ?\\n\\\\** i **\\\\ \\\\char 69 ?\\n\\\\** j **\\\\ \\\\char 6a ?\\n\\\\** k **\\\\ \\\\char 6b ?\\n\\\\** l **\\\\ \\\\char 6c ?\\n\\\\** m **\\\\ \\\\char 6d ?\\n\\\\** n **\\\\ \\\\char 6e SARATI_VOICELESS_VELAR_FRICATIVE\\n\\\\** o **\\\\ \\\\char 6f ?\\n\\\\** p **\\\\ \\\\char 70 SARATI_QUENYA_QU\\n\\\\** q **\\\\ \\\\char 71 SARATI_VOICED_VELAR_FRICATIVE\\n\\\\** r **\\\\ \\\\char 72 ?\\n\\\\** s **\\\\ \\\\char 73 SARATI_QUENYA_NGW\\n\\\\** t **\\\\ \\\\char 74 ?\\n\\\\** u **\\\\ \\\\char 75 ?\\n\\\\** v **\\\\ \\\\char 76 SARATI_QUENYA_ST\\n\\\\** w **\\\\ \\\\char 77 ?\\n\\\\** x **\\\\ \\\\char 78 ?\\n\\\\** y **\\\\ \\\\char 79 SARATI_QUENYA_X SARATI_VELAR_LATERAL_APPROXIMANT\\n\\\\** z **\\\\ \\\\char 7a SARATI_UVULAR_TRILL\\n\\\\** { **\\\\ \\\\char 7b ?\\n\\\\** | **\\\\ \\\\char 7c ?\\n\\\\** } **\\\\ \\\\char 7d ?\\n\\\\** ~ **\\\\ \\\\char 7e ?\\n\\\\**   **\\\\ \\\\char a0 ?\\n\\\\** ¡ **\\\\ \\\\char a1 ?\\n\\\\** ¢ **\\\\ \\\\char a2 SARATI_VOICELESS_PALATO_ALVEOLAR_SIBILANT_FRICATIVE\\n\\\\** £ **\\\\ \\\\char a3 ?\\n\\\\** ¤ **\\\\ \\\\char a4 ?\\n\\\\** ¥ **\\\\ \\\\char a5 ?\\n\\\\** ¦ **\\\\ \\\\char a6 SARATI_QUENYA_SS_ALT_1\\n\\\\** § **\\\\ \\\\char a7 ?\\n\\\\** ¨ **\\\\ \\\\char a8 ?\\n\\\\** © **\\\\ \\\\char a9 ?\\n\\\\** ª **\\\\ \\\\char aa SARATI_QUENYA_NT\\n\\\\** « **\\\\ \\\\char ab SARATI_VOICED_DENTAL_FRICATIVE\\n\\\\** ¬ **\\\\ \\\\char ac ?\\n\\\\** ­ **\\\\ \\\\char ad ?\\n\\\\** ® **\\\\ \\\\char ae ?\\n\\\\** ¯ **\\\\ \\\\char af ?\\n\\\\** ° **\\\\ \\\\char b0 ?\\n\\\\** ± **\\\\ \\\\char b1 SARATI_QUENYA_TY\\n\\\\** ² **\\\\ \\\\char b2 SARATI_QUENYA_HT_ALT_1\\n\\\\** ³ **\\\\ \\\\char b3 SARATI_QUENYA_NDY\\n\\\\** ´ **\\\\ \\\\char b4 ?\\n\\\\** µ **\\\\ \\\\char b5 ?\\n\\\\** ¶ **\\\\ \\\\char b6 ?\\n\\\\** · **\\\\ \\\\char b7 ?\\n\\\\** ¸ **\\\\ \\\\char b8 ?\\n\\\\** ¹ **\\\\ \\\\char b9 SARATI_W\\n\\\\** º **\\\\ \\\\char ba SARATI_QUENYA_HW SARATI_VOICELESS_LABIOVELAR_APPROXIMANT\\n\\\\** » **\\\\ \\\\char bb SARATI_QUENYA_Y SARATI_J\\n\\\\** ¼ **\\\\ \\\\char bc ?\\n\\\\** ½ **\\\\ \\\\char bd SARATI_QUENYA_HY SARATI_VOICELESS_PALATAL_APPROXIMANT\\n\\\\** ¾ **\\\\ \\\\char be ?\\n\\\\** ¿ **\\\\ \\\\char bf ?\\n\\\\** À **\\\\ \\\\char c0 SARATI_N\\n\\\\** Á **\\\\ \\\\char c1 ?\\n\\\\** Â **\\\\ \\\\char c2 ?\\n\\\\** Ã **\\\\ \\\\char c3 ?\\n\\\\** Ä **\\\\ \\\\char c4 ?\\n\\\\** Å **\\\\ \\\\char c5 ?\\n\\\\** Æ **\\\\ \\\\char c6 ?\\n\\\\** Ç **\\\\ \\\\char c7 ?\\n\\\\** È **\\\\ \\\\char c8 SARATI_QUENYA_LONG_VOWEL_CARRIER\\n\\\\** É **\\\\ \\\\char c9 ?\\n\\\\** Ê **\\\\ \\\\char ca ?\\n\\\\** Ë **\\\\ \\\\char cb SARATI_H\\n\\\\** Ì **\\\\ \\\\char cc ?\\n\\\\** Í **\\\\ \\\\char cd PUNCT_DOT\\n\\\\** Î **\\\\ \\\\char ce PUNCT_2_DOT\\n\\\\** Ï **\\\\ \\\\char cf PUNCT_TRI\\n\\\\** Ð **\\\\ \\\\char d0 PUNCT_2_TRI\\n\\\\** Ñ **\\\\ \\\\char d1 ?\\n\\\\** Ò **\\\\ \\\\char d2 SARATI_DOT_U SARATI_QUENYA_I\\n\\\\** Ó **\\\\ \\\\char d3 SARATI_DOT_D\\n\\\\** Ô **\\\\ \\\\char d4 ?\\n\\\\** Õ **\\\\ \\\\char d5 ?\\n\\\\** Ö **\\\\ \\\\char d6 SARATI_QUENYA_A\\n\\\\** × **\\\\ \\\\char d7 ?\\n\\\\** Ø **\\\\ \\\\char d8 SARATI_QUENYA_A_REVERSED\\n\\\\** Ù **\\\\ \\\\char d9 ?\\n\\\\** Ú **\\\\ \\\\char da ?\\n\\\\** Û **\\\\ \\\\char db ?\\n\\\\** Ü **\\\\ \\\\char dc SARATI_QUENYA_O\\n\\\\** Ý **\\\\ \\\\char dd ?\\n\\\\** Þ **\\\\ \\\\char de SARATI_QUENYA_U\\n\\\\** ß **\\\\ \\\\char df ?\\n\\\\** à **\\\\ \\\\char e0 ?\\n\\\\** á **\\\\ \\\\char e1 ?\\n\\\\** â **\\\\ \\\\char e2 ?\\n\\\\** ã **\\\\ \\\\char e3 ?\\n\\\\** ä **\\\\ \\\\char e4 ?\\n\\\\** å **\\\\ \\\\char e5 ?\\n\\\\** æ **\\\\ \\\\char e6 ?\\n\\\\** ç **\\\\ \\\\char e7 ?\\n\\\\** è **\\\\ \\\\char e8 SARATI_QUENYA_E\\n\\\\** é **\\\\ \\\\char e9 ?\\n\\\\** ê **\\\\ \\\\char ea ?\\n\\\\** ë **\\\\ \\\\char eb ?\\n\\\\** ì **\\\\ \\\\char ec ?\\n\\\\** í **\\\\ \\\\char ed ?\\n\\\\** î **\\\\ \\\\char ee ?\\n\\\\** ï **\\\\ \\\\char ef ?\\n\\\\** ð **\\\\ \\\\char f0 SARATI_DIACRITIC_CIRCLE\\n\\\\** ñ **\\\\ \\\\char f1 ?\\n\\\\** ò **\\\\ \\\\char f2 SARATI_DASH_U\\n\\\\** ó **\\\\ \\\\char f3 SARATI_DASH_D\\n\\\\** ô **\\\\ \\\\char f4 ?\\n\\\\** õ **\\\\ \\\\char f5 ?\\n\\\\** ö **\\\\ \\\\char f6 ?\\n\\\\** ÷ **\\\\ \\\\char f7 ?\\n\\\\** ø **\\\\ \\\\char f8 ?\\n\\\\** ù **\\\\ \\\\char f9 ?\\n\\\\** ú **\\\\ \\\\char fa ?\\n\\\\** û **\\\\ \\\\char fb ?\\n\\\\** ü **\\\\ \\\\char fc ?\\n\\\\** ý **\\\\ \\\\char fd ?\\n\\\\** þ **\\\\ \\\\char fe ?\\n\\\\** ÿ **\\\\ \\\\char ff ?\\n\\\\** Ā **\\\\ \\\\char 100 ?\\n\\\\** ā **\\\\ \\\\char 101 ?\\n\\\\** Ă **\\\\ \\\\char 102 ?\\n\\\\** Đ **\\\\ \\\\char 110 ?\\n\\\\** đ **\\\\ \\\\char 111 ?\\n\\\\** Ġ **\\\\ \\\\char 120 ?\\n\\\\** ġ **\\\\ \\\\char 121 ?\\n\\\\** Ģ **\\\\ \\\\char 122 ?\\n\\\\** ģ **\\\\ \\\\char 123 ?\\n\\\\** Ĥ **\\\\ \\\\char 124 ?\\n\\\\** İ **\\\\ \\\\char 130 ?\\n\\\\** ı **\\\\ \\\\char 131 ?\\n\\\\** ŀ **\\\\ \\\\char 140 ?\\n\\\\** Œ **\\\\ \\\\char 152 SARATI_QUENYA_HTY\\n\\\\** œ **\\\\ \\\\char 153 ?\\n\\\\** Š **\\\\ \\\\char 160 ?\\n\\\\** š **\\\\ \\\\char 161 ?\\n\\\\** Ÿ **\\\\ \\\\char 178 SARATI_QUENYA_S\\n\\\\** Ž **\\\\ \\\\char 17d ?\\n\\\\** ž **\\\\ \\\\char 17e ?\\n\\\\** ƒ **\\\\ \\\\char 192 ?\\n\\\\** ˆ **\\\\ \\\\char 2c6 ?\\n\\\\** ˜ **\\\\ \\\\char 2dc SARATI_QUENYA_NQU\\n\\\\** – **\\\\ \\\\char 2013 ?\\n\\\\** — **\\\\ \\\\char 2014 SARATI_QUENYA_NC\\n\\\\** ‘ **\\\\ \\\\char 2018 ?\\n\\\\** ’ **\\\\ \\\\char 2019 ?\\n\\\\** ‚ **\\\\ \\\\char 201a ?\\n\\\\** “ **\\\\ \\\\char 201c ?\\n\\\\** ” **\\\\ \\\\char 201d ?\\n\\\\** „ **\\\\ \\\\char 201e SARATI_QUENYA_NTY\\n\\\\** † **\\\\ \\\\char 2020 ?\\n\\\\** ‡ **\\\\ \\\\char 2021 ?\\n\\\\** • **\\\\ \\\\char 2022 ?\\n\\\\** … **\\\\ \\\\char 2026 SARATI_QUENYA_STY\\n\\\\** ‰ **\\\\ \\\\char 2030 SARATI_QUENYA_NY\\n\\\\** ‹ **\\\\ \\\\char 2039 ?\\n\\\\** › **\\\\ \\\\char 203a ?\\n\\\\** € **\\\\ \\\\char 20ac SARATI_QUENYA_ND\\n\\\\** ™ **\\\\ \\\\char 2122 ?\\n\\n\"\nGlaemscribe.resource_manager.raw_charsets[\"tengwar_ds_annatar\"] = \"\\\\**\\n\\nGlǽmscribe (also written Glaemscribe) is a software dedicated to\\nthe transcription of texts between writing systems, and more \\nspecifically dedicated to the transcription of J.R.R. Tolkien\\'s \\ninvented languages to some of his devised writing systems.\\n\\nCopyright (C) 2015 Benjamin Babut (Talagan).\\n\\nThis program is free software: you can redistribute it and/or modify\\nit under the terms of the GNU Affero General Public License as published by\\nthe Free Software Foundation, either version 3 of the License, or\\nany later version.\\n\\nThis program is distributed in the hope that it will be useful,\\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\nGNU Affero General Public License for more details.\\n\\nYou should have received a copy of the GNU Affero General Public License\\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\\n\\n**\\\\\\n\\n\\\\** Charset specially customized for Tengwar Annatar (Glaemscrafu patched version) **\\\\ \\n\\n\\\\version 0.1.0\\n\\n\\\\beg changelog\\n  \\\\entry \\\"0.0.5\\\" \\\"Added VALA_W_HOOK, VAIYA. Moved A_TEHTA_INV_L due to soft hyphen bug.\\\"\\n  \\\\entry \\\"0.0.6\\\" \\\"Superior and inferior dash and tild consonant modification signs have been added for halla, telco and ara. / Added pustar combinations (4/4-halfed/4-squared/5)\\\"\\n  \\\\entry \\\"0.0.7\\\" \\\"Fixed missing tinco_ext / sule_ext\\\"\\n  \\\\entry \\\"0.0.8\\\" \\\"Added NBSP\\\"\\n  \\\\entry \\\"0.0.9\\\" \\\"Moved back some chars to latin blocks to avoid word-wrapping problems\\\"\\n  \\\\entry \\\"0.1.0\\\" \\\"Added ELVISH_PAREN tokien, reworked sarince token names.\\\"\\n\\\\end\\n\\n\\\\**   **\\\\ \\\\char 20 SPACE              \\n\\\\** ! **\\\\ \\\\char 21 TW_EXT_11 TINCO_EXT SULE_EXT THULE_EXT                   \\n\\\\** \\\" **\\\\ \\\\char 22 DASH_INF_L            \\n\\\\** # **\\\\ \\\\char 23 A_TEHTA_XL          \\n\\\\** $ **\\\\ \\\\char 24 E_TEHTA_XL   \\n\\\\** % **\\\\ \\\\char 25 I_TEHTA_XL     \\n\\\\** & **\\\\ \\\\char 26 U_TEHTA_XL        \\n\\\\** \\' **\\\\ \\\\char 27 DASH_INF_S            \\n\\\\** ( **\\\\ \\\\char 28 ?                \\n\\\\** ) **\\\\ \\\\char 29 TILD_XSUP_L           \\n\\\\** * **\\\\ \\\\char 2a ?                \\n\\\\** + **\\\\ \\\\char 2b SARINCE_RIGHT_V1 SHOOK_RIGHT_L          \\n\\\\** , **\\\\ \\\\char 2c TW_84 ESSE_NUQUERNA       \\n\\\\** - **\\\\ \\\\char 2d PUNCT_DDOT            \\n\\\\** . **\\\\ \\\\char 2e TW_94 URE            \\n\\\\** / **\\\\ \\\\char 2f TILD_XINF_S           \\n\\\\** 0 **\\\\ \\\\char 30 TILD_XSUP_S           \\n\\\\** 1 **\\\\ \\\\char 31 TW_11 TINCO           \\n\\\\** 2 **\\\\ \\\\char 32 TW_21 ANDO           \\n\\\\** 3 **\\\\ \\\\char 33 TW_31 SULE THULE        \\n\\\\** 4 **\\\\ \\\\char 34 TW_41 ANTO           \\n\\\\** 5 **\\\\ \\\\char 35 TW_51 NUMEN           \\n\\\\** 6 **\\\\ \\\\char 36 TW_61 ORE            \\n\\\\** 7 **\\\\ \\\\char 37 TW_71 ROMEN           \\n\\\\** 8 **\\\\ \\\\char 38 TW_81 SILME           \\n\\\\** 9 **\\\\ \\\\char 39 TW_91 HYARMEN          \\n\\\\** : **\\\\ \\\\char 3a TILD_INF_L            \\n\\\\** ; **\\\\ \\\\char 3b TILD_INF_S            \\n\\\\** < **\\\\ \\\\char 3c ?  \\\\** Does not look compliant between DS and Annatar **\\\\\\n\\\\** = **\\\\ \\\\char 3d PUNCT_DOT            \\n\\\\** > **\\\\ \\\\char 3e ?                \\n\\\\** ? **\\\\ \\\\char 3f TILD_XINF_L           \\n\\\\** @ **\\\\ \\\\char 40 TW_EXT_21 ANDO_EXT ANTO_EXT            \\n\\\\** A **\\\\ \\\\char 41 TW_EXT_13 CALMA_EXT AHA_EXT            \\n\\\\** B **\\\\ \\\\char 42 I_TEHTA_XS     \\n\\\\** C **\\\\ \\\\char 43 A_TEHTA_XS          \\n\\\\** D **\\\\ \\\\char 44 A_TEHTA_S           \\n\\\\** E **\\\\ \\\\char 45 A_TEHTA_L           \\n\\\\** F **\\\\ \\\\char 46 E_TEHTA_S    \\n\\\\** G **\\\\ \\\\char 47 I_TEHTA_S           \\n\\\\** H **\\\\ \\\\char 48 O_TEHTA_S           \\n\\\\** I **\\\\ \\\\char 49 SILME_NUQUERNA_ALT \\\\** Used for y in s. beleriand **\\\\                \\n\\\\** J **\\\\ \\\\char 4a U_TEHTA_S         \\n\\\\** K **\\\\ \\\\char 4b ?                \\n\\\\** L **\\\\ \\\\char 4c LAMBE_MARK_DOT                \\n\\\\** M **\\\\ \\\\char 4d U_TEHTA_XS        \\n\\\\** N **\\\\ \\\\char 4e O_TEHTA_XS          \\n\\\\** O **\\\\ \\\\char 4f ?                \\n\\\\** P **\\\\ \\\\char 50 TILD_SUP_L            \\n\\\\** Q **\\\\ \\\\char 51 TW_EXT_12 PARMA_EXT FORMEN_EXT            \\n\\\\** R **\\\\ \\\\char 52 E_TEHTA_L          \\n\\\\** S **\\\\ \\\\char 53 TW_EXT_23 ANGA_EXT ANCA_EXT            \\n\\\\** T **\\\\ \\\\char 54 I_TEHTA_L           \\n\\\\** U **\\\\ \\\\char 55 U_TEHTA_L         \\n\\\\** V **\\\\ \\\\char 56 E_TEHTA_XS         \\n\\\\** W **\\\\ \\\\char 57 TW_EXT_22 UMBAR_EXT AMPA_EXT            \\n\\\\** X **\\\\ \\\\char 58 TW_EXT_24 UNQUE_EXT UNGWE_EXT            \\n\\\\** Y **\\\\ \\\\char 59 O_TEHTA_L           \\n\\\\** Z **\\\\ \\\\char 5a TW_EXT_14 QUESSE_EXT HWESTA_EXT            \\n\\\\** [ **\\\\ \\\\char 5b DASH_SUP_S            \\n\\\\** \\\\ **\\\\ \\\\char 5c TILD_L              \\n\\\\** ] **\\\\ \\\\char 5d OSSE               \\n\\\\** ^ **\\\\ \\\\char 5e O_TEHTA_XL          \\n\\\\** _ **\\\\ \\\\char 5f SARINCE_RIGHT_V2 SHOOK_RIGHT_S          \\n\\\\** ` **\\\\ \\\\char 60 TELCO              \\n\\\\** a **\\\\ \\\\char 61 TW_13 CALMA          \\n\\\\** b **\\\\ \\\\char 62 TW_54 NWALME          \\n\\\\** c **\\\\ \\\\char 63 TW_34 HWESTA          \\n\\\\** d **\\\\ \\\\char 64 TW_33 AHA           \\n\\\\** e **\\\\ \\\\char 65 TW_32 FORMEN          \\n\\\\** f **\\\\ \\\\char 66 TW_43 ANCA           \\n\\\\** g **\\\\ \\\\char 67 TW_53 NOLDO          \\n\\\\** h **\\\\ \\\\char 68 TW_63 ANNA           \\n\\\\** i **\\\\ \\\\char 69 TW_82 SILME_NUQUERNA      \\n\\\\** j **\\\\ \\\\char 6a TW_73 LAMBE_NO_LIG          \\n\\\\** k **\\\\ \\\\char 6b TW_83 ESSE           \\n\\\\** l **\\\\ \\\\char 6c TW_93 YANTA          \\n\\\\** m **\\\\ \\\\char 6d TW_74 ALDA           \\n\\\\** n **\\\\ \\\\char 6e TW_64 VILYA          \\n\\\\** o **\\\\ \\\\char 6f TW_92 HWESTA_SINDARINWA    \\n\\\\** p **\\\\ \\\\char 70 TILD_SUP_S           \\n\\\\** q **\\\\ \\\\char 71 TW_12 PARMA          \\n\\\\** r **\\\\ \\\\char 72 TW_42 AMPA           \\n\\\\** s **\\\\ \\\\char 73 TW_23 ANGA           \\n\\\\** t **\\\\ \\\\char 74 TW_52 MALTA          \\n\\\\** u **\\\\ \\\\char 75 TW_72 ARDA           \\n\\\\** v **\\\\ \\\\char 76 TW_44 UNQUE          \\n\\\\** w **\\\\ \\\\char 77 TW_22 UMBAR          \\n\\\\** x **\\\\ \\\\char 78 TW_24 UNGWE          \\n\\\\** y **\\\\ \\\\char 79 TW_62 VALA           \\n\\\\** z **\\\\ \\\\char 7a TW_14 QUESSE          \\n\\\\** { **\\\\ \\\\char 7b DASH_SUP_L           \\n\\\\** | **\\\\ \\\\char 7c SARINCE_LEFT_V1 SHOOK_LEFT_L          \\n\\\\** } **\\\\ \\\\char 7d SARINCE_LEFT_V2 SHOOK_LEFT_S          \\n\\\\** ~ **\\\\ \\\\char 7e ARA               \\n\\\\char a0 NBSP\\n\\\\** ¡ **\\\\ \\\\char a1 SARINCE_SEMI_ASCENDING_V1                \\n\\\\** ¢ **\\\\ \\\\char a2 SARINCE_RIGHT_V3                \\n\\\\** £ **\\\\ \\\\char a3 SARINCE_FLOURISHED_V1 SARINCE_FLOURISHED SHOOK_BEAUTIFUL                \\n\\\\** ¥ **\\\\ \\\\char a5 SARINCE_FLOURISHED_V2                \\n\\\\** ¦ **\\\\ \\\\char a6 HWESTA_TINCO                \\n\\\\** § **\\\\ \\\\char a7 AHA_TINCO                \\n\\\\** ¨ **\\\\ \\\\char a8 TH_SUB_CIRC_S          \\n\\\\** © **\\\\ \\\\char a9 TH_SUB_CIRC_XS          \\n\\\\** ª **\\\\ \\\\char aa A_TEHTA_INV_XL        \\n\\\\** « **\\\\ \\\\char ab DQUOT_OPEN            \\n\\\\** ¬ **\\\\ \\\\char ac PUNCT_DTILD              \\n     \\n\\\\** ® **\\\\ \\\\char ae NUM_12                \\n\\\\** ¯ **\\\\ \\\\char af A_TEHTA_INV_S         \\n\\\\** ° **\\\\ \\\\char b0 LAMBE_MARK_TILD              \\n\\\\** ± **\\\\ \\\\char b1 SQUOT_OPEN            \\n\\\\** ² **\\\\ \\\\char b2 SQUOT_CLOSE           \\n\\\\** ³ **\\\\ \\\\char b3 ?                \\n\\\\** ´ **\\\\ \\\\char b4 LAMBE_MARK_DDOT         \\n\\\\** µ **\\\\ \\\\char b5 A_TEHTA_INV_XS        \\n\\\\** · **\\\\ \\\\char b7 ?                \\n\\\\** ¸ **\\\\ \\\\char b8 LAMBE_MARK_DASH         \\n\\\\** ¹ **\\\\ \\\\char b9 ?                \\n\\\\** º **\\\\ \\\\char ba ?                \\n\\\\** » **\\\\ \\\\char bb DQUOT_CLOSE           \\n\\\\** ¼ **\\\\ \\\\char bc LIGATING_SHORT_CARRIER                \\n\\\\** ½ **\\\\ \\\\char bd HALLA              \\n\\\\** ¾ **\\\\ \\\\char be BOMBADIL_W                \\n\\\\** ¿ **\\\\ \\\\char bf ?                \\n\\\\** À **\\\\ \\\\char c0 PUNCT_INTERR           \\n\\\\** Á **\\\\ \\\\char c1 PUNCT_EXCLAM           \\n\\\\** Â **\\\\ \\\\char c2 PUNCT_TILD            \\n\\\\** Ã **\\\\ \\\\char c3 ?                \\n\\\\** Ä **\\\\ \\\\char c4 ?                \\n\\\\** Å **\\\\ \\\\char c5 SARINCE_ASCENDING_V1                \\n\\\\** Æ **\\\\ \\\\char c6 SARINCE_ASCENDING_V3                \\n\\\\** Ç **\\\\ \\\\char c7 SARINCE_DESCENDING_V1                \\n\\\\** È **\\\\ \\\\char c8 THINF_DOT_XL           \\n\\\\** É **\\\\ \\\\char c9 THINF_DOT_L           \\n\\\\** Ê **\\\\ \\\\char ca THINF_DOT_S           \\n\\\\** Ë **\\\\ \\\\char cb THINF_DOT_XS           \\n\\\\** Ì **\\\\ \\\\char cc THINF_DDOT_XL          \\n\\\\** Í **\\\\ \\\\char cd THINF_DDOT_L           \\n\\\\** Î **\\\\ \\\\char ce THINF_DDOT_S           \\n\\\\** Ï **\\\\ \\\\char cf THINF_DDOT_XS          \\n\\\\** Ð **\\\\ \\\\char d0 THINF_TDOT_XL          \\n\\\\** Ñ **\\\\ \\\\char d1 THINF_TDOT_L           \\n\\\\** Ò **\\\\ \\\\char d2 THINF_TDOT_S           \\n\\\\** Ó **\\\\ \\\\char d3 THINF_TDOT_XS          \\n\\\\** Ô **\\\\ \\\\char d4 THSUP_DDOT_XL Y_TEHTA_XL I_TEHTA_DOUBLE_XL         \\n\\\\** Õ **\\\\ \\\\char d5 THSUP_DDOT_L Y_TEHTA_L I_TEHTA_DOUBLE_L       \\n\\\\** Ö **\\\\ \\\\char d6 THSUP_DDOT_S Y_TEHTA_S I_TEHTA_DOUBLE_S          \\n\\\\** × **\\\\ \\\\char d7 THSUP_DDOT_XS Y_TEHTA_XS I_TEHTA_DOUBLE_XS         \\n\\\\** Ø **\\\\ \\\\char d8 THSUP_TICK_XL          \\n\\\\** Ù **\\\\ \\\\char d9 THSUP_TICK_L           \\n\\\\** Ú **\\\\ \\\\char da THSUP_TICK_S           \\n\\\\** Û **\\\\ \\\\char db THSUP_TICK_XS          \\n\\\\** Ü **\\\\ \\\\char dc THSUP_TICK_INV_XL A_TEHTA_CIRCUM_XL       \\n\\\\** Ý **\\\\ \\\\char dd THSUP_TICK_INV_L A_TEHTA_CIRCUM_L        \\n\\\\** Þ **\\\\ \\\\char de THSUP_TICK_INV_S A_TEHTA_CIRCUM_S         \\n\\\\** ß **\\\\ \\\\char df THSUP_TICK_INV_XS A_TEHTA_CIRCUM_XS       \\n\\\\** à **\\\\ \\\\char e0 THSUP_LAMBDA_XL         \\n\\\\** á **\\\\ \\\\char e1 THSUP_LAMBDA_L          \\n\\\\** â **\\\\ \\\\char e2 THSUP_LAMBDA_S          \\n\\\\** ã **\\\\ \\\\char e3 THSUP_LAMBDA_XS         \\n\\\\** ä **\\\\ \\\\char e4 THINF_CURL_XL          \\n\\\\** å **\\\\ \\\\char e5 THINF_CURL_L           \\n\\\\** æ **\\\\ \\\\char e6 THINF_CURL_S           \\n\\\\** ç **\\\\ \\\\char e7 THINF_CURL_XS          \\n\\\\** è **\\\\ \\\\char e8 WA_TEHTA_XL           \\n\\\\** é **\\\\ \\\\char e9 WA_TEHTA_L           \\n\\\\** ê **\\\\ \\\\char ea WA_TEHTA_S           \\n\\\\** ë **\\\\ \\\\char eb WA_TEHTA_XS           \\n\\\\** ì **\\\\ \\\\char ec ?                                 \\n\\\\** í **\\\\ \\\\char ed ?                                 \\n\\\\** î **\\\\ \\\\char ee ?                                 \\n\\\\** ï **\\\\ \\\\char ef ?                                 \\n\\\\** ð **\\\\ \\\\char f0 NUM_0                               \\n\\\\** ñ **\\\\ \\\\char f1 NUM_1                               \\n\\\\** ò **\\\\ \\\\char f2 NUM_2                               \\n\\\\** ó **\\\\ \\\\char f3 NUM_3                               \\n\\\\** ô **\\\\ \\\\char f4 NUM_4                               \\n\\\\** õ **\\\\ \\\\char f5 NUM_5                               \\n\\\\** ö **\\\\ \\\\char f6 NUM_6                               \\n\\\\** ÷ **\\\\ \\\\char f7 NUM_7                               \\n\\\\** ø **\\\\ \\\\char f8 NUM_8                               \\n\\\\** ù **\\\\ \\\\char f9 NUM_9                               \\n\\\\** ú **\\\\ \\\\char fa NUM_10                               \\n\\\\** û **\\\\ \\\\char fb NUM_11                               \\n\\\\** ü **\\\\ \\\\char fc THINF_STROKE_XL                                 \\n\\\\** ý **\\\\ \\\\char fd THINF_STROKE_L                                 \\n\\\\** þ **\\\\ \\\\char fe THINF_STROKE_S                                 \\n\\\\** ÿ **\\\\ \\\\char ff THINF_STROKE_XS                      \\n\\n\\\\** FIX FOR SOFT HYPHEN **\\\\\\n\\\\char 109 A_TEHTA_INV_L\\n\\n\\\\char 10C O_TEHTA_DOUBLE_XL\\n\\\\char 10D O_TEHTA_DOUBLE_L\\n\\\\char 10E O_TEHTA_DOUBLE_S\\n\\\\char 10F O_TEHTA_DOUBLE_XS\\n\\n\\\\** USING TENGWAR ELFICA POS TO AVOID PROBLEMS **\\\\\\n\\\\char 125 VAIA WAIA VAIYA\\n      \\n\\\\char 152 PUNCT_PAREN_L PUNCT_PAREN_L_ALT                        \\n\\\\char 153 PUNCT_PAREN_R PUNCT_PAREN_R_ALT                          \\n\\\\char 160 THINF_ACCENT_L                                 \\n\\\\char 161 MALTA_W_HOOK TW_MH                                 \\n\\\\char 178 THINF_ACCENT_XS   \\n\\n\\\\char 17F LAMBE_LIG\\n\\n\\\\char 180 VALA_W_HOOK TW_MH_BELERIANDIC\\n\\\\char 181 PUSTA_4\\n\\\\char 182 PUSTA_5\\n\\n\\\\char 19C A_TEHTA_DOUBLE_XL\\n\\\\char 19D A_TEHTA_DOUBLE_L\\n\\\\char 19E A_TEHTA_DOUBLE_S\\n\\\\char 19F A_TEHTA_DOUBLE_XS\\n\\n\\\\char 1A0 E_TEHTA_DOUBLE_XL\\n\\\\char 1A1 E_TEHTA_DOUBLE_L\\n\\\\char 1A2 E_TEHTA_DOUBLE_S\\n\\\\char 1A3 E_TEHTA_DOUBLE_XS\\n\\n\\\\char 1A4 U_TEHTA_DOUBLE_XL\\n\\\\char 1A5 U_TEHTA_DOUBLE_L\\n\\\\char 1A6 U_TEHTA_DOUBLE_S\\n\\\\char 1A7 U_TEHTA_DOUBLE_XS\\n\\n\\\\char 200 DASH_INF_XS\\n\\\\char 201 TILD_INF_XS\\n\\\\char 202 DASH_SUP_XS\\n\\\\char 203 TILD_SUP_XS\\n\\n\\\\char 208 THINF_DSTROKE_XL\\n\\\\char 209 THINF_DSTROKE_L\\n\\\\char 20A THINF_DSTROKE_S\\n\\\\char 20B THINF_DSTROKE_XS\\n\\n\\\\** Non attested but might exist by principle. Beware, order is revesed. **\\\\\\n\\\\char 20C E_TEHTA_GRAVE_INF_XS\\n\\\\char 20D E_TEHTA_GRAVE_INF_L\\n\\\\char 20E E_TEHTA_GRAVE_INF_S\\n\\\\char 20F E_TEHTA_GRAVE_INF_XL\\n\\n\\n\\\\char 250 LAMBE_MARK_DSTROKE    \\n\\n\\\\char 2F1 RING_MARK_L\\n\\\\char 2F2 RING_MARK_R\\n\\n\\\\char 10FB PUSTA_4_HALFED\\n\\\\char 2E2C PUSTA_4_SQUARED\\n                        \\n\\\\** ˆ **\\\\ \\\\char 2c6 PUNCT_TDOT PUSTA_3                               \\n\\\\** ˜ **\\\\ \\\\char 2dc TH_SUB_CIRC_XL                                 \\n\\\\** – **\\\\ \\\\char 2013 ANCA_CLOSED SILME_AHA                               \\n\\\\** — **\\\\ \\\\char 2014 OLD_ENGLISH_AND                                \\n\\\\** ‘ **\\\\ \\\\char 2018 THINF_CURL_INV_XL                                \\n\\\\** ’ **\\\\ \\\\char 2019 THINF_CURL_INV_L                                \\n                          \\n\\\\** “ **\\\\ \\\\char 201c THINF_CURL_INV_S                                \\n\\\\** ” **\\\\ \\\\char 201d THINF_CURL_INV_XS                                \\n\\\\** ‡ **\\\\ \\\\char 2021 ?                                \\n\\\\** • **\\\\ \\\\char 2022 TW_HW_LOWDHAM HARP_SHAPED                                \\n\\\\** ‰ **\\\\ \\\\char 2030 THINF_ACCENT_XL                                \\n\\\\** ‹ **\\\\ \\\\char 2039 THINF_ACCENT_S                                \\n\\\\** › **\\\\ \\\\char 203a ELVISH_PAREN BOOKMARK_SIGN                                \\n\\\\** ™ **\\\\ \\\\char 2122 TH_SUB_CIRC_L              \\n\\n\\\\char 192 E_TEHTA_GRAVE_XL                                 \\n\\\\char 201e E_TEHTA_GRAVE_L                                \\n\\\\char 2020 E_TEHTA_GRAVE_XS                                \\n\\\\char 2026 E_TEHTA_GRAVE_S                 \\n\\n\\\\char 30D8 BREVE_TEHTA_XL\\n\\\\char 30D9 BREVE_TEHTA_L\\n\\\\char 30DA BREVE_TEHTA_S\\n\\\\char 30DB BREVE_TEHTA_XS\\n\\n\\n\\\\char 30C4 CHRISTOPHER_QU\\n\\\\char 30BF BOMBADIL_HW\\n\\\\char 3068 ANNA_OPEN\\n\\n\\n\\n\\\\** The following virtual chars are used to handle tehtar (& the like) multiple version chosing **\\\\\\n\\\\** It could be avoided with modern fonts with gsub/gpos tables for ligatures and diacritics **\\\\\\n\\\\** placement **\\\\\\n\\n\\\\** DUMPED FROM THE VIRTUAL CHARS TOOL **\\\\\\n\\n\\n\\n\\\\beg virtual A_TEHTA\\n  \\\\class A_TEHTA_XS TELCO ARA HALLA HYARMEN HARP_SHAPED NUM_4 NUM_10 NUM_11\\n  \\\\class A_TEHTA_S CALMA QUESSE SULE FORMEN ANNA TW_EXT_11 TW_EXT_12 SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA URE OSSE AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_8\\n  \\\\class A_TEHTA_L TINCO PARMA AHA HWESTA ORE VALA VILYA TW_EXT_13 TW_EXT_14 ROMEN ARDA YANTA VAIA VALA_W_HOOK SHOOK_BEAUTIFUL NUM_5\\n  \\\\class A_TEHTA_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 LAMBE LAMBE_LIG LAMBE_NO_LIG ALDA SILME ESSE HWESTA_SINDARINWA MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_6 NUM_7 NUM_9\\n\\\\end\\n\\n\\\\beg virtual A_TEHTA_CIRCUM\\n  \\\\class A_TEHTA_CIRCUM_XS TELCO ARA HALLA HYARMEN HARP_SHAPED NUM_4 NUM_10 NUM_11\\n  \\\\class A_TEHTA_CIRCUM_S CALMA QUESSE SULE FORMEN ANNA TW_EXT_11 TW_EXT_12 SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA URE OSSE AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_8\\n  \\\\class A_TEHTA_CIRCUM_L TINCO PARMA AHA HWESTA ORE VALA VILYA TW_EXT_13 TW_EXT_14 ROMEN ARDA YANTA VAIA VALA_W_HOOK SHOOK_BEAUTIFUL NUM_5\\n  \\\\class A_TEHTA_CIRCUM_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 LAMBE LAMBE_LIG LAMBE_NO_LIG ALDA SILME ESSE HWESTA_SINDARINWA MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_6 NUM_7 NUM_9\\n\\\\end\\n\\n\\\\beg virtual A_TEHTA_REVERSED\\n  \\\\class A_TEHTA_INV_XS TELCO ARA HALLA HYARMEN HARP_SHAPED NUM_4 NUM_10 NUM_11\\n  \\\\class A_TEHTA_INV_S CALMA QUESSE SULE FORMEN ANNA TW_EXT_11 TW_EXT_12 SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA URE OSSE AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_8\\n  \\\\class A_TEHTA_INV_L TINCO PARMA AHA HWESTA ORE VALA VILYA TW_EXT_13 TW_EXT_14 ROMEN ARDA YANTA VAIA VALA_W_HOOK SHOOK_BEAUTIFUL NUM_5\\n  \\\\class A_TEHTA_INV_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 LAMBE LAMBE_LIG LAMBE_NO_LIG ALDA SILME ESSE HWESTA_SINDARINWA MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_6 NUM_7 NUM_9\\n\\\\end\\n\\n\\\\beg virtual A_TEHTA_CIRCUM_REVERSED TEHTA_BREVE\\n  \\\\class THSUP_TICK_XS TELCO ARA HALLA HYARMEN HARP_SHAPED NUM_4 NUM_10 NUM_11\\n  \\\\class THSUP_TICK_S CALMA QUESSE SULE FORMEN TW_EXT_11 TW_EXT_12 SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA URE OSSE AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_8\\n  \\\\class THSUP_TICK_L TINCO PARMA AHA HWESTA ORE VALA ANNA VILYA TW_EXT_13 TW_EXT_14 ROMEN ARDA YANTA VAIA VALA_W_HOOK SHOOK_BEAUTIFUL NUM_5\\n  \\\\class THSUP_TICK_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 LAMBE LAMBE_LIG LAMBE_NO_LIG ALDA SILME ESSE HWESTA_SINDARINWA MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_6 NUM_7 NUM_9\\n\\\\end\\n\\n\\\\beg virtual E_TEHTA\\n  \\\\class E_TEHTA_XS TELCO ARA HALLA HYARMEN HARP_SHAPED NUM_4 NUM_10 NUM_11\\n  \\\\class E_TEHTA_S CALMA QUESSE SULE FORMEN ANNA TW_EXT_11 TW_EXT_12 SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA URE OSSE AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_8\\n  \\\\class E_TEHTA_L TINCO PARMA AHA HWESTA ORE VALA VILYA TW_EXT_13 TW_EXT_14 ROMEN ARDA YANTA VAIA VALA_W_HOOK SHOOK_BEAUTIFUL NUM_5\\n  \\\\class E_TEHTA_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 LAMBE LAMBE_LIG LAMBE_NO_LIG ALDA SILME ESSE HWESTA_SINDARINWA MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_6 NUM_7 NUM_9\\n\\\\end\\n\\n\\\\beg virtual E_TEHTA_GRAVE\\n  \\\\class E_TEHTA_GRAVE_XS TELCO ARA HALLA HYARMEN HARP_SHAPED NUM_4 NUM_10 NUM_11\\n  \\\\class E_TEHTA_GRAVE_S CALMA QUESSE SULE FORMEN ANNA TW_EXT_11 TW_EXT_12 SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA URE OSSE AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_8\\n  \\\\class E_TEHTA_GRAVE_L TINCO PARMA AHA HWESTA ORE VALA VILYA TW_EXT_13 TW_EXT_14 ROMEN ARDA YANTA VAIA VALA_W_HOOK SHOOK_BEAUTIFUL NUM_5\\n  \\\\class E_TEHTA_GRAVE_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 LAMBE LAMBE_LIG LAMBE_NO_LIG ALDA SILME ESSE HWESTA_SINDARINWA MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_6 NUM_7 NUM_9\\n\\\\end\\n\\n\\\\beg virtual I_TEHTA\\n  \\\\class I_TEHTA_XS TELCO ARA HALLA HYARMEN HARP_SHAPED NUM_4 NUM_10 NUM_11\\n  \\\\class I_TEHTA_S CALMA QUESSE SULE FORMEN ANNA TW_EXT_11 TW_EXT_12 SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA URE OSSE AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_8\\n  \\\\class I_TEHTA_L TINCO PARMA AHA HWESTA ORE VALA VILYA TW_EXT_13 TW_EXT_14 ROMEN ARDA YANTA VAIA VALA_W_HOOK SHOOK_BEAUTIFUL NUM_5\\n  \\\\class I_TEHTA_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 LAMBE LAMBE_LIG LAMBE_NO_LIG ALDA SILME ESSE HWESTA_SINDARINWA MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_6 NUM_7 NUM_9\\n\\\\end\\n\\n\\\\beg virtual O_TEHTA\\n  \\\\class O_TEHTA_XS TELCO ARA HALLA HYARMEN URE OSSE SHOOK_BEAUTIFUL NUM_4 NUM_10 NUM_11\\n  \\\\class O_TEHTA_S CALMA QUESSE SULE FORMEN AHA HWESTA ANNA VILYA TW_EXT_11 TW_EXT_12 TW_EXT_13 TW_EXT_14 ROMEN ARDA SILME SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA YANTA HARP_SHAPED AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_8\\n  \\\\class O_TEHTA_L TINCO PARMA ORE VALA VAIA VALA_W_HOOK NUM_5\\n  \\\\class O_TEHTA_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 LAMBE LAMBE_LIG LAMBE_NO_LIG ALDA ESSE HWESTA_SINDARINWA MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_6 NUM_7 NUM_9\\n\\\\end\\n\\n\\\\beg virtual U_TEHTA\\n  \\\\class U_TEHTA_XS TELCO ARA HALLA HYARMEN URE OSSE SHOOK_BEAUTIFUL NUM_4 NUM_10 NUM_11\\n  \\\\class U_TEHTA_S CALMA QUESSE SULE FORMEN AHA HWESTA ANNA VILYA TW_EXT_11 TW_EXT_12 TW_EXT_13 TW_EXT_14 ROMEN ARDA SILME SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA YANTA HARP_SHAPED AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_8\\n  \\\\class U_TEHTA_L TINCO PARMA ORE VALA VAIA VALA_W_HOOK NUM_5\\n  \\\\class U_TEHTA_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 LAMBE LAMBE_LIG LAMBE_NO_LIG ALDA ESSE HWESTA_SINDARINWA MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_6 NUM_7 NUM_9\\n\\\\end\\n\\n\\\\beg virtual WA_TEHTA SEV_TEHTA\\n  \\\\class WA_TEHTA_XS TELCO ARA HALLA HYARMEN HARP_SHAPED NUM_4 NUM_10 NUM_11\\n  \\\\class WA_TEHTA_S CALMA QUESSE SULE FORMEN TW_EXT_11 TW_EXT_12 SILME_NUQUERNA_ALT URE OSSE AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_8\\n  \\\\class WA_TEHTA_L TINCO PARMA AHA HWESTA ORE VALA ANNA VILYA TW_EXT_13 TW_EXT_14 ROMEN ARDA SILME_NUQUERNA ESSE_NUQUERNA YANTA VAIA VALA_W_HOOK SHOOK_BEAUTIFUL NUM_5\\n  \\\\class WA_TEHTA_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 LAMBE LAMBE_LIG LAMBE_NO_LIG ALDA SILME ESSE HWESTA_SINDARINWA MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_6 NUM_7 NUM_9\\n\\\\end\\n\\n\\\\beg virtual A_TEHTA_DOUBLE\\n  \\\\class A_TEHTA_DOUBLE_XS TELCO ARA HALLA HYARMEN HARP_SHAPED NUM_4 NUM_10 NUM_11\\n  \\\\class A_TEHTA_DOUBLE_S CALMA QUESSE SULE FORMEN ANNA TW_EXT_11 TW_EXT_12 SILME_NUQUERNA_ALT URE OSSE AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_8\\n  \\\\class A_TEHTA_DOUBLE_L TINCO PARMA AHA HWESTA ORE VALA VILYA TW_EXT_13 TW_EXT_14 ROMEN ARDA SILME_NUQUERNA ESSE_NUQUERNA YANTA VAIA VALA_W_HOOK SHOOK_BEAUTIFUL NUM_5\\n  \\\\class A_TEHTA_DOUBLE_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 LAMBE LAMBE_LIG LAMBE_NO_LIG ALDA SILME ESSE HWESTA_SINDARINWA MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_6 NUM_7 NUM_9\\n\\\\end\\n\\n\\\\beg virtual E_TEHTA_DOUBLE\\n  \\\\class E_TEHTA_DOUBLE_XS HYARMEN HARP_SHAPED NUM_0 NUM_1 NUM_4 NUM_10 NUM_11\\n  \\\\class E_TEHTA_DOUBLE_S TELCO ARA HALLA CALMA QUESSE SULE FORMEN TW_EXT_11 TW_EXT_12 SILME_NUQUERNA_ALT URE OSSE AHA_TINCO HWESTA_TINCO NUM_8\\n  \\\\class E_TEHTA_DOUBLE_L TINCO PARMA AHA HWESTA ORE VALA ANNA VILYA TW_EXT_13 TW_EXT_14 ROMEN ARDA SILME_NUQUERNA ESSE_NUQUERNA YANTA VAIA VALA_W_HOOK SHOOK_BEAUTIFUL NUM_5\\n  \\\\class E_TEHTA_DOUBLE_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 LAMBE LAMBE_LIG LAMBE_NO_LIG ALDA SILME ESSE HWESTA_SINDARINWA MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_6 NUM_7 NUM_9\\n\\\\end\\n\\n\\\\beg virtual I_TEHTA_DOUBLE Y_TEHTA\\n  \\\\class I_TEHTA_DOUBLE_XS TELCO ARA HALLA HYARMEN HARP_SHAPED NUM_4 NUM_10 NUM_11\\n  \\\\class I_TEHTA_DOUBLE_S CALMA QUESSE SULE FORMEN ANNA TW_EXT_11 TW_EXT_12 SILME_NUQUERNA_ALT URE OSSE AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_8\\n  \\\\class I_TEHTA_DOUBLE_L TINCO PARMA AHA HWESTA ORE VALA VILYA TW_EXT_13 TW_EXT_14 ROMEN ARDA SILME_NUQUERNA ESSE_NUQUERNA YANTA VAIA VALA_W_HOOK SHOOK_BEAUTIFUL NUM_5\\n  \\\\class I_TEHTA_DOUBLE_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 LAMBE LAMBE_LIG LAMBE_NO_LIG ALDA SILME ESSE HWESTA_SINDARINWA MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_6 NUM_7 NUM_9\\n\\\\end\\n\\n\\\\beg virtual O_TEHTA_DOUBLE\\n  \\\\class O_TEHTA_DOUBLE_XS TELCO ARA HALLA HYARMEN URE OSSE SHOOK_BEAUTIFUL NUM_4 NUM_10 NUM_11\\n  \\\\class O_TEHTA_DOUBLE_S CALMA QUESSE SULE FORMEN AHA HWESTA ANNA VILYA TW_EXT_11 TW_EXT_12 TW_EXT_13 TW_EXT_14 ROMEN ARDA SILME SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA HWESTA_SINDARINWA YANTA VAIA HARP_SHAPED AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_8\\n  \\\\class O_TEHTA_DOUBLE_L TINCO PARMA ORE VALA VALA_W_HOOK NUM_5\\n  \\\\class O_TEHTA_DOUBLE_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 LAMBE LAMBE_LIG LAMBE_NO_LIG ALDA ESSE MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_6 NUM_7 NUM_9\\n\\\\end\\n\\n\\\\beg virtual U_TEHTA_DOUBLE\\n  \\\\class U_TEHTA_DOUBLE_XS TELCO ARA HALLA HYARMEN URE OSSE SHOOK_BEAUTIFUL NUM_4 NUM_10 NUM_11\\n  \\\\class U_TEHTA_DOUBLE_S CALMA QUESSE SULE FORMEN AHA HWESTA ANNA VILYA TW_EXT_11 TW_EXT_12 TW_EXT_13 TW_EXT_14 ROMEN ARDA SILME SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA HWESTA_SINDARINWA YANTA VAIA HARP_SHAPED AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_8\\n  \\\\class U_TEHTA_DOUBLE_L TINCO PARMA ORE VALA VALA_W_HOOK NUM_5\\n  \\\\class U_TEHTA_DOUBLE_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 LAMBE LAMBE_LIG LAMBE_NO_LIG ALDA ESSE MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_6 NUM_7 NUM_9\\n\\\\end\\n\\n\\\\beg virtual A_TEHTA_INF\\n  \\\\class THINF_TDOT_XS TELCO ARA HALLA ROMEN ARDA SILME_NUQUERNA SHOOK_BEAUTIFUL HARP_SHAPED NUM_4 NUM_10 NUM_11\\n  \\\\class THINF_TDOT_S TINCO PARMA SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA TW_EXT_11 TW_EXT_12 SILME HYARMEN HWESTA_SINDARINWA YANTA URE OSSE VAIA AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_8\\n  \\\\class THINF_TDOT_L CALMA QUESSE TW_EXT_13 TW_EXT_14 ESSE ESSE_NUQUERNA VALA_W_HOOK NUM_5\\n  \\\\class THINF_TDOT_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 LAMBE LAMBE_LIG LAMBE_NO_LIG ALDA SILME_NUQUERNA_ALT MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_6 NUM_7 NUM_9\\n\\\\end\\n\\n\\\\beg virtual E_TEHTA_INF\\n  \\\\class THINF_ACCENT_XS TELCO ARA HALLA ROMEN ARDA SILME_NUQUERNA SHOOK_BEAUTIFUL HARP_SHAPED NUM_4\\n  \\\\class THINF_ACCENT_S TINCO PARMA SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA TW_EXT_11 TW_EXT_12 SILME HYARMEN HWESTA_SINDARINWA YANTA URE OSSE VAIA AHA_TINCO HWESTA_TINCO\\n  \\\\class THINF_ACCENT_L CALMA QUESSE TW_EXT_13 TW_EXT_14 ESSE ESSE_NUQUERNA VALA_W_HOOK NUM_0 NUM_1 NUM_6 NUM_7 NUM_8 NUM_10 NUM_11\\n  \\\\class THINF_ACCENT_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 LAMBE LAMBE_LIG LAMBE_NO_LIG ALDA SILME_NUQUERNA_ALT MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_5 NUM_9\\n\\\\end\\n\\n\\\\beg virtual E_TEHTA_GRAVE_INF\\n  \\\\class E_TEHTA_GRAVE_INF_XS TELCO ARA HALLA ROMEN ARDA VALA_W_HOOK HARP_SHAPED NUM_4\\n  \\\\class E_TEHTA_GRAVE_INF_S TW_EXT_13 TW_EXT_14 NUM_8\\n  \\\\class E_TEHTA_GRAVE_INF_L TINCO PARMA CALMA QUESSE SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA TW_EXT_11 TW_EXT_12 SILME SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA YANTA URE OSSE VAIA SHOOK_BEAUTIFUL AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_6 NUM_7 NUM_10 NUM_11\\n  \\\\class E_TEHTA_GRAVE_INF_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 LAMBE LAMBE_LIG LAMBE_NO_LIG ALDA MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_5 NUM_9\\n\\\\end\\n\\n\\\\beg virtual CIRC_TEHTA_INF\\n  \\\\class TH_SUB_CIRC_XS TELCO ARA HALLA ROMEN ARDA SILME_NUQUERNA HARP_SHAPED\\n  \\\\class TH_SUB_CIRC_S TINCO PARMA CALMA QUESSE SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA TW_EXT_11 TW_EXT_12 TW_EXT_13 TW_EXT_14 SILME ESSE HYARMEN HWESTA_SINDARINWA YANTA URE OSSE VAIA SHOOK_BEAUTIFUL AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_4 NUM_6 NUM_7 NUM_8 NUM_10 NUM_11\\n  \\\\class TH_SUB_CIRC_L ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 LAMBE LAMBE_LIG LAMBE_NO_LIG ALDA SILME_NUQUERNA_ALT ESSE_NUQUERNA VALA_W_HOOK ANCA_CLOSED NUM_2 NUM_5 NUM_9\\n  \\\\class TH_SUB_CIRC_XL TW_EXT_24 MALTA_W_HOOK NUM_3\\n\\\\end\\n\\n\\\\beg virtual THINNAS  THINF_STROKE\\n  \\\\class THINF_STROKE_XS TELCO ARA HALLA ROMEN ARDA SILME_NUQUERNA SHOOK_BEAUTIFUL HARP_SHAPED NUM_5\\n  \\\\class THINF_STROKE_S TINCO PARMA SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA TW_EXT_11 TW_EXT_12 SILME HYARMEN HWESTA_SINDARINWA YANTA URE OSSE VAIA AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_4 NUM_10 NUM_11\\n  \\\\class THINF_STROKE_L CALMA QUESSE TW_EXT_13 TW_EXT_14 ESSE ESSE_NUQUERNA VALA_W_HOOK NUM_6 NUM_7 NUM_8\\n  \\\\class THINF_STROKE_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 LAMBE LAMBE_LIG LAMBE_NO_LIG ALDA SILME_NUQUERNA_ALT MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_9\\n\\\\end\\n\\n\\\\beg virtual O_TEHTA_INF\\n  \\\\class THINF_CURL_XS TELCO ARA HALLA ROMEN ARDA SILME_NUQUERNA SHOOK_BEAUTIFUL HARP_SHAPED NUM_5\\n  \\\\class THINF_CURL_S TINCO PARMA SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA TW_EXT_11 TW_EXT_12 SILME HYARMEN HWESTA_SINDARINWA YANTA URE OSSE VAIA AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_4 NUM_10 NUM_11\\n  \\\\class THINF_CURL_L CALMA QUESSE TW_EXT_13 TW_EXT_14 ESSE ESSE_NUQUERNA VALA_W_HOOK NUM_6 NUM_7 NUM_8\\n  \\\\class THINF_CURL_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 LAMBE LAMBE_LIG LAMBE_NO_LIG ALDA SILME_NUQUERNA_ALT MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_9\\n\\\\end\\n\\n\\\\beg virtual U_TEHTA_INF\\n  \\\\class THINF_CURL_INV_XS TELCO ARA HALLA ROMEN ARDA SILME_NUQUERNA SHOOK_BEAUTIFUL HARP_SHAPED NUM_5\\n  \\\\class THINF_CURL_INV_S TINCO PARMA SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA TW_EXT_11 TW_EXT_12 SILME HYARMEN HWESTA_SINDARINWA YANTA URE OSSE VAIA AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_4 NUM_10 NUM_11\\n  \\\\class THINF_CURL_INV_L CALMA QUESSE TW_EXT_13 TW_EXT_14 ESSE ESSE_NUQUERNA VALA_W_HOOK NUM_6 NUM_7 NUM_8\\n  \\\\class THINF_CURL_INV_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 LAMBE LAMBE_LIG LAMBE_NO_LIG ALDA SILME_NUQUERNA_ALT MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_9\\n\\\\end\\n\\n\\\\beg virtual PALATAL_SIGN I_TEHTA_DOUBLE_INF Y_TEHTA_INF\\n  \\\\class THINF_DDOT_XS TELCO ARA HALLA ROMEN ARDA SILME_NUQUERNA SHOOK_BEAUTIFUL HARP_SHAPED\\n  \\\\class THINF_DDOT_S TINCO PARMA SULE FORMEN AHA HWESTA TW_EXT_11 TW_EXT_12 URE OSSE AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_4\\n  \\\\class THINF_DDOT_L CALMA QUESSE ORE VALA ANNA VILYA TW_EXT_13 TW_EXT_14 SILME ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA YANTA VAIA VALA_W_HOOK NUM_6 NUM_8 NUM_10 NUM_11\\n  \\\\class THINF_DDOT_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 ALDA SILME_NUQUERNA_ALT MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_5 NUM_9\\n  \\\\class LAMBE_MARK_DDOT LAMBE LAMBE_LIG LAMBE_NO_LIG NUM_7\\n\\\\end\\n\\n\\\\beg virtual E_TEHTA_DOUBLE_INF GEMINATE_DOUBLE\\n  \\\\class THINF_DSTROKE_XS TELCO ARA HALLA ROMEN ARDA SILME_NUQUERNA SHOOK_BEAUTIFUL HARP_SHAPED NUM_5\\n  \\\\class THINF_DSTROKE_S TINCO PARMA SULE FORMEN AHA HWESTA TW_EXT_11 TW_EXT_12 URE OSSE AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_4\\n  \\\\class THINF_DSTROKE_L CALMA QUESSE ORE VALA ANNA VILYA TW_EXT_13 TW_EXT_14 SILME ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA YANTA VAIA VALA_W_HOOK NUM_6 NUM_8 NUM_10 NUM_11\\n  \\\\class THINF_DSTROKE_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 ALDA SILME_NUQUERNA_ALT MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_9\\n  \\\\class LAMBE_MARK_DSTROKE LAMBE LAMBE_LIG LAMBE_NO_LIG NUM_7\\n\\\\end\\n\\n\\\\beg virtual UNUTIXE I_TEHTA_INF NO_VOWEL_DOT\\n  \\\\class THINF_DOT_XS TELCO ARA HALLA ROMEN ARDA SILME_NUQUERNA SHOOK_BEAUTIFUL HARP_SHAPED NUM_5\\n  \\\\class THINF_DOT_S TINCO PARMA SULE FORMEN AHA HWESTA TW_EXT_11 TW_EXT_12 URE OSSE AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_4 NUM_7\\n  \\\\class THINF_DOT_L CALMA QUESSE ORE VALA ANNA VILYA TW_EXT_13 TW_EXT_14 SILME ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA YANTA VAIA VALA_W_HOOK NUM_6 NUM_8 NUM_10 NUM_11\\n  \\\\class THINF_DOT_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 ALDA SILME_NUQUERNA_ALT MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_9\\n  \\\\class LAMBE_MARK_DOT LAMBE LAMBE_LIG LAMBE_NO_LIG\\n\\\\end\\n\\n\\\\beg virtual GEMINATE_SIGN\\n  \\\\class DASH_INF_XS TELCO ARA HALLA\\n  \\\\class DASH_INF_S TINCO PARMA CALMA QUESSE SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA TW_EXT_11 TW_EXT_12 TW_EXT_13 TW_EXT_14 ROMEN ARDA SILME SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA YANTA URE OSSE VAIA VALA_W_HOOK SHOOK_BEAUTIFUL HARP_SHAPED AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_4 NUM_7 NUM_8 NUM_10 NUM_11\\n  \\\\class DASH_INF_L ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_5 NUM_6 NUM_9\\n  \\\\class LAMBE_MARK_DASH LAMBE LAMBE_LIG LAMBE_NO_LIG ALDA\\n\\\\end\\n\\n\\\\beg virtual GEMINATE_SIGN_TILD\\n  \\\\class TILD_INF_XS TELCO ARA HALLA\\n  \\\\class TILD_INF_S TINCO PARMA CALMA QUESSE SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA TW_EXT_11 TW_EXT_12 TW_EXT_13 TW_EXT_14 ROMEN ARDA SILME SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA YANTA URE OSSE VAIA VALA_W_HOOK SHOOK_BEAUTIFUL HARP_SHAPED AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_4 NUM_7 NUM_8 NUM_10 NUM_11\\n  \\\\class TILD_INF_L ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_5 NUM_6 NUM_9\\n  \\\\class LAMBE_MARK_TILD LAMBE LAMBE_LIG LAMBE_NO_LIG ALDA\\n\\\\end\\n\\n\\\\beg virtual NASALIZE_SIGN\\n  \\\\class DASH_SUP_XS TELCO ARA HALLA\\n  \\\\class DASH_SUP_S TINCO PARMA CALMA QUESSE SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA TW_EXT_11 TW_EXT_12 TW_EXT_13 TW_EXT_14 ROMEN ARDA SILME SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA YANTA URE OSSE VAIA VALA_W_HOOK HARP_SHAPED NUM_0 NUM_1 NUM_4 NUM_7 NUM_8 NUM_10 NUM_11\\n  \\\\class DASH_SUP_L ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 LAMBE LAMBE_LIG LAMBE_NO_LIG ALDA MALTA_W_HOOK SHOOK_BEAUTIFUL ANCA_CLOSED AHA_TINCO HWESTA_TINCO NUM_2 NUM_3 NUM_5 NUM_6 NUM_9\\n\\\\end\\n\\n\\\\beg virtual NASALIZE_SIGN_TILD\\n  \\\\class TILD_SUP_XS TELCO ARA HALLA\\n  \\\\class TILD_SUP_S TINCO PARMA CALMA QUESSE SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA TW_EXT_11 TW_EXT_12 TW_EXT_13 TW_EXT_14 ROMEN ARDA SILME SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA YANTA URE OSSE VAIA VALA_W_HOOK HARP_SHAPED NUM_0 NUM_1 NUM_4 NUM_7 NUM_8 NUM_10 NUM_11\\n  \\\\class TILD_SUP_L ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 LAMBE LAMBE_LIG LAMBE_NO_LIG ALDA MALTA_W_HOOK SHOOK_BEAUTIFUL ANCA_CLOSED AHA_TINCO HWESTA_TINCO NUM_2 NUM_3 NUM_5 NUM_6 NUM_9\\n\\\\end\\n\\n\\\\beg virtual SARINCE\\n  \\\\class SHOOK_LEFT_L CALMA QUESSE ANGA UNGWE TW_EXT_13 TW_EXT_14 TW_EXT_23 TW_EXT_24 HWESTA_SINDARINWA VALA_W_HOOK\\n  \\\\class SHOOK_RIGHT_L TELCO ARA HALLA TINCO PARMA ANDO UMBAR SULE FORMEN AHA HWESTA ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME ORE VALA ANNA VILYA TW_EXT_11 TW_EXT_12 TW_EXT_21 TW_EXT_22 ROMEN ARDA LAMBE LAMBE_LIG LAMBE_NO_LIG ALDA SILME SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE ESSE_NUQUERNA HYARMEN YANTA URE OSSE VAIA MALTA_W_HOOK SHOOK_BEAUTIFUL ANCA_CLOSED HARP_SHAPED AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_2 NUM_3 NUM_4 NUM_5 NUM_6 NUM_7 NUM_8 NUM_9 NUM_10 NUM_11\\n\\\\end\\n\\n\\\\beg virtual LAMBE\\n  \\\\reversed\\n  \\\\default LAMBE_NO_LIG\\n  \\\\class LAMBE_NO_LIG HALLA\\n  \\\\class LAMBE_LIG TELCO ARA TINCO PARMA CALMA QUESSE ANDO UMBAR ANGA UNGWE SULE FORMEN AHA HWESTA ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME ORE VALA ANNA VILYA TW_EXT_11 TW_EXT_12 TW_EXT_13 TW_EXT_14 TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 ROMEN ARDA LAMBE LAMBE_LIG LAMBE_NO_LIG ALDA SILME SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA YANTA URE OSSE VAIA MALTA_W_HOOK VALA_W_HOOK SHOOK_BEAUTIFUL ANCA_CLOSED HARP_SHAPED AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_2 NUM_3 NUM_4 NUM_5 NUM_6 NUM_7 NUM_8 NUM_9 NUM_10 NUM_11\\n\\\\end\\n\"\nGlaemscribe.resource_manager.raw_charsets[\"tengwar_ds_eldamar\"] = \"\\\\**\\n\\nGlǽmscribe (also written Glaemscribe) is a software dedicated to\\nthe transcription of texts between writing systems, and more \\nspecifically dedicated to the transcription of J.R.R. Tolkien\\'s \\ninvented languages to some of his devised writing systems.\\n\\nCopyright (C) 2015 Benjamin Babut (Talagan).\\n\\nThis program is free software: you can redistribute it and/or modify\\nit under the terms of the GNU Affero General Public License as published by\\nthe Free Software Foundation, either version 3 of the License, or\\nany later version.\\n\\nThis program is distributed in the hope that it will be useful,\\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\nGNU Affero General Public License for more details.\\n\\nYou should have received a copy of the GNU Affero General Public License\\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\\n\\n**\\\\\\n\\n\\\\** Charset specially customized for Tengwar Eldamar (Glaemscrafu patched version) **\\\\ \\n\\n\\\\version 0.1.0\\n\\n\\\\beg changelog\\n  \\\\entry \\\"0.0.5\\\" \\\"Added VALA_W_HOOK, VAIYA. Moved A_TEHTA_INV_L due to soft hyphen bug.\\\"\\n  \\\\entry \\\"0.0.6\\\" \\\"Superior and inferior dash and tild consonant modification signs have been added for halla, telco and ara. / Added pustar combinations (4/4-halfed/4-squared/5)\\\"\\n  \\\\entry \\\"0.0.7\\\" \\\"Fixed missing tinco_ext / sule_ext\\\"\\n  \\\\entry \\\"0.0.8\\\" \\\"Added NBSP\\\"\\n  \\\\entry \\\"0.0.9\\\" \\\"Moved back some chars to latin blocks to avoid word-wrapping problems\\\"\\n  \\\\entry \\\"0.1.0\\\" \\\"Added ELVISH_PAREN tokien, reworked sarince token names.\\\"\\n\\\\end\\n\\n\\\\**   **\\\\ \\\\char 20 SPACE              \\n\\\\** ! **\\\\ \\\\char 21 TW_EXT_11 TINCO_EXT SULE_EXT THULE_EXT          \\n\\\\** \\\" **\\\\ \\\\char 22 DASH_INF_L            \\n\\\\** # **\\\\ \\\\char 23 A_TEHTA_XL          \\n\\\\** $ **\\\\ \\\\char 24 E_TEHTA_XL   \\n\\\\** % **\\\\ \\\\char 25 I_TEHTA_XL     \\n\\\\** & **\\\\ \\\\char 26 U_TEHTA_XL        \\n\\\\** \\' **\\\\ \\\\char 27 DASH_INF_S            \\n\\\\** ( **\\\\ \\\\char 28 ?                \\n\\\\** ) **\\\\ \\\\char 29 TILD_XSUP_L           \\n\\\\** * **\\\\ \\\\char 2a ?                \\n\\\\** + **\\\\ \\\\char 2b SARINCE_RIGHT_V1 SHOOK_RIGHT_L          \\n\\\\** , **\\\\ \\\\char 2c TW_84 ESSE_NUQUERNA       \\n\\\\** - **\\\\ \\\\char 2d PUNCT_DDOT            \\n\\\\** . **\\\\ \\\\char 2e TW_94 URE            \\n\\\\** / **\\\\ \\\\char 2f TILD_XINF_S           \\n\\\\** 0 **\\\\ \\\\char 30 TILD_XSUP_S           \\n\\\\** 1 **\\\\ \\\\char 31 TW_11 TINCO           \\n\\\\** 2 **\\\\ \\\\char 32 TW_21 ANDO           \\n\\\\** 3 **\\\\ \\\\char 33 TW_31 SULE THULE        \\n\\\\** 4 **\\\\ \\\\char 34 TW_41 ANTO           \\n\\\\** 5 **\\\\ \\\\char 35 TW_51 NUMEN           \\n\\\\** 6 **\\\\ \\\\char 36 TW_61 ORE            \\n\\\\** 7 **\\\\ \\\\char 37 TW_71 ROMEN           \\n\\\\** 8 **\\\\ \\\\char 38 TW_81 SILME           \\n\\\\** 9 **\\\\ \\\\char 39 TW_91 HYARMEN          \\n\\\\** : **\\\\ \\\\char 3a TILD_INF_L            \\n\\\\** ; **\\\\ \\\\char 3b TILD_INF_S            \\n\\\\** < **\\\\ \\\\char 3c ?  \\\\** Does not look compliant between DS and Annatar **\\\\\\n\\\\** = **\\\\ \\\\char 3d PUNCT_DOT            \\n\\\\** > **\\\\ \\\\char 3e ?                \\n\\\\** ? **\\\\ \\\\char 3f TILD_XINF_L           \\n\\\\** @ **\\\\ \\\\char 40 TW_EXT_21 ANDO_EXT ANTO_EXT            \\n\\\\** A **\\\\ \\\\char 41 TW_EXT_13 CALMA_EXT AHA_EXT            \\n\\\\** B **\\\\ \\\\char 42 I_TEHTA_XS     \\n\\\\** C **\\\\ \\\\char 43 A_TEHTA_XS          \\n\\\\** D **\\\\ \\\\char 44 A_TEHTA_S           \\n\\\\** E **\\\\ \\\\char 45 A_TEHTA_L           \\n\\\\** F **\\\\ \\\\char 46 E_TEHTA_S    \\n\\\\** G **\\\\ \\\\char 47 I_TEHTA_S           \\n\\\\** H **\\\\ \\\\char 48 O_TEHTA_S           \\n\\\\** I **\\\\ \\\\char 49 SILME_NUQUERNA_ALT \\\\** Used for y in s. beleriand **\\\\                \\n\\\\** J **\\\\ \\\\char 4a U_TEHTA_S         \\n\\\\** K **\\\\ \\\\char 4b ?                \\n\\\\** L **\\\\ \\\\char 4c LAMBE_MARK_DOT                \\n\\\\** M **\\\\ \\\\char 4d U_TEHTA_XS        \\n\\\\** N **\\\\ \\\\char 4e O_TEHTA_XS          \\n\\\\** O **\\\\ \\\\char 4f ?                \\n\\\\** P **\\\\ \\\\char 50 TILD_SUP_L            \\n\\\\** Q **\\\\ \\\\char 51 TW_EXT_12 PARMA_EXT FORMEN_EXT            \\n\\\\** R **\\\\ \\\\char 52 E_TEHTA_L          \\n\\\\** S **\\\\ \\\\char 53 TW_EXT_23 ANGA_EXT ANCA_EXT            \\n\\\\** T **\\\\ \\\\char 54 I_TEHTA_L           \\n\\\\** U **\\\\ \\\\char 55 U_TEHTA_L         \\n\\\\** V **\\\\ \\\\char 56 E_TEHTA_XS         \\n\\\\** W **\\\\ \\\\char 57 TW_EXT_22 UMBAR_EXT AMPA_EXT            \\n\\\\** X **\\\\ \\\\char 58 TW_EXT_24 UNQUE_EXT UNGWE_EXT            \\n\\\\** Y **\\\\ \\\\char 59 O_TEHTA_L           \\n\\\\** Z **\\\\ \\\\char 5a TW_EXT_14 QUESSE_EXT HWESTA_EXT            \\n\\\\** [ **\\\\ \\\\char 5b DASH_SUP_S            \\n\\\\** \\\\ **\\\\ \\\\char 5c TILD_L              \\n\\\\** ] **\\\\ \\\\char 5d OSSE               \\n\\\\** ^ **\\\\ \\\\char 5e O_TEHTA_XL          \\n\\\\** _ **\\\\ \\\\char 5f SARINCE_RIGHT_V2 SHOOK_RIGHT_S          \\n\\\\** ` **\\\\ \\\\char 60 TELCO              \\n\\\\** a **\\\\ \\\\char 61 TW_13 CALMA          \\n\\\\** b **\\\\ \\\\char 62 TW_54 NWALME          \\n\\\\** c **\\\\ \\\\char 63 TW_34 HWESTA          \\n\\\\** d **\\\\ \\\\char 64 TW_33 AHA           \\n\\\\** e **\\\\ \\\\char 65 TW_32 FORMEN          \\n\\\\** f **\\\\ \\\\char 66 TW_43 ANCA           \\n\\\\** g **\\\\ \\\\char 67 TW_53 NOLDO          \\n\\\\** h **\\\\ \\\\char 68 TW_63 ANNA           \\n\\\\** i **\\\\ \\\\char 69 TW_82 SILME_NUQUERNA      \\n\\\\** j **\\\\ \\\\char 6a TW_73 LAMBE          \\n\\\\** k **\\\\ \\\\char 6b TW_83 ESSE           \\n\\\\** l **\\\\ \\\\char 6c TW_93 YANTA          \\n\\\\** m **\\\\ \\\\char 6d TW_74 ALDA           \\n\\\\** n **\\\\ \\\\char 6e TW_64 VILYA          \\n\\\\** o **\\\\ \\\\char 6f TW_92 HWESTA_SINDARINWA    \\n\\\\** p **\\\\ \\\\char 70 TILD_SUP_S           \\n\\\\** q **\\\\ \\\\char 71 TW_12 PARMA          \\n\\\\** r **\\\\ \\\\char 72 TW_42 AMPA           \\n\\\\** s **\\\\ \\\\char 73 TW_23 ANGA           \\n\\\\** t **\\\\ \\\\char 74 TW_52 MALTA          \\n\\\\** u **\\\\ \\\\char 75 TW_72 ARDA           \\n\\\\** v **\\\\ \\\\char 76 TW_44 UNQUE          \\n\\\\** w **\\\\ \\\\char 77 TW_22 UMBAR          \\n\\\\** x **\\\\ \\\\char 78 TW_24 UNGWE          \\n\\\\** y **\\\\ \\\\char 79 TW_62 VALA           \\n\\\\** z **\\\\ \\\\char 7a TW_14 QUESSE          \\n\\\\** { **\\\\ \\\\char 7b DASH_SUP_L           \\n\\\\** | **\\\\ \\\\char 7c SARINCE_LEFT_V1 SHOOK_LEFT_L          \\n\\\\** } **\\\\ \\\\char 7d SARINCE_LEFT_V2 SHOOK_LEFT_S          \\n\\\\** ~ **\\\\ \\\\char 7e ARA              \\n\\\\char a0 NBSP \\n\\\\** ¡ **\\\\ \\\\char a1 SARINCE_SEMI_ASCENDING_V1               \\n\\\\** ¢ **\\\\ \\\\char a2 SARINCE_RIGHT_V3                        \\n\\\\** £ **\\\\ \\\\char a3 SARINCE_FLOURISHED_V1 SARINCE_FLOURISHED SHOOK_BEAUTIFUL                \\n\\\\** ¥ **\\\\ \\\\char a5 SARINCE_FLOURISHED_V2                \\n\\\\** ¦ **\\\\ \\\\char a6 HWESTA_TINCO                \\n\\\\** § **\\\\ \\\\char a7 AHA_TINCO                \\n\\\\** ¨ **\\\\ \\\\char a8 TH_SUB_CIRC_S          \\n\\\\** © **\\\\ \\\\char a9 TH_SUB_CIRC_XS          \\n\\\\** ª **\\\\ \\\\char aa A_TEHTA_INV_XL        \\n\\\\** « **\\\\ \\\\char ab DQUOT_OPEN            \\n\\\\** ¬ **\\\\ \\\\char ac PUNCT_DTILD RING_MARK_L RING_MARK_R               \\n      \\n\\\\** ® **\\\\ \\\\char ae NUM_12             \\n\\\\** ¯ **\\\\ \\\\char af A_TEHTA_INV_S         \\n\\\\** ° **\\\\ \\\\char b0 LAMBE_MARK_TILD               \\n\\\\** ± **\\\\ \\\\char b1 SQUOT_OPEN            \\n\\\\** ² **\\\\ \\\\char b2 SQUOT_CLOSE           \\n\\\\** ³ **\\\\ \\\\char b3 ?                \\n\\\\** ´ **\\\\ \\\\char b4 LAMBE_MARK_DDOT         \\n\\\\** µ **\\\\ \\\\char b5 A_TEHTA_INV_XS        \\n\\\\** · **\\\\ \\\\char b7 ?                \\n\\\\** ¸ **\\\\ \\\\char b8 LAMBE_MARK_DASH          \\n\\\\** ¹ **\\\\ \\\\char b9 ?                \\n\\\\** º **\\\\ \\\\char ba ?                \\n\\\\** » **\\\\ \\\\char bb DQUOT_CLOSE           \\n\\\\** ¼ **\\\\ \\\\char bc LIGATING_SHORT_CARRIER                \\n\\\\** ½ **\\\\ \\\\char bd HALLA              \\n\\\\** ¾ **\\\\ \\\\char be BOMBADIL_W                \\n\\\\** ¿ **\\\\ \\\\char bf ?                \\n\\\\** À **\\\\ \\\\char c0 PUNCT_INTERR           \\n\\\\** Á **\\\\ \\\\char c1 PUNCT_EXCLAM           \\n\\\\** Â **\\\\ \\\\char c2 PUNCT_TILD            \\n\\\\** Ã **\\\\ \\\\char c3 ?                \\n\\\\** Ä **\\\\ \\\\char c4 ?                \\n\\\\** Å **\\\\ \\\\char c5 SARINCE_ASCENDING_V1                \\n\\\\** Æ **\\\\ \\\\char c6 SARINCE_ASCENDING_V3                \\n\\\\** Ç **\\\\ \\\\char c7 SARINCE_DESCENDING_V1               \\n\\\\** È **\\\\ \\\\char c8 THINF_DOT_XL           \\n\\\\** É **\\\\ \\\\char c9 THINF_DOT_L           \\n\\\\** Ê **\\\\ \\\\char ca THINF_DOT_S           \\n\\\\** Ë **\\\\ \\\\char cb THINF_DOT_XS           \\n\\\\** Ì **\\\\ \\\\char cc THINF_DDOT_XL          \\n\\\\** Í **\\\\ \\\\char cd THINF_DDOT_L           \\n\\\\** Î **\\\\ \\\\char ce THINF_DDOT_S           \\n\\\\** Ï **\\\\ \\\\char cf THINF_DDOT_XS          \\n\\\\** Ð **\\\\ \\\\char d0 THINF_TDOT_XL          \\n\\\\** Ñ **\\\\ \\\\char d1 THINF_TDOT_L           \\n\\\\** Ò **\\\\ \\\\char d2 THINF_TDOT_S           \\n\\\\** Ó **\\\\ \\\\char d3 THINF_TDOT_XS          \\n\\\\** Ô **\\\\ \\\\char d4 THSUP_DDOT_XL Y_TEHTA_XL I_TEHTA_DOUBLE_XL         \\n\\\\** Õ **\\\\ \\\\char d5 THSUP_DDOT_L Y_TEHTA_L I_TEHTA_DOUBLE_L       \\n\\\\** Ö **\\\\ \\\\char d6 THSUP_DDOT_S Y_TEHTA_S I_TEHTA_DOUBLE_S          \\n\\\\** × **\\\\ \\\\char d7 THSUP_DDOT_XS Y_TEHTA_XS I_TEHTA_DOUBLE_XS         \\n\\\\** Ø **\\\\ \\\\char d8 THSUP_TICK_XL          \\n\\\\** Ù **\\\\ \\\\char d9 THSUP_TICK_L           \\n\\\\** Ú **\\\\ \\\\char da THSUP_TICK_S           \\n\\\\** Û **\\\\ \\\\char db THSUP_TICK_XS          \\n\\\\** Ü **\\\\ \\\\char dc THSUP_TICK_INV_XL A_TEHTA_CIRCUM_XL       \\n\\\\** Ý **\\\\ \\\\char dd THSUP_TICK_INV_L A_TEHTA_CIRCUM_L        \\n\\\\** Þ **\\\\ \\\\char de THSUP_TICK_INV_S A_TEHTA_CIRCUM_S         \\n\\\\** ß **\\\\ \\\\char df THSUP_TICK_INV_XS A_TEHTA_CIRCUM_XS       \\n\\\\** à **\\\\ \\\\char e0 THSUP_LAMBDA_XL         \\n\\\\** á **\\\\ \\\\char e1 THSUP_LAMBDA_L          \\n\\\\** â **\\\\ \\\\char e2 THSUP_LAMBDA_S          \\n\\\\** ã **\\\\ \\\\char e3 THSUP_LAMBDA_XS         \\n\\\\** ä **\\\\ \\\\char e4 THINF_CURL_XL          \\n\\\\** å **\\\\ \\\\char e5 THINF_CURL_L           \\n\\\\** æ **\\\\ \\\\char e6 THINF_CURL_S           \\n\\\\** ç **\\\\ \\\\char e7 THINF_CURL_XS          \\n\\\\** è **\\\\ \\\\char e8 WA_TEHTA_XL           \\n\\\\** é **\\\\ \\\\char e9 WA_TEHTA_L           \\n\\\\** ê **\\\\ \\\\char ea WA_TEHTA_S           \\n\\\\** ë **\\\\ \\\\char eb WA_TEHTA_XS           \\n\\\\** ì **\\\\ \\\\char ec ?                                 \\n\\\\** í **\\\\ \\\\char ed ?                                 \\n\\\\** î **\\\\ \\\\char ee ?                                 \\n\\\\** ï **\\\\ \\\\char ef ?                                 \\n\\\\** ð **\\\\ \\\\char f0 NUM_0                               \\n\\\\** ñ **\\\\ \\\\char f1 NUM_1                               \\n\\\\** ò **\\\\ \\\\char f2 NUM_2                               \\n\\\\** ó **\\\\ \\\\char f3 NUM_3                               \\n\\\\** ô **\\\\ \\\\char f4 NUM_4                               \\n\\\\** õ **\\\\ \\\\char f5 NUM_5                               \\n\\\\** ö **\\\\ \\\\char f6 NUM_6                               \\n\\\\** ÷ **\\\\ \\\\char f7 NUM_7                               \\n\\\\** ø **\\\\ \\\\char f8 NUM_8                               \\n\\\\** ù **\\\\ \\\\char f9 NUM_9                               \\n\\\\** ú **\\\\ \\\\char fa NUM_10                               \\n\\\\** û **\\\\ \\\\char fb NUM_11                               \\n\\\\** ü **\\\\ \\\\char fc THINF_STROKE_XL                                 \\n\\\\** ý **\\\\ \\\\char fd THINF_STROKE_L                                 \\n\\\\** þ **\\\\ \\\\char fe THINF_STROKE_S                                 \\n\\\\** ÿ **\\\\ \\\\char ff THINF_STROKE_XS                 \\n\\n\\\\** FIX FOR SOFT HYPHEN **\\\\\\n\\\\char 109 A_TEHTA_INV_L\\n\\n\\\\char 10C O_TEHTA_DOUBLE_XL\\n\\\\char 10D O_TEHTA_DOUBLE_L\\n\\\\char 10E O_TEHTA_DOUBLE_S\\n\\\\char 10F O_TEHTA_DOUBLE_XS\\n\\n\\\\** USING TENGWAR ELFICA POS TO AVOID PROBLEMS **\\\\\\n\\\\char 125 VAIA WAIA VAIYA\\n\\n\\\\char 160 THINF_ACCENT_L                                 \\n\\\\char 161 MALTA_W_HOOK TW_MH                                 \\n\\\\char 178 THINF_ACCENT_XS      \\n  \\n\\\\char 180 VALA_W_HOOK TW_MH_BELERIANDIC   \\n\\n\\\\char 181 PUSTA_4\\n\\\\char 182 PUSTA_5\\n                           \\n\\\\char 192 THINF_DSTROKE_XL       \\n\\n\\\\char 19C A_TEHTA_DOUBLE_XL\\n\\\\char 19D A_TEHTA_DOUBLE_L\\n\\\\char 19E A_TEHTA_DOUBLE_S\\n\\\\char 19F A_TEHTA_DOUBLE_XS\\n\\n\\\\char 1A0 E_TEHTA_DOUBLE_XL\\n\\\\char 1A1 E_TEHTA_DOUBLE_L\\n\\\\char 1A2 E_TEHTA_DOUBLE_S\\n\\\\char 1A3 E_TEHTA_DOUBLE_XS\\n\\n\\\\char 1A4 U_TEHTA_DOUBLE_XL\\n\\\\char 1A5 U_TEHTA_DOUBLE_L\\n\\\\char 1A6 U_TEHTA_DOUBLE_S\\n\\\\char 1A7 U_TEHTA_DOUBLE_XS\\n\\n      \\n\\\\char 2C2 PUNCT_PAREN_L  PUNCT_PAREN_L_ALT                           \\n\\\\char 2C3 PUNCT_PAREN_R  PUNCT_PAREN_R_ALT        \\n                 \\n\\n\\\\char 200 DASH_INF_XS\\n\\\\char 201 TILD_INF_XS\\n\\\\char 202 DASH_SUP_XS\\n\\\\char 203 TILD_SUP_XS\\n\\n\\\\** Non attested but might exist by principle. Beware, order is revesed. **\\\\\\n\\\\char 20C E_TEHTA_GRAVE_INF_XS\\n\\\\char 20D E_TEHTA_GRAVE_INF_L\\n\\\\char 20E E_TEHTA_GRAVE_INF_S\\n\\\\char 20F E_TEHTA_GRAVE_INF_XL\\n\\n\\n\\\\char 10FB PUSTA_4_HALFED\\n\\\\char 2E2C PUSTA_4_SQUARED\\n                          \\n\\\\** ˆ **\\\\ \\\\char 2c6 PUNCT_TDOT PUSTA_3                                \\n\\\\** ˜ **\\\\ \\\\char 2dc TH_SUB_CIRC_XL                                 \\n\\\\** – **\\\\ \\\\char 2013 ANCA_CLOSED SILME_AHA                                \\n\\\\** — **\\\\ \\\\char 2014 OLD_ENGLISH_AND                                \\n\\\\** ‘ **\\\\ \\\\char 2018 THINF_CURL_INV_XL                                \\n\\\\** ’ **\\\\ \\\\char 2019 THINF_CURL_INV_L                                \\n\\\\** ‚ **\\\\ \\\\char 201a LAMBE_MARK_DSTROKE                                \\n\\\\** “ **\\\\ \\\\char 201c THINF_CURL_INV_S                                \\n\\\\** ” **\\\\ \\\\char 201d THINF_CURL_INV_XS                                \\n\\\\** „ **\\\\ \\\\char 201e THINF_DSTROKE_L                                \\n\\\\** † **\\\\ \\\\char 2020 THINF_DSTROKE_XS                                \\n\\\\** ‡ **\\\\ \\\\char 2021 ?                                \\n\\\\** • **\\\\ \\\\char 2022 TW_HW_LOWDHAM HARP_SHAPED                                \\n\\\\** … **\\\\ \\\\char 2026 THINF_DSTROKE_S                                \\n\\\\** ‰ **\\\\ \\\\char 2030 THINF_ACCENT_XL                                \\n\\\\** ‹ **\\\\ \\\\char 2039 THINF_ACCENT_S                                \\n\\\\** › **\\\\ \\\\char 203a ELVISH_PAREN BOOKMARK_SIGN                                \\n\\\\** ™ **\\\\ \\\\char 2122 TH_SUB_CIRC_L          \\n\\n\\\\char 2FFC E_TEHTA_GRAVE_XL\\n\\\\char 2FFD E_TEHTA_GRAVE_XS\\n\\\\char 2FFE E_TEHTA_GRAVE_L\\n\\\\char 2FFF E_TEHTA_GRAVE_S\\n\\n\\\\char 30C4 CHRISTOPHER_QU\\n\\\\char 30C9 LAMBE_LIG\\n\\\\char 30BF BOMBADIL_HW\\n\\\\char 30D0 ANNA_OPEN\\n                      \\n\\\\char 30D8 BREVE_TEHTA_XL\\n\\\\char 30D9 BREVE_TEHTA_L\\n\\\\char 30DA BREVE_TEHTA_S\\n\\\\char 30DB BREVE_TEHTA_XS\\n                      \\n                      \\n                      \\n              \\n\\n\\n\\\\** The following virtual chars are used to handle tehtar (& the like) multiple version chosing **\\\\\\n\\\\** It could be avoided with modern fonts with gsub/gpos tables for ligatures and diacritics **\\\\\\n\\\\** placement **\\\\\\n\\n\\\\beg virtual A_TEHTA\\n  \\\\class A_TEHTA_XS TELCO ARA HALLA HYARMEN HARP_SHAPED NUM_10 NUM_11\\n  \\\\class A_TEHTA_S SULE FORMEN TW_EXT_11 TW_EXT_12 SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA YANTA OSSE AHA_TINCO HWESTA_TINCO NUM_0 NUM_4 NUM_8\\n  \\\\class A_TEHTA_L TINCO PARMA CALMA QUESSE ORE VALA ANNA VILYA ROMEN ARDA LAMBE URE VAIA VALA_W_HOOK NUM_1\\n  \\\\class A_TEHTA_XL ANDO UMBAR ANGA UNGWE AHA HWESTA ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_13 TW_EXT_14 TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 ALDA SILME ESSE HWESTA_SINDARINWA MALTA_W_HOOK SHOOK_BEAUTIFUL ANCA_CLOSED NUM_2 NUM_3 NUM_5 NUM_6 NUM_7 NUM_9\\n\\\\end\\n\\n\\\\beg virtual A_TEHTA_CIRCUM\\n  \\\\class A_TEHTA_CIRCUM_XS TELCO ARA HALLA HYARMEN HARP_SHAPED NUM_10 NUM_11\\n  \\\\class A_TEHTA_CIRCUM_S SULE FORMEN TW_EXT_11 TW_EXT_12 SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA YANTA OSSE AHA_TINCO HWESTA_TINCO NUM_0 NUM_4 NUM_8\\n  \\\\class A_TEHTA_CIRCUM_L TINCO PARMA CALMA QUESSE ORE VALA ANNA VILYA ROMEN ARDA LAMBE URE VAIA VALA_W_HOOK NUM_1\\n  \\\\class A_TEHTA_CIRCUM_XL ANDO UMBAR ANGA UNGWE AHA HWESTA ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_13 TW_EXT_14 TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 ALDA SILME ESSE HWESTA_SINDARINWA MALTA_W_HOOK SHOOK_BEAUTIFUL ANCA_CLOSED NUM_2 NUM_3 NUM_5 NUM_6 NUM_7 NUM_9\\n\\\\end\\n\\n\\\\beg virtual A_TEHTA_REVERSED\\n  \\\\class A_TEHTA_INV_XS TELCO ARA HALLA HYARMEN HARP_SHAPED NUM_10 NUM_11\\n  \\\\class A_TEHTA_INV_S SULE FORMEN TW_EXT_11 TW_EXT_12 SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA YANTA OSSE AHA_TINCO HWESTA_TINCO NUM_0 NUM_4 NUM_8\\n  \\\\class A_TEHTA_INV_L TINCO PARMA CALMA QUESSE ORE VALA ANNA VILYA ROMEN ARDA LAMBE URE VAIA VALA_W_HOOK NUM_1\\n  \\\\class A_TEHTA_INV_XL ANDO UMBAR ANGA UNGWE AHA HWESTA ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_13 TW_EXT_14 TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 ALDA SILME ESSE HWESTA_SINDARINWA MALTA_W_HOOK SHOOK_BEAUTIFUL ANCA_CLOSED NUM_2 NUM_3 NUM_5 NUM_6 NUM_7 NUM_9\\n\\\\end\\n\\n\\\\beg virtual A_TEHTA_CIRCUM_REVERSED TEHTA_BREVE\\n  \\\\class THSUP_TICK_XS TELCO ARA HALLA HYARMEN HARP_SHAPED NUM_10 NUM_11\\n  \\\\class THSUP_TICK_S SULE FORMEN TW_EXT_11 TW_EXT_12 SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA YANTA OSSE AHA_TINCO HWESTA_TINCO NUM_0 NUM_4 NUM_8\\n  \\\\class THSUP_TICK_L TINCO PARMA CALMA QUESSE ORE VALA ANNA VILYA ROMEN ARDA LAMBE URE VAIA VALA_W_HOOK NUM_1\\n  \\\\class THSUP_TICK_XL ANDO UMBAR ANGA UNGWE AHA HWESTA ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_13 TW_EXT_14 TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 ALDA SILME ESSE HWESTA_SINDARINWA MALTA_W_HOOK SHOOK_BEAUTIFUL ANCA_CLOSED NUM_2 NUM_3 NUM_5 NUM_6 NUM_7 NUM_9\\n\\\\end\\n\\n\\\\beg virtual E_TEHTA\\n  \\\\class E_TEHTA_XS TELCO ARA HALLA HYARMEN HARP_SHAPED NUM_10 NUM_11\\n  \\\\class E_TEHTA_S SULE FORMEN TW_EXT_11 TW_EXT_12 SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA YANTA OSSE AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_8\\n  \\\\class E_TEHTA_L TINCO PARMA CALMA QUESSE ORE VALA ANNA VILYA ROMEN ARDA LAMBE URE VAIA NUM_4\\n  \\\\class E_TEHTA_XL ANDO UMBAR ANGA UNGWE AHA HWESTA ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_13 TW_EXT_14 TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 ALDA SILME ESSE HWESTA_SINDARINWA MALTA_W_HOOK VALA_W_HOOK SHOOK_BEAUTIFUL ANCA_CLOSED NUM_2 NUM_3 NUM_5 NUM_6 NUM_7 NUM_9\\n\\\\end\\n\\n\\\\beg virtual E_TEHTA_GRAVE\\n  \\\\class E_TEHTA_GRAVE_XS TELCO ARA HALLA AHA HWESTA ORE VALA ANNA VILYA TW_EXT_11 TW_EXT_12 TW_EXT_13 TW_EXT_14 ROMEN ARDA SILME ESSE HWESTA_SINDARINWA YANTA URE OSSE VAIA HARP_SHAPED NUM_5 NUM_7 NUM_10 NUM_11\\n  \\\\class E_TEHTA_GRAVE_S SULE FORMEN SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA HYARMEN AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_4 NUM_8\\n  \\\\class E_TEHTA_GRAVE_L TINCO PARMA CALMA QUESSE ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 LAMBE ALDA MALTA_W_HOOK VALA_W_HOOK SHOOK_BEAUTIFUL ANCA_CLOSED NUM_2 NUM_6 NUM_9\\n  \\\\class E_TEHTA_GRAVE_XL NUM_3\\n\\\\end\\n\\n\\\\beg virtual I_TEHTA\\n  \\\\class I_TEHTA_XS TELCO ARA HALLA HYARMEN HARP_SHAPED NUM_10 NUM_11\\n  \\\\class I_TEHTA_S SULE FORMEN TW_EXT_11 TW_EXT_12 SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA YANTA OSSE AHA_TINCO HWESTA_TINCO NUM_0\\n  \\\\class I_TEHTA_L TINCO PARMA CALMA QUESSE ORE VALA ANNA VILYA ROMEN ARDA LAMBE URE VAIA VALA_W_HOOK NUM_1 NUM_4 NUM_7 NUM_8\\n  \\\\class I_TEHTA_XL ANDO UMBAR ANGA UNGWE AHA HWESTA ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_13 TW_EXT_14 TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 ALDA SILME ESSE HWESTA_SINDARINWA MALTA_W_HOOK SHOOK_BEAUTIFUL ANCA_CLOSED NUM_2 NUM_3 NUM_5 NUM_6 NUM_9\\n\\\\end\\n\\n\\\\beg virtual O_TEHTA\\n  \\\\class O_TEHTA_XS TELCO ARA HALLA HYARMEN HARP_SHAPED NUM_10 NUM_11\\n  \\\\class O_TEHTA_S SULE FORMEN TW_EXT_11 TW_EXT_12 SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA YANTA OSSE AHA_TINCO HWESTA_TINCO NUM_0\\n  \\\\class O_TEHTA_L TINCO PARMA CALMA QUESSE ORE VALA ANNA VILYA ROMEN ARDA LAMBE URE VAIA NUM_4\\n  \\\\class O_TEHTA_XL ANDO UMBAR ANGA UNGWE AHA HWESTA ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_13 TW_EXT_14 TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 ALDA SILME ESSE HWESTA_SINDARINWA MALTA_W_HOOK VALA_W_HOOK SHOOK_BEAUTIFUL ANCA_CLOSED NUM_1 NUM_2 NUM_3 NUM_5 NUM_6 NUM_7 NUM_8 NUM_9\\n\\\\end\\n\\n\\\\beg virtual U_TEHTA\\n  \\\\class U_TEHTA_XS TELCO ARA HALLA HYARMEN HARP_SHAPED NUM_10 NUM_11\\n  \\\\class U_TEHTA_S SULE FORMEN TW_EXT_11 TW_EXT_12 SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA YANTA OSSE AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_8\\n  \\\\class U_TEHTA_L TINCO PARMA CALMA QUESSE ORE VALA ANNA VILYA ROMEN ARDA LAMBE URE VAIA VALA_W_HOOK NUM_4\\n  \\\\class U_TEHTA_XL ANDO UMBAR ANGA UNGWE AHA HWESTA ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_13 TW_EXT_14 TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 ALDA SILME ESSE HWESTA_SINDARINWA MALTA_W_HOOK SHOOK_BEAUTIFUL ANCA_CLOSED NUM_2 NUM_3 NUM_5 NUM_6 NUM_7 NUM_9\\n\\\\end\\n\\n\\\\beg virtual WA_TEHTA SEV_TEHTA\\n  \\\\class WA_TEHTA_XS TELCO ARA HALLA HYARMEN HARP_SHAPED NUM_4 NUM_10 NUM_11\\n  \\\\class WA_TEHTA_S SULE FORMEN TW_EXT_11 TW_EXT_12 SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA YANTA OSSE VAIA AHA_TINCO HWESTA_TINCO NUM_0 NUM_8\\n  \\\\class WA_TEHTA_L TINCO PARMA CALMA QUESSE ORE VALA ANNA VILYA ROMEN ARDA LAMBE URE VALA_W_HOOK NUM_1 NUM_5 NUM_7\\n  \\\\class WA_TEHTA_XL ANDO UMBAR ANGA UNGWE AHA HWESTA ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_13 TW_EXT_14 TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 ALDA SILME ESSE HWESTA_SINDARINWA MALTA_W_HOOK SHOOK_BEAUTIFUL ANCA_CLOSED NUM_2 NUM_3 NUM_6 NUM_9\\n\\\\end\\n\\n\\\\beg virtual A_TEHTA_DOUBLE\\n  \\\\class A_TEHTA_DOUBLE_XS TELCO ARA HALLA HYARMEN HARP_SHAPED NUM_10 NUM_11\\n  \\\\class A_TEHTA_DOUBLE_S SULE FORMEN TW_EXT_11 TW_EXT_12 SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA YANTA OSSE AHA_TINCO HWESTA_TINCO NUM_0 NUM_4 NUM_8\\n  \\\\class A_TEHTA_DOUBLE_L TINCO PARMA CALMA QUESSE ORE VALA ANNA VILYA ROMEN ARDA LAMBE URE VAIA NUM_1\\n  \\\\class A_TEHTA_DOUBLE_XL ANDO UMBAR ANGA UNGWE AHA HWESTA ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_13 TW_EXT_14 TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 ALDA SILME ESSE HWESTA_SINDARINWA MALTA_W_HOOK VALA_W_HOOK SHOOK_BEAUTIFUL ANCA_CLOSED NUM_2 NUM_3 NUM_5 NUM_6 NUM_7 NUM_9\\n\\\\end\\n\\n\\\\beg virtual E_TEHTA_DOUBLE\\n  \\\\class E_TEHTA_DOUBLE_XS TELCO ARA HALLA HYARMEN HARP_SHAPED NUM_10 NUM_11\\n  \\\\class E_TEHTA_DOUBLE_S SULE FORMEN TW_EXT_11 TW_EXT_12 SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA YANTA OSSE AHA_TINCO HWESTA_TINCO\\n  \\\\class E_TEHTA_DOUBLE_L TINCO PARMA CALMA QUESSE ORE VALA ANNA VILYA ROMEN ARDA LAMBE URE VAIA NUM_0\\n  \\\\class E_TEHTA_DOUBLE_XL ANDO UMBAR ANGA UNGWE AHA HWESTA ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_13 TW_EXT_14 TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 ALDA SILME ESSE HWESTA_SINDARINWA MALTA_W_HOOK VALA_W_HOOK SHOOK_BEAUTIFUL ANCA_CLOSED NUM_1 NUM_2 NUM_3 NUM_4 NUM_5 NUM_6 NUM_7 NUM_8 NUM_9\\n\\\\end\\n\\n\\\\beg virtual I_TEHTA_DOUBLE Y_TEHTA\\n  \\\\class I_TEHTA_DOUBLE_XS TELCO ARA HALLA HYARMEN HARP_SHAPED NUM_10 NUM_11\\n  \\\\class I_TEHTA_DOUBLE_S SULE FORMEN TW_EXT_11 TW_EXT_12 SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA YANTA OSSE VAIA AHA_TINCO HWESTA_TINCO NUM_0 NUM_4 NUM_8\\n  \\\\class I_TEHTA_DOUBLE_L TINCO PARMA CALMA QUESSE ORE VALA ANNA VILYA ROMEN ARDA LAMBE URE VALA_W_HOOK NUM_1\\n  \\\\class I_TEHTA_DOUBLE_XL ANDO UMBAR ANGA UNGWE AHA HWESTA ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_13 TW_EXT_14 TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 ALDA SILME ESSE HWESTA_SINDARINWA MALTA_W_HOOK SHOOK_BEAUTIFUL ANCA_CLOSED NUM_2 NUM_3 NUM_5 NUM_6 NUM_7 NUM_9\\n\\\\end\\n\\n\\\\beg virtual O_TEHTA_DOUBLE\\n  \\\\class O_TEHTA_DOUBLE_XS TELCO ARA HALLA HYARMEN HARP_SHAPED NUM_10 NUM_11\\n  \\\\class O_TEHTA_DOUBLE_S SULE FORMEN TW_EXT_11 TW_EXT_12 SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA YANTA OSSE VAIA AHA_TINCO HWESTA_TINCO\\n  \\\\class O_TEHTA_DOUBLE_L TINCO PARMA CALMA QUESSE ORE VALA ANNA VILYA ROMEN ARDA LAMBE URE NUM_0 NUM_4 NUM_8\\n  \\\\class O_TEHTA_DOUBLE_XL ANDO UMBAR ANGA UNGWE AHA HWESTA ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_13 TW_EXT_14 TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 ALDA SILME ESSE HWESTA_SINDARINWA MALTA_W_HOOK VALA_W_HOOK SHOOK_BEAUTIFUL ANCA_CLOSED NUM_1 NUM_2 NUM_3 NUM_5 NUM_6 NUM_7 NUM_9\\n\\\\end\\n\\n\\\\beg virtual U_TEHTA_DOUBLE\\n  \\\\class U_TEHTA_DOUBLE_XS TELCO ARA HALLA HYARMEN HARP_SHAPED NUM_10 NUM_11\\n  \\\\class U_TEHTA_DOUBLE_S SULE FORMEN TW_EXT_11 TW_EXT_12 SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA YANTA OSSE VAIA AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_8\\n  \\\\class U_TEHTA_DOUBLE_L TINCO PARMA CALMA QUESSE ORE VALA ANNA VILYA ROMEN ARDA LAMBE URE NUM_4\\n  \\\\class U_TEHTA_DOUBLE_XL ANDO UMBAR ANGA UNGWE AHA HWESTA ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_13 TW_EXT_14 TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 ALDA SILME ESSE HWESTA_SINDARINWA MALTA_W_HOOK VALA_W_HOOK SHOOK_BEAUTIFUL ANCA_CLOSED NUM_2 NUM_3 NUM_5 NUM_6 NUM_7 NUM_9\\n\\\\end\\n\\n\\\\beg virtual A_TEHTA_INF\\n  \\\\class THINF_TDOT_XS TELCO ARA HALLA ROMEN ARDA SILME_NUQUERNA SILME_NUQUERNA_ALT HARP_SHAPED\\n  \\\\class THINF_TDOT_S TINCO PARMA TW_EXT_11 TW_EXT_12 SILME YANTA OSSE AHA_TINCO HWESTA_TINCO NUM_5 NUM_7\\n  \\\\class THINF_TDOT_L SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA URE VAIA NUM_0 NUM_1 NUM_4 NUM_8 NUM_10 NUM_11\\n  \\\\class THINF_TDOT_XL CALMA QUESSE ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_13 TW_EXT_14 TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 LAMBE ALDA MALTA_W_HOOK VALA_W_HOOK SHOOK_BEAUTIFUL ANCA_CLOSED NUM_2 NUM_3 NUM_6 NUM_9\\n\\\\end\\n\\n\\\\beg virtual E_TEHTA_INF\\n  \\\\class THINF_ACCENT_XS TELCO ARA HALLA ROMEN ARDA SILME_NUQUERNA SILME_NUQUERNA_ALT VAIA HARP_SHAPED NUM_0 NUM_1 NUM_4 NUM_5 NUM_7 NUM_8 NUM_10 NUM_11\\n  \\\\class THINF_ACCENT_S TINCO PARMA TW_EXT_11 TW_EXT_12 SILME YANTA OSSE VALA_W_HOOK AHA_TINCO HWESTA_TINCO\\n  \\\\class THINF_ACCENT_L SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA URE NUM_2 NUM_3 NUM_6 NUM_9\\n  \\\\class THINF_ACCENT_XL CALMA QUESSE ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_13 TW_EXT_14 TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 LAMBE ALDA MALTA_W_HOOK SHOOK_BEAUTIFUL ANCA_CLOSED\\n\\\\end\\n\\n\\\\beg virtual E_TEHTA_GRAVE_INF\\n  \\\\class E_TEHTA_GRAVE_INF_XS TELCO ARA HALLA HARP_SHAPED\\n  \\\\class E_TEHTA_GRAVE_INF_S CALMA QUESSE LAMBE ALDA SHOOK_BEAUTIFUL NUM_2 NUM_5\\n  \\\\class E_TEHTA_GRAVE_INF_L TINCO PARMA SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA TW_EXT_11 TW_EXT_12 TW_EXT_13 TW_EXT_14 ROMEN ARDA SILME SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA YANTA URE OSSE VAIA VALA_W_HOOK AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_4 NUM_7 NUM_8 NUM_10 NUM_11\\n  \\\\class E_TEHTA_GRAVE_INF_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 MALTA_W_HOOK ANCA_CLOSED NUM_3 NUM_6 NUM_9\\n\\\\end\\n\\n\\\\beg virtual CIRC_TEHTA_INF\\n  \\\\class TH_SUB_CIRC_XS TELCO ARA HALLA ROMEN ARDA SILME_NUQUERNA SILME_NUQUERNA_ALT HARP_SHAPED\\n  \\\\class TH_SUB_CIRC_S TINCO PARMA TW_EXT_11 TW_EXT_12 SILME YANTA OSSE VAIA AHA_TINCO HWESTA_TINCO NUM_0 NUM_7 NUM_10 NUM_11\\n  \\\\class TH_SUB_CIRC_L SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA URE VALA_W_HOOK NUM_1 NUM_2 NUM_4 NUM_5 NUM_8\\n  \\\\class TH_SUB_CIRC_XL CALMA QUESSE ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_13 TW_EXT_14 TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 LAMBE ALDA MALTA_W_HOOK SHOOK_BEAUTIFUL ANCA_CLOSED NUM_3 NUM_6 NUM_9\\n\\\\end\\n\\n\\\\beg virtual THINNAS  THINF_STROKE\\n  \\\\class THINF_STROKE_XS TELCO ARA HALLA ROMEN ARDA SILME_NUQUERNA SILME_NUQUERNA_ALT HARP_SHAPED\\n  \\\\class THINF_STROKE_S TINCO PARMA TW_EXT_11 TW_EXT_12 SILME YANTA OSSE AHA_TINCO HWESTA_TINCO NUM_5\\n  \\\\class THINF_STROKE_L SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA URE VAIA VALA_W_HOOK NUM_0 NUM_1 NUM_4 NUM_7 NUM_8 NUM_10 NUM_11\\n  \\\\class THINF_STROKE_XL CALMA QUESSE ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_13 TW_EXT_14 TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 LAMBE ALDA MALTA_W_HOOK SHOOK_BEAUTIFUL ANCA_CLOSED NUM_2 NUM_3 NUM_6 NUM_9\\n\\\\end\\n\\n\\\\beg virtual O_TEHTA_INF\\n  \\\\class THINF_CURL_XS TELCO ARA HALLA ROMEN ARDA SILME_NUQUERNA SILME_NUQUERNA_ALT HARP_SHAPED NUM_10 NUM_11\\n  \\\\class THINF_CURL_S TINCO PARMA TW_EXT_11 TW_EXT_12 SILME YANTA OSSE AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_2 NUM_3 NUM_4 NUM_5 NUM_6 NUM_7 NUM_8 NUM_9\\n  \\\\class THINF_CURL_L SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA URE VAIA VALA_W_HOOK\\n  \\\\class THINF_CURL_XL CALMA QUESSE ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_13 TW_EXT_14 TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 LAMBE ALDA MALTA_W_HOOK SHOOK_BEAUTIFUL ANCA_CLOSED\\n\\\\end\\n\\n\\\\beg virtual U_TEHTA_INF\\n  \\\\class THINF_CURL_INV_XS TELCO ARA HALLA ROMEN ARDA SILME_NUQUERNA SILME_NUQUERNA_ALT HARP_SHAPED NUM_4 NUM_7 NUM_10 NUM_11\\n  \\\\class THINF_CURL_INV_S TINCO PARMA TW_EXT_11 TW_EXT_12 SILME YANTA OSSE AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_2 NUM_5 NUM_8 NUM_9\\n  \\\\class THINF_CURL_INV_L SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA URE VAIA VALA_W_HOOK NUM_6\\n  \\\\class THINF_CURL_INV_XL CALMA QUESSE ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_13 TW_EXT_14 TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 LAMBE ALDA MALTA_W_HOOK SHOOK_BEAUTIFUL ANCA_CLOSED NUM_3\\n\\\\end\\n\\n\\\\beg virtual PALATAL_SIGN I_TEHTA_DOUBLE_INF Y_TEHTA_INF\\n  \\\\class THINF_DDOT_XS TELCO ARA HALLA ROMEN ARDA SILME_NUQUERNA SILME_NUQUERNA_ALT HARP_SHAPED\\n  \\\\class THINF_DDOT_S TINCO PARMA TW_EXT_11 TW_EXT_12 SILME YANTA OSSE VAIA AHA_TINCO HWESTA_TINCO NUM_0 NUM_4 NUM_5 NUM_7 NUM_10 NUM_11\\n  \\\\class THINF_DDOT_L SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA URE VALA_W_HOOK NUM_1 NUM_8\\n  \\\\class THINF_DDOT_XL CALMA QUESSE ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_13 TW_EXT_14 TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 MALTA_W_HOOK SHOOK_BEAUTIFUL ANCA_CLOSED NUM_2 NUM_3 NUM_6 NUM_9\\n  \\\\class LAMBE_MARK_DDOT LAMBE ALDA\\n\\\\end\\n\\n\\\\beg virtual E_TEHTA_DOUBLE_INF GEMINATE_DOUBLE\\n  \\\\class THINF_DSTROKE_XS TELCO ARA HALLA ROMEN ARDA SILME_NUQUERNA SILME_NUQUERNA_ALT HARP_SHAPED\\n  \\\\class THINF_DSTROKE_S TINCO PARMA TW_EXT_11 TW_EXT_12 SILME YANTA OSSE VAIA AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_4 NUM_5 NUM_7 NUM_10 NUM_11\\n  \\\\class THINF_DSTROKE_L SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA URE VALA_W_HOOK NUM_2 NUM_3 NUM_6 NUM_8\\n  \\\\class THINF_DSTROKE_XL CALMA QUESSE ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_13 TW_EXT_14 TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 MALTA_W_HOOK SHOOK_BEAUTIFUL ANCA_CLOSED NUM_9\\n  \\\\class LAMBE_MARK_DSTROKE LAMBE ALDA\\n\\\\end\\n\\n\\\\beg virtual UNUTIXE I_TEHTA_INF NO_VOWEL_DOT\\n  \\\\class THINF_DOT_XS TELCO ARA HALLA ROMEN ARDA SILME_NUQUERNA SILME_NUQUERNA_ALT HARP_SHAPED\\n  \\\\class THINF_DOT_S TINCO PARMA TW_EXT_11 TW_EXT_12 SILME YANTA OSSE VAIA AHA_TINCO HWESTA_TINCO NUM_0 NUM_10 NUM_11\\n  \\\\class THINF_DOT_L SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA URE NUM_1 NUM_4 NUM_5 NUM_7 NUM_8\\n  \\\\class THINF_DOT_XL CALMA QUESSE ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_13 TW_EXT_14 TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 MALTA_W_HOOK VALA_W_HOOK SHOOK_BEAUTIFUL ANCA_CLOSED NUM_2 NUM_3 NUM_6 NUM_9\\n  \\\\class LAMBE_MARK_DOT LAMBE ALDA\\n\\\\end\\n\\n\\\\beg virtual GEMINATE_SIGN\\n  \\\\class DASH_INF_XS TELCO ARA HALLA\\n  \\\\class DASH_INF_S TINCO PARMA CALMA QUESSE SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA TW_EXT_11 TW_EXT_12 TW_EXT_13 TW_EXT_14 ROMEN ARDA SILME SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA YANTA URE OSSE VAIA VALA_W_HOOK SHOOK_BEAUTIFUL HARP_SHAPED AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_4 NUM_5 NUM_6 NUM_7 NUM_8 NUM_10 NUM_11\\n  \\\\class DASH_INF_L ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_9\\n  \\\\class LAMBE_MARK_DASH LAMBE ALDA\\n\\\\end\\n\\n\\\\beg virtual GEMINATE_SIGN_TILD\\n  \\\\class TILD_INF_XS TELCO ARA HALLA\\n  \\\\class TILD_INF_S TINCO PARMA CALMA QUESSE SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA TW_EXT_11 TW_EXT_12 TW_EXT_13 TW_EXT_14 ROMEN ARDA SILME SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA YANTA URE OSSE VAIA VALA_W_HOOK SHOOK_BEAUTIFUL HARP_SHAPED AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_4 NUM_5 NUM_6 NUM_7 NUM_8 NUM_10 NUM_11\\n  \\\\class TILD_INF_L ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_9\\n  \\\\class LAMBE_MARK_TILD LAMBE ALDA\\n\\\\end\\n\\n\\\\beg virtual NASALIZE_SIGN\\n  \\\\class DASH_SUP_XS TELCO ARA HALLA\\n  \\\\class DASH_SUP_S TINCO PARMA CALMA QUESSE SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA TW_EXT_11 TW_EXT_12 TW_EXT_13 TW_EXT_14 ROMEN ARDA LAMBE ALDA SILME SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA YANTA URE OSSE VAIA VALA_W_HOOK SHOOK_BEAUTIFUL HARP_SHAPED AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_4 NUM_5 NUM_6 NUM_7 NUM_8 NUM_10 NUM_11\\n  \\\\class DASH_SUP_L ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_9\\n\\\\end\\n\\n\\\\beg virtual NASALIZE_SIGN_TILD\\n  \\\\class TILD_SUP_XS TELCO ARA HALLA\\n  \\\\class TILD_SUP_S TINCO PARMA CALMA QUESSE SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA TW_EXT_11 TW_EXT_12 TW_EXT_13 TW_EXT_14 ROMEN ARDA LAMBE ALDA SILME SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA YANTA URE OSSE VAIA VALA_W_HOOK SHOOK_BEAUTIFUL HARP_SHAPED AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_4 NUM_5 NUM_6 NUM_7 NUM_8 NUM_10 NUM_11\\n  \\\\class TILD_SUP_L ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_9\\n\\\\end\\n\\n\\\\beg virtual SARINCE\\n  \\\\class SHOOK_LEFT_L CALMA QUESSE ANGA UNGWE TW_EXT_13 TW_EXT_14 TW_EXT_23 TW_EXT_24 HWESTA_SINDARINWA\\n  \\\\class SHOOK_RIGHT_L TELCO ARA HALLA TINCO PARMA ANDO UMBAR SULE FORMEN AHA HWESTA ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME ORE VALA ANNA VILYA TW_EXT_11 TW_EXT_12 TW_EXT_21 TW_EXT_22 ROMEN ARDA LAMBE ALDA SILME SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE ESSE_NUQUERNA HYARMEN YANTA URE OSSE VAIA MALTA_W_HOOK VALA_W_HOOK SHOOK_BEAUTIFUL ANCA_CLOSED HARP_SHAPED AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_2 NUM_3 NUM_4 NUM_5 NUM_6 NUM_7 NUM_8 NUM_9 NUM_10 NUM_11\\n\\\\end\\n\"\nGlaemscribe.resource_manager.raw_charsets[\"tengwar_ds_elfica\"] = \"\\\\**\\n\\nGlǽmscribe (also written Glaemscribe) is a software dedicated to\\nthe transcription of texts between writing systems, and more \\nspecifically dedicated to the transcription of J.R.R. Tolkien\\'s \\ninvented languages to some of his devised writing systems.\\n\\nCopyright (C) 2015 Benjamin Babut (Talagan).\\n\\nThis program is free software: you can redistribute it and/or modify\\nit under the terms of the GNU Affero General Public License as published by\\nthe Free Software Foundation, either version 3 of the License, or\\nany later version.\\n\\nThis program is distributed in the hope that it will be useful,\\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\nGNU Affero General Public License for more details.\\n\\nYou should have received a copy of the GNU Affero General Public License\\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\\n\\n**\\\\\\n\\n\\\\** Charset specially customized for Tengwar Elfica (Glaemscrafu patched version) **\\\\ \\n\\n\\\\version 0.1.0\\n\\n\\\\beg changelog\\n  \\\\entry \\\"0.0.5\\\" \\\"Added VALA_W_HOOK, VAIYA. Moved A_TEHTA_INV_L due to soft hyphen bug.\\\"\\n  \\\\entry \\\"0.0.6\\\" \\\"Superior and inferior dash and tild consonant modification signs have been added for halla, telco and ara. / Added pustar combinations (4/4-halfed/4-squared/5)\\\"\\n  \\\\entry \\\"0.0.7\\\" \\\"Fixed missing tinco_ext / sule_ext\\\"\\n  \\\\entry \\\"0.0.8\\\" \\\"Added NBSP\\\"\\n  \\\\entry \\\"0.0.9\\\" \\\"Moved back some chars to latin blocks to avoid word-wrapping problems\\\"  \\n  \\\\entry \\\"0.1.0\\\" \\\"Added ELVISH_PAREN tokien, reworked sarince token names.\\\"\\n\\\\end\\n\\n\\\\**   **\\\\ \\\\char 20 SPACE              \\n\\\\** ! **\\\\ \\\\char 21 TW_EXT_11 TINCO_EXT SULE_EXT THULE_EXT                  \\n\\\\** \\\" **\\\\ \\\\char 22 DASH_INF_L            \\n\\\\** # **\\\\ \\\\char 23 A_TEHTA_XL          \\n\\\\** $ **\\\\ \\\\char 24 E_TEHTA_XL   \\n\\\\** % **\\\\ \\\\char 25 I_TEHTA_XL     \\n\\\\** & **\\\\ \\\\char 26 U_TEHTA_XL        \\n\\\\** \\' **\\\\ \\\\char 27 DASH_INF_S            \\n\\\\** ( **\\\\ \\\\char 28 ?         \\\\** seems redundant with I_TEHTA_INF **\\\\       \\n\\\\** ) **\\\\ \\\\char 29 TILD_XSUP_L           \\n\\\\** * **\\\\ \\\\char 2a ?                \\n\\\\** + **\\\\ \\\\char 2b SARINCE_RIGHT_V1 SHOOK_RIGHT_L          \\n\\\\** , **\\\\ \\\\char 2c TW_84 ESSE_NUQUERNA       \\n\\\\** - **\\\\ \\\\char 2d PUNCT_DDOT            \\n\\\\** . **\\\\ \\\\char 2e TW_94 URE            \\n\\\\** / **\\\\ \\\\char 2f TILD_XINF_S           \\n\\\\** 0 **\\\\ \\\\char 30 TILD_XSUP_S           \\n\\\\** 1 **\\\\ \\\\char 31 TW_11 TINCO           \\n\\\\** 2 **\\\\ \\\\char 32 TW_21 ANDO           \\n\\\\** 3 **\\\\ \\\\char 33 TW_31 SULE THULE        \\n\\\\** 4 **\\\\ \\\\char 34 TW_41 ANTO           \\n\\\\** 5 **\\\\ \\\\char 35 TW_51 NUMEN           \\n\\\\** 6 **\\\\ \\\\char 36 TW_61 ORE            \\n\\\\** 7 **\\\\ \\\\char 37 TW_71 ROMEN           \\n\\\\** 8 **\\\\ \\\\char 38 TW_81 SILME           \\n\\\\** 9 **\\\\ \\\\char 39 TW_91 HYARMEN          \\n\\\\** : **\\\\ \\\\char 3a TILD_INF_L            \\n\\\\** ; **\\\\ \\\\char 3b TILD_INF_S            \\n\\\\** < **\\\\ \\\\char 3c ?  \\\\** Does not look compliant between DS and Annatar **\\\\\\n\\\\** = **\\\\ \\\\char 3d PUNCT_DOT            \\n\\\\** > **\\\\ \\\\char 3e ?                \\n\\\\** ? **\\\\ \\\\char 3f TILD_XINF_L           \\n\\\\** @ **\\\\ \\\\char 40 TW_EXT_21 ANDO_EXT ANTO_EXT            \\n\\\\** A **\\\\ \\\\char 41 TW_EXT_13 CALMA_EXT AHA_EXT            \\n\\\\** B **\\\\ \\\\char 42 I_TEHTA_XS     \\n\\\\** C **\\\\ \\\\char 43 A_TEHTA_XS          \\n\\\\** D **\\\\ \\\\char 44 A_TEHTA_S           \\n\\\\** E **\\\\ \\\\char 45 A_TEHTA_L           \\n\\\\** F **\\\\ \\\\char 46 E_TEHTA_S    \\n\\\\** G **\\\\ \\\\char 47 I_TEHTA_S           \\n\\\\** H **\\\\ \\\\char 48 O_TEHTA_S           \\n\\\\** I **\\\\ \\\\char 49 SILME_NUQUERNA_ALT \\\\** Used for y in s. beleriand **\\\\                \\n\\\\** J **\\\\ \\\\char 4a U_TEHTA_S         \\n\\\\** K **\\\\ \\\\char 4b ?                \\n\\\\** L **\\\\ \\\\char 4c LAMBE_MARK_DOT                \\n\\\\** M **\\\\ \\\\char 4d U_TEHTA_XS        \\n\\\\** N **\\\\ \\\\char 4e O_TEHTA_XS          \\n\\\\** O **\\\\ \\\\char 4f ?                \\n\\\\** P **\\\\ \\\\char 50 TILD_SUP_L            \\n\\\\** Q **\\\\ \\\\char 51 TW_EXT_12 PARMA_EXT FORMEN_EXT            \\n\\\\** R **\\\\ \\\\char 52 E_TEHTA_L          \\n\\\\** S **\\\\ \\\\char 53 TW_EXT_23 ANGA_EXT ANCA_EXT            \\n\\\\** T **\\\\ \\\\char 54 I_TEHTA_L           \\n\\\\** U **\\\\ \\\\char 55 U_TEHTA_L         \\n\\\\** V **\\\\ \\\\char 56 E_TEHTA_XS         \\n\\\\** W **\\\\ \\\\char 57 TW_EXT_22 UMBAR_EXT AMPA_EXT            \\n\\\\** X **\\\\ \\\\char 58 TW_EXT_24 UNQUE_EXT UNGWE_EXT            \\n\\\\** Y **\\\\ \\\\char 59 O_TEHTA_L           \\n\\\\** Z **\\\\ \\\\char 5a TW_EXT_14 QUESSE_EXT HWESTA_EXT            \\n\\\\** [ **\\\\ \\\\char 5b DASH_SUP_S            \\n\\\\** \\\\ **\\\\ \\\\char 5c TILD_L              \\n\\\\** ] **\\\\ \\\\char 5d OSSE               \\n\\\\** ^ **\\\\ \\\\char 5e O_TEHTA_XL          \\n\\\\** _ **\\\\ \\\\char 5f SARINCE_RIGHT_V2 SHOOK_RIGHT_S          \\n\\\\** ` **\\\\ \\\\char 60 TELCO              \\n\\\\** a **\\\\ \\\\char 61 TW_13 CALMA          \\n\\\\** b **\\\\ \\\\char 62 TW_54 NWALME          \\n\\\\** c **\\\\ \\\\char 63 TW_34 HWESTA          \\n\\\\** d **\\\\ \\\\char 64 TW_33 AHA           \\n\\\\** e **\\\\ \\\\char 65 TW_32 FORMEN          \\n\\\\** f **\\\\ \\\\char 66 TW_43 ANCA           \\n\\\\** g **\\\\ \\\\char 67 TW_53 NOLDO          \\n\\\\** h **\\\\ \\\\char 68 TW_63 ANNA           \\n\\\\** i **\\\\ \\\\char 69 TW_82 SILME_NUQUERNA      \\n\\\\** j **\\\\ \\\\char 6a TW_73 LAMBE       \\n\\\\** k **\\\\ \\\\char 6b TW_83 ESSE           \\n\\\\** l **\\\\ \\\\char 6c TW_93 YANTA          \\n\\\\** m **\\\\ \\\\char 6d TW_74 ALDA           \\n\\\\** n **\\\\ \\\\char 6e TW_64 VILYA          \\n\\\\** o **\\\\ \\\\char 6f TW_92 HWESTA_SINDARINWA    \\n\\\\** p **\\\\ \\\\char 70 TILD_SUP_S           \\n\\\\** q **\\\\ \\\\char 71 TW_12 PARMA          \\n\\\\** r **\\\\ \\\\char 72 TW_42 AMPA           \\n\\\\** s **\\\\ \\\\char 73 TW_23 ANGA           \\n\\\\** t **\\\\ \\\\char 74 TW_52 MALTA          \\n\\\\** u **\\\\ \\\\char 75 TW_72 ARDA           \\n\\\\** v **\\\\ \\\\char 76 TW_44 UNQUE          \\n\\\\** w **\\\\ \\\\char 77 TW_22 UMBAR          \\n\\\\** x **\\\\ \\\\char 78 TW_24 UNGWE          \\n\\\\** y **\\\\ \\\\char 79 TW_62 VALA           \\n\\\\** z **\\\\ \\\\char 7a TW_14 QUESSE          \\n\\\\** { **\\\\ \\\\char 7b DASH_SUP_L           \\n\\\\** | **\\\\ \\\\char 7c SARINCE_LEFT_V1 SHOOK_LEFT_L          \\n\\\\** } **\\\\ \\\\char 7d SARINCE_LEFT_V2 SHOOK_LEFT_S          \\n\\\\** ~ **\\\\ \\\\char 7e ARA              \\n\\\\char a0 NBSP\\n\\\\** ¡ **\\\\ \\\\char a1 SARINCE_SEMI_ASCENDING_V1                \\n\\\\** ¢ **\\\\ \\\\char a2 SARINCE_RIGHT_V3                \\n\\\\** £ **\\\\ \\\\char a3 SARINCE_FLOURISHED_V1 SARINCE_FLOURISHED SHOOK_BEAUTIFUL                \\n\\\\** ¥ **\\\\ \\\\char a5 SARINCE_FLOURISHED_V2                  \\n\\\\** ¦ **\\\\ \\\\char a6 HWESTA_TINCO                \\n\\\\** § **\\\\ \\\\char a7 AHA_TINCO                \\n\\\\** ¨ **\\\\ \\\\char a8 TH_SUB_CIRC_S          \\n\\\\** © **\\\\ \\\\char a9 TH_SUB_CIRC_XS          \\n\\\\** ª **\\\\ \\\\char aa ? \\\\** A_TEHTA_INV_XL **\\\\\\n\\\\** « **\\\\ \\\\char ab DQUOT_OPEN            \\n\\\\** ¬ **\\\\ \\\\char ac PUNCT_DTILD RING_MARK_L RING_MARK_R              \\n\\\\**   **\\\\ \\\\char ad ? \\\\** A_TEHTA_INV_L **\\\\        \\n\\\\** ® **\\\\ \\\\char ae ?                \\n\\\\** ¯ **\\\\ \\\\char af ? \\\\** A_TEHTA_INV_S **\\\\\\n\\\\** ° **\\\\ \\\\char b0 LAMBE_MARK_TILD              \\n\\\\** ± **\\\\ \\\\char b1 SQUOT_OPEN            \\n\\\\** ² **\\\\ \\\\char b2 SQUOT_CLOSE           \\n\\\\** ³ **\\\\ \\\\char b3 ?                \\n\\\\** ´ **\\\\ \\\\char b4 LAMBE_MARK_DDOT         \\n\\\\** µ **\\\\ \\\\char b5 ? \\\\** A_TEHTA_INV_XS **\\\\\\n\\\\** · **\\\\ \\\\char b7 ?                \\n\\\\** ¸ **\\\\ \\\\char b8 LAMBE_MARK_DASH         \\n\\\\** ¹ **\\\\ \\\\char b9 ?                \\n\\\\** º **\\\\ \\\\char ba ?                \\n\\\\** » **\\\\ \\\\char bb DQUOT_CLOSE           \\n\\\\** ¼ **\\\\ \\\\char bc LIGATING_SHORT_CARRIER                \\n\\\\** ½ **\\\\ \\\\char bd HALLA              \\n\\\\** ¾ **\\\\ \\\\char be BOMBADIL_W           \\n\\\\** ¿ **\\\\ \\\\char bf BOMBADIL_HW           \\n\\\\** À **\\\\ \\\\char c0 PUNCT_INTERR           \\n\\\\** Á **\\\\ \\\\char c1 PUNCT_EXCLAM           \\n\\\\** Â **\\\\ \\\\char c2 PUNCT_TILD            \\n\\\\** Ã **\\\\ \\\\char c3 ?                \\n\\\\** Ä **\\\\ \\\\char c4 CHRISTOPHER_QU                    \\n\\\\** Å **\\\\ \\\\char c5 SARINCE_ASCENDING_V1                \\n\\\\** Æ **\\\\ \\\\char c6 SARINCE_ASCENDING_V3                   \\n\\\\** Ç **\\\\ \\\\char c7 ?                \\n\\\\** È **\\\\ \\\\char c8 THINF_DOT_XL           \\n\\\\** É **\\\\ \\\\char c9 THINF_DOT_L           \\n\\\\** Ê **\\\\ \\\\char ca THINF_DOT_S           \\n\\\\** Ë **\\\\ \\\\char cb THINF_DOT_XS           \\n\\\\** Ì **\\\\ \\\\char cc THINF_DDOT_XL          \\n\\\\** Í **\\\\ \\\\char cd THINF_DDOT_L           \\n\\\\** Î **\\\\ \\\\char ce THINF_DDOT_S           \\n\\\\** Ï **\\\\ \\\\char cf THINF_DDOT_XS          \\n\\\\** Ð **\\\\ \\\\char d0 THINF_TDOT_XL          \\n\\\\** Ñ **\\\\ \\\\char d1 THINF_TDOT_L           \\n\\\\** Ò **\\\\ \\\\char d2 THINF_TDOT_S           \\n\\\\** Ó **\\\\ \\\\char d3 THINF_TDOT_XS          \\n\\\\** Ô **\\\\ \\\\char d4 THSUP_DDOT_XL Y_TEHTA_XL I_TEHTA_DOUBLE_XL         \\n\\\\** Õ **\\\\ \\\\char d5 THSUP_DDOT_L Y_TEHTA_L I_TEHTA_DOUBLE_L       \\n\\\\** Ö **\\\\ \\\\char d6 THSUP_DDOT_S Y_TEHTA_S I_TEHTA_DOUBLE_S          \\n\\\\** × **\\\\ \\\\char d7 THSUP_DDOT_XS Y_TEHTA_XS I_TEHTA_DOUBLE_XS         \\n\\\\** Ø **\\\\ \\\\char d8 THSUP_TICK_XL          \\n\\\\** Ù **\\\\ \\\\char d9 THSUP_TICK_L           \\n\\\\** Ú **\\\\ \\\\char da THSUP_TICK_S           \\n\\\\** Û **\\\\ \\\\char db THSUP_TICK_XS          \\n\\\\** Ü **\\\\ \\\\char dc THSUP_TICK_INV_XL A_TEHTA_CIRCUM_XL       \\n\\\\** Ý **\\\\ \\\\char dd THSUP_TICK_INV_L A_TEHTA_CIRCUM_L        \\n\\\\** Þ **\\\\ \\\\char de THSUP_TICK_INV_S A_TEHTA_CIRCUM_S         \\n\\\\** ß **\\\\ \\\\char df THSUP_TICK_INV_XS A_TEHTA_CIRCUM_XS       \\n\\\\** à **\\\\ \\\\char e0 ? \\\\** THSUP_LAMBDA_XL => REVERSED_O_TEHTA **\\\\\\n\\\\** á **\\\\ \\\\char e1 ? \\\\** THSUP_LAMBDA_L => REVERSED_O_TEHTA **\\\\          \\n\\\\** â **\\\\ \\\\char e2 ? \\\\** THSUP_LAMBDA_S => REVERSED_O_TEHTA **\\\\          \\n\\\\** ã **\\\\ \\\\char e3 ? \\\\** THSUP_LAMBDA_XS => REVERSED_O_TEHTA **\\\\\\n\\\\** ä **\\\\ \\\\char e4 THINF_CURL_XL          \\n\\\\** å **\\\\ \\\\char e5 THINF_CURL_L           \\n\\\\** æ **\\\\ \\\\char e6 THINF_CURL_S           \\n\\\\** ç **\\\\ \\\\char e7 THINF_CURL_XS          \\n\\\\** è **\\\\ \\\\char e8 WA_TEHTA_XL           \\n\\\\** é **\\\\ \\\\char e9 WA_TEHTA_L           \\n\\\\** ê **\\\\ \\\\char ea WA_TEHTA_S           \\n\\\\** ë **\\\\ \\\\char eb WA_TEHTA_XS           \\n\\\\** ì **\\\\ \\\\char ec ?                                 \\n\\\\** í **\\\\ \\\\char ed ?                                 \\n\\\\** î **\\\\ \\\\char ee ?                                 \\n\\\\** ï **\\\\ \\\\char ef ?                                 \\n\\\\** ð **\\\\ \\\\char f0 NUM_0                               \\n\\\\** ñ **\\\\ \\\\char f1 NUM_1                               \\n\\\\** ò **\\\\ \\\\char f2 NUM_2                               \\n\\\\** ó **\\\\ \\\\char f3 NUM_3                               \\n\\\\** ô **\\\\ \\\\char f4 NUM_4                               \\n\\\\** õ **\\\\ \\\\char f5 NUM_5                               \\n\\\\** ö **\\\\ \\\\char f6 NUM_6                               \\n\\\\** ÷ **\\\\ \\\\char f7 NUM_7                               \\n\\\\** ø **\\\\ \\\\char f8 NUM_8                               \\n\\\\** ù **\\\\ \\\\char f9 NUM_9                               \\n\\\\** ú **\\\\ \\\\char fa NUM_10                               \\n\\\\** û **\\\\ \\\\char fb NUM_11                               \\n\\\\** ü **\\\\ \\\\char fc THINF_STROKE_XL                                 \\n\\\\** ý **\\\\ \\\\char fd THINF_STROKE_L                                 \\n\\\\** þ **\\\\ \\\\char fe THINF_STROKE_S                                 \\n\\\\** ÿ **\\\\ \\\\char ff THINF_STROKE_XS     \\n\\n\\\\** NEW BLOCK HERE : 0x100 => 0x13F : lot of chars are in alternate font in eldamar **\\\\\\n\\\\** DOUBLE TEHTAR ARE HERE **\\\\\\n\\n\\\\char 123 ANNA_OPEN\\n\\\\char 129 NUM_12\\n                           \\n\\\\char 108 A_TEHTA_INV_XL A_TEHTA_DOUBLE_XL\\n\\\\char 109 A_TEHTA_INV_L  A_TEHTA_DOUBLE_L\\n\\\\char 10A A_TEHTA_INV_S  A_TEHTA_DOUBLE_S\\n\\\\char 10B A_TEHTA_INV_XS A_TEHTA_DOUBLE_XS\\n\\n\\\\char 10C O_TEHTA_DOUBLE_XL\\n\\\\char 10D O_TEHTA_DOUBLE_L\\n\\\\char 10E O_TEHTA_DOUBLE_S\\n\\\\char 10F O_TEHTA_DOUBLE_XS\\n\\n\\\\char 110 E_TEHTA_GRAVE_XL\\n\\\\char 111 E_TEHTA_GRAVE_L\\n\\\\char 112 E_TEHTA_GRAVE_S\\n\\\\char 113 E_TEHTA_GRAVE_XS\\n\\n\\\\char 1A0 E_TEHTA_DOUBLE_XL\\n\\\\char 1A1 E_TEHTA_DOUBLE_L\\n\\\\char 1A2 E_TEHTA_DOUBLE_S\\n\\\\char 1A3 E_TEHTA_DOUBLE_XS\\n\\n\\\\char 1A4 U_TEHTA_DOUBLE_XL\\n\\\\char 1A5 U_TEHTA_DOUBLE_L\\n\\\\char 1A6 U_TEHTA_DOUBLE_S\\n\\\\char 1A7 U_TEHTA_DOUBLE_XS\\n\\n\\\\char 1B2 THSUP_LAMBDA_XL\\n\\\\char 1B3 THSUP_LAMBDA_L \\n\\\\char 1B4 THSUP_LAMBDA_S \\n\\\\char 1B5 THSUP_LAMBDA_XS\\n          \\n\\\\** END OF NEW BLOCK **\\\\\\n          \\n\\\\char 125 VAIA WAIA VAIYA\\n          \\n\\\\** Œ **\\\\ \\\\char 152 PUNCT_PAREN_L PUNCT_PAREN_L_ALT          \\\\** OK **\\\\                    \\n\\\\** œ **\\\\ \\\\char 153 PUNCT_PAREN_R PUNCT_PAREN_R_ALT         \\\\** OK **\\\\                        \\n\\\\** Š **\\\\ \\\\char 160 THINF_ACCENT_L         \\\\** OK **\\\\                              \\n\\\\** š **\\\\ \\\\char 161 MALTA_W_HOOK TW_MH           \\\\** OK **\\\\                            \\n\\\\** Ÿ **\\\\ \\\\char 178 THINF_ACCENT_XS        \\\\** OK **\\\\              \\n\\n\\\\char 180 VALA_W_HOOK TW_MH_BELERIANDIC\\n\\n                \\n\\\\** \\\\char 192 THINF_DSTROKE_XL **\\\\                               \\n\\n\\\\char 200 DASH_INF_XS\\n\\\\char 201 TILD_INF_XS\\n\\\\char 202 DASH_SUP_XS\\n\\\\char 203 TILD_SUP_XS\\n\\n\\\\char 204 THINF_CURL_INV_XL\\n\\\\char 205 THINF_CURL_INV_L\\n\\\\char 206 THINF_CURL_INV_S\\n\\\\char 207 THINF_CURL_INV_XS\\n\\n\\\\** Moved excentred inf tehta **\\\\\\n\\\\char 208 THINF_DSTROKE_XL\\n\\\\char 209 THINF_DSTROKE_L\\n\\\\char 20A THINF_DSTROKE_S\\n\\\\char 20B THINF_DSTROKE_XS\\n\\n\\\\** Non attested but might exist by principle. Beware, order is revesed. **\\\\\\n\\\\char 20C E_TEHTA_GRAVE_INF_XS\\n\\\\char 20D E_TEHTA_GRAVE_INF_L\\n\\\\char 20E E_TEHTA_GRAVE_INF_S\\n\\\\char 20F E_TEHTA_GRAVE_INF_XL\\n\\n\\n\\n\\\\char 250 LAMBE_MARK_DSTROKE                    \\n\\n\\\\char 181 PUSTA_4\\n\\\\char 182 PUSTA_5\\n\\\\char 10FB PUSTA_4_HALFED\\n\\\\char 2E2C PUSTA_4_SQUARED\\n\\n\\\\** ˆ **\\\\ \\\\char 2c6 PUNCT_TDOT PUSTA_3 \\n\\n\\n\\n\\\\** ˜ **\\\\ \\\\char 2dc TH_SUB_CIRC_XL         \\\\** OK **\\\\         \\n\\n\\n               \\n\\\\** – **\\\\ \\\\char 2013 ANCA_CLOSED SILME_AHA           \\\\** OK **\\\\                       \\n\\\\** — **\\\\ \\\\char 2014 OLD_ENGLISH_AND       \\\\** OK **\\\\                          \\n\\\\** ‘ **\\\\ \\\\char 2018 ?     \\\\** OK **\\\\                            \\n\\\\** ’ **\\\\ \\\\char 2019 ?      \\\\** OK **\\\\                           \\n\\\\** \\\\char 201a LAMBE_MARK_DSTROKE **\\\\                              \\n\\\\** “ **\\\\ \\\\char 201c ?      \\\\** OK **\\\\                           \\n\\\\** ” **\\\\ \\\\char 201d ?     \\\\** OK **\\\\                            \\n\\\\** \\\\char 201e THINF_DSTROKE_L **\\\\                          \\n\\\\** \\\\char 2020 THINF_DSTROKE_XS **\\\\                           \\n\\\\** ‡ **\\\\ \\\\char 2021 ?                                \\n\\\\** • **\\\\ \\\\char 2022 TW_HW_LOWDHAM HARP_SHAPED           \\\\** OK **\\\\                       \\n\\\\** \\\\char 2026 THINF_DSTROKE_S **\\\\                           \\n\\\\** ‰ **\\\\ \\\\char 2030 THINF_ACCENT_XL       \\\\** OK **\\\\                          \\n\\\\** ‹ **\\\\ \\\\char 2039 THINF_ACCENT_S        \\\\** OK **\\\\                         \\n\\\\** › **\\\\ \\\\char 203a ELVISH_PAREN BOOKMARK_SIGN         \\\\** OK **\\\\                        \\n\\\\** ™ **\\\\ \\\\char 2122 TH_SUB_CIRC_L         \\\\** OK **\\\\ \\n\\n\\n                         \\n\\\\** The following virtual chars are used to handle tehtar (& the like) multiple version chosing **\\\\\\n\\\\** It could be avoided with modern fonts with gsub/gpos tables for ligatures and diacritics **\\\\\\n\\\\** placement **\\\\\\n\\n\\\\** DUMPED FROM THE VIRTUAL CHARS TOOL **\\\\\\n\\n\\n\\\\beg virtual A_TEHTA\\n  \\\\class A_TEHTA_XS TELCO ARA HALLA HYARMEN HARP_SHAPED NUM_10 NUM_11\\n  \\\\class A_TEHTA_S TINCO CALMA QUESSE SULE FORMEN ORE ANNA VILYA TW_EXT_11 TW_EXT_12 ROMEN ARDA SILME_NUQUERNA URE OSSE SHOOK_BEAUTIFUL AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_4 NUM_5 NUM_8\\n  \\\\class A_TEHTA_L PARMA AHA HWESTA VALA TW_EXT_13 TW_EXT_14 LAMBE ALDA SILME_NUQUERNA_ALT ESSE_NUQUERNA YANTA VALA_W_HOOK NUM_2 NUM_6 NUM_7\\n  \\\\class A_TEHTA_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 SILME ESSE HWESTA_SINDARINWA VAIA MALTA_W_HOOK ANCA_CLOSED NUM_3 NUM_9\\n\\\\end\\n\\n\\\\beg virtual A_TEHTA_CIRCUM\\n  \\\\class A_TEHTA_CIRCUM_XS TELCO ARA HALLA HYARMEN HARP_SHAPED NUM_10 NUM_11\\n  \\\\class A_TEHTA_CIRCUM_S TINCO CALMA QUESSE SULE FORMEN ORE ANNA VILYA TW_EXT_11 TW_EXT_12 ROMEN ARDA SILME_NUQUERNA URE OSSE SHOOK_BEAUTIFUL AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_4 NUM_5 NUM_8\\n  \\\\class A_TEHTA_CIRCUM_L PARMA AHA HWESTA VALA TW_EXT_13 TW_EXT_14 LAMBE ALDA SILME_NUQUERNA_ALT ESSE_NUQUERNA YANTA VALA_W_HOOK NUM_2 NUM_6 NUM_7\\n  \\\\class A_TEHTA_CIRCUM_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 SILME ESSE HWESTA_SINDARINWA VAIA MALTA_W_HOOK ANCA_CLOSED NUM_3 NUM_9\\n\\\\end\\n\\n\\\\beg virtual A_TEHTA_REVERSED\\n  \\\\class A_TEHTA_INV_XS TELCO ARA HALLA HYARMEN HARP_SHAPED NUM_10 NUM_11\\n  \\\\class A_TEHTA_INV_S TINCO CALMA QUESSE SULE FORMEN ORE ANNA VILYA TW_EXT_11 TW_EXT_12 ROMEN ARDA SILME_NUQUERNA URE OSSE SHOOK_BEAUTIFUL AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_4 NUM_5 NUM_8\\n  \\\\class A_TEHTA_INV_L PARMA AHA HWESTA VALA TW_EXT_13 TW_EXT_14 LAMBE ALDA SILME_NUQUERNA_ALT ESSE_NUQUERNA YANTA VALA_W_HOOK NUM_2 NUM_6 NUM_7\\n  \\\\class A_TEHTA_INV_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 SILME ESSE HWESTA_SINDARINWA VAIA MALTA_W_HOOK ANCA_CLOSED NUM_3 NUM_9\\n\\\\end\\n\\n\\\\beg virtual A_TEHTA_CIRCUM_REVERSED TEHTA_BREVE\\n  \\\\class THSUP_TICK_XS TELCO ARA HALLA HYARMEN HARP_SHAPED NUM_10 NUM_11\\n  \\\\class THSUP_TICK_S TINCO CALMA QUESSE SULE FORMEN ORE ANNA VILYA TW_EXT_11 TW_EXT_12 ROMEN ARDA SILME_NUQUERNA URE OSSE SHOOK_BEAUTIFUL AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_4 NUM_5 NUM_8\\n  \\\\class THSUP_TICK_L PARMA AHA HWESTA VALA TW_EXT_13 TW_EXT_14 LAMBE ALDA SILME_NUQUERNA_ALT ESSE_NUQUERNA YANTA VALA_W_HOOK NUM_2 NUM_6 NUM_7\\n  \\\\class THSUP_TICK_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 SILME ESSE HWESTA_SINDARINWA VAIA MALTA_W_HOOK ANCA_CLOSED NUM_3 NUM_9\\n\\\\end\\n\\n\\\\beg virtual E_TEHTA\\n  \\\\class E_TEHTA_XS TELCO ARA HALLA HYARMEN HARP_SHAPED NUM_10 NUM_11\\n  \\\\class E_TEHTA_S TINCO CALMA QUESSE SULE FORMEN ORE ANNA VILYA TW_EXT_11 TW_EXT_12 ROMEN ARDA SILME_NUQUERNA ESSE_NUQUERNA URE OSSE SHOOK_BEAUTIFUL AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_4 NUM_5 NUM_8\\n  \\\\class E_TEHTA_L PARMA AHA HWESTA VALA TW_EXT_13 TW_EXT_14 LAMBE ALDA SILME_NUQUERNA_ALT YANTA VALA_W_HOOK NUM_2 NUM_6 NUM_7\\n  \\\\class E_TEHTA_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 SILME ESSE HWESTA_SINDARINWA VAIA MALTA_W_HOOK ANCA_CLOSED NUM_3 NUM_9\\n\\\\end\\n\\n\\\\beg virtual E_TEHTA_GRAVE\\n  \\\\class E_TEHTA_GRAVE_XS TELCO ARA HALLA HYARMEN HARP_SHAPED AHA_TINCO HWESTA_TINCO NUM_4 NUM_10 NUM_11\\n  \\\\class E_TEHTA_GRAVE_S TINCO CALMA QUESSE SULE FORMEN ORE ANNA VILYA TW_EXT_11 TW_EXT_12 ROMEN ARDA SILME_NUQUERNA ESSE_NUQUERNA URE OSSE SHOOK_BEAUTIFUL NUM_0 NUM_1 NUM_5 NUM_8\\n  \\\\class E_TEHTA_GRAVE_L PARMA AHA HWESTA VALA TW_EXT_13 TW_EXT_14 LAMBE ALDA SILME_NUQUERNA_ALT YANTA VALA_W_HOOK NUM_2 NUM_7\\n  \\\\class E_TEHTA_GRAVE_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 SILME ESSE HWESTA_SINDARINWA VAIA MALTA_W_HOOK ANCA_CLOSED NUM_3 NUM_6 NUM_9\\n\\\\end\\n\\n\\\\beg virtual I_TEHTA\\n  \\\\class I_TEHTA_XS TELCO ARA HALLA HYARMEN HARP_SHAPED NUM_10 NUM_11\\n  \\\\class I_TEHTA_S TINCO CALMA QUESSE SULE FORMEN ORE ANNA VILYA TW_EXT_11 TW_EXT_12 ROMEN ARDA SILME_NUQUERNA ESSE_NUQUERNA URE OSSE SHOOK_BEAUTIFUL AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_4 NUM_5 NUM_8\\n  \\\\class I_TEHTA_L PARMA AHA HWESTA VALA TW_EXT_13 TW_EXT_14 LAMBE ALDA SILME_NUQUERNA_ALT YANTA VALA_W_HOOK NUM_2 NUM_6 NUM_7\\n  \\\\class I_TEHTA_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 SILME ESSE HWESTA_SINDARINWA VAIA MALTA_W_HOOK ANCA_CLOSED NUM_3 NUM_9\\n\\\\end\\n\\n\\\\beg virtual O_TEHTA\\n  \\\\class O_TEHTA_XS TELCO ARA HALLA HYARMEN HARP_SHAPED NUM_0 NUM_1 NUM_10 NUM_11\\n  \\\\class O_TEHTA_S TINCO PARMA CALMA QUESSE SULE FORMEN ORE VALA ANNA VILYA TW_EXT_11 TW_EXT_12 ROMEN ARDA SILME_NUQUERNA ESSE_NUQUERNA YANTA URE OSSE VALA_W_HOOK SHOOK_BEAUTIFUL AHA_TINCO HWESTA_TINCO NUM_2 NUM_4 NUM_5 NUM_8\\n  \\\\class O_TEHTA_L AHA HWESTA TW_EXT_13 TW_EXT_14 LAMBE ALDA SILME_NUQUERNA_ALT VAIA NUM_3 NUM_6 NUM_7\\n  \\\\class O_TEHTA_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 SILME ESSE HWESTA_SINDARINWA MALTA_W_HOOK ANCA_CLOSED NUM_9\\n\\\\end\\n\\n\\\\beg virtual U_TEHTA\\n  \\\\class U_TEHTA_XS TELCO ARA HALLA HYARMEN HARP_SHAPED NUM_0 NUM_1 NUM_10 NUM_11\\n  \\\\class U_TEHTA_S TINCO PARMA CALMA QUESSE SULE FORMEN ORE VALA ANNA VILYA TW_EXT_11 TW_EXT_12 ROMEN ARDA SILME_NUQUERNA ESSE_NUQUERNA YANTA URE OSSE VALA_W_HOOK SHOOK_BEAUTIFUL AHA_TINCO HWESTA_TINCO NUM_2 NUM_4 NUM_5 NUM_8\\n  \\\\class U_TEHTA_L AHA HWESTA TW_EXT_13 TW_EXT_14 LAMBE ALDA SILME_NUQUERNA_ALT VAIA NUM_6 NUM_7\\n  \\\\class U_TEHTA_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 SILME ESSE HWESTA_SINDARINWA MALTA_W_HOOK ANCA_CLOSED NUM_3 NUM_9\\n\\\\end\\n\\n\\\\beg virtual WA_TEHTA SEV_TEHTA\\n  \\\\class WA_TEHTA_XS TELCO ARA HALLA HYARMEN HARP_SHAPED NUM_10 NUM_11\\n  \\\\class WA_TEHTA_S SULE FORMEN ORE ANNA TW_EXT_11 TW_EXT_12 ROMEN ARDA URE OSSE SHOOK_BEAUTIFUL AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_4 NUM_8\\n  \\\\class WA_TEHTA_L TINCO PARMA CALMA QUESSE AHA HWESTA VALA VILYA TW_EXT_13 TW_EXT_14 LAMBE ALDA SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA YANTA VALA_W_HOOK NUM_2 NUM_5\\n  \\\\class WA_TEHTA_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 SILME ESSE HWESTA_SINDARINWA VAIA MALTA_W_HOOK ANCA_CLOSED NUM_3 NUM_6 NUM_7 NUM_9\\n\\\\end\\n\\n\\\\beg virtual A_TEHTA_DOUBLE\\n  \\\\class A_TEHTA_DOUBLE_XS TELCO ARA HALLA HYARMEN HARP_SHAPED NUM_10 NUM_11\\n  \\\\class A_TEHTA_DOUBLE_S TINCO PARMA CALMA QUESSE SULE FORMEN ORE ANNA TW_EXT_11 TW_EXT_12 ROMEN ARDA SILME_NUQUERNA SILME_NUQUERNA_ALT URE OSSE SHOOK_BEAUTIFUL AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_4 NUM_5 NUM_8\\n  \\\\class A_TEHTA_DOUBLE_L AHA HWESTA VALA VILYA TW_EXT_13 TW_EXT_14 LAMBE ALDA ESSE_NUQUERNA YANTA VALA_W_HOOK NUM_2 NUM_6 NUM_7\\n  \\\\class A_TEHTA_DOUBLE_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 SILME ESSE HWESTA_SINDARINWA VAIA MALTA_W_HOOK ANCA_CLOSED NUM_3 NUM_9\\n\\\\end\\n\\n\\\\beg virtual E_TEHTA_DOUBLE\\n  \\\\class E_TEHTA_DOUBLE_XS TELCO ARA HALLA HYARMEN HARP_SHAPED NUM_10 NUM_11\\n  \\\\class E_TEHTA_DOUBLE_S TINCO PARMA CALMA QUESSE SULE FORMEN ORE ANNA TW_EXT_11 TW_EXT_12 ROMEN ARDA SILME_NUQUERNA SILME_NUQUERNA_ALT URE OSSE VALA_W_HOOK SHOOK_BEAUTIFUL AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_4 NUM_5 NUM_8\\n  \\\\class E_TEHTA_DOUBLE_L AHA HWESTA VALA VILYA TW_EXT_13 TW_EXT_14 LAMBE ALDA ESSE_NUQUERNA YANTA VAIA NUM_2 NUM_6 NUM_7\\n  \\\\class E_TEHTA_DOUBLE_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 SILME ESSE HWESTA_SINDARINWA MALTA_W_HOOK ANCA_CLOSED NUM_3 NUM_9\\n\\\\end\\n\\n\\\\beg virtual I_TEHTA_DOUBLE Y_TEHTA\\n  \\\\class I_TEHTA_DOUBLE_XS TELCO ARA HALLA HYARMEN HARP_SHAPED NUM_4 NUM_10 NUM_11\\n  \\\\class I_TEHTA_DOUBLE_S TINCO PARMA CALMA QUESSE SULE FORMEN ORE ANNA TW_EXT_11 TW_EXT_12 ROMEN ARDA SILME_NUQUERNA SILME_NUQUERNA_ALT URE OSSE SHOOK_BEAUTIFUL AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_5 NUM_8\\n  \\\\class I_TEHTA_DOUBLE_L AHA HWESTA VALA VILYA TW_EXT_13 TW_EXT_14 LAMBE ALDA ESSE_NUQUERNA YANTA VALA_W_HOOK NUM_2 NUM_6 NUM_7\\n  \\\\class I_TEHTA_DOUBLE_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 SILME ESSE HWESTA_SINDARINWA VAIA MALTA_W_HOOK ANCA_CLOSED NUM_3 NUM_9\\n\\\\end\\n\\n\\\\beg virtual O_TEHTA_DOUBLE\\n  \\\\class O_TEHTA_DOUBLE_XS TELCO ARA HALLA HYARMEN HARP_SHAPED NUM_0 NUM_1 NUM_4 NUM_10 NUM_11\\n  \\\\class O_TEHTA_DOUBLE_S TINCO PARMA CALMA QUESSE SULE FORMEN ORE ANNA TW_EXT_11 TW_EXT_12 ROMEN ARDA SILME_NUQUERNA SILME_NUQUERNA_ALT URE OSSE VALA_W_HOOK SHOOK_BEAUTIFUL AHA_TINCO HWESTA_TINCO NUM_5 NUM_8\\n  \\\\class O_TEHTA_DOUBLE_L AHA HWESTA VALA VILYA TW_EXT_13 TW_EXT_14 LAMBE ALDA ESSE_NUQUERNA YANTA VAIA NUM_2 NUM_6 NUM_7\\n  \\\\class O_TEHTA_DOUBLE_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 SILME ESSE HWESTA_SINDARINWA MALTA_W_HOOK ANCA_CLOSED NUM_3 NUM_9\\n\\\\end\\n\\n\\\\beg virtual U_TEHTA_DOUBLE\\n  \\\\class U_TEHTA_DOUBLE_XS TELCO ARA HALLA HYARMEN HARP_SHAPED NUM_0 NUM_1 NUM_4 NUM_10 NUM_11\\n  \\\\class U_TEHTA_DOUBLE_S TINCO PARMA CALMA QUESSE SULE FORMEN ORE ANNA TW_EXT_11 TW_EXT_12 ROMEN ARDA SILME SILME_NUQUERNA SILME_NUQUERNA_ALT URE OSSE VALA_W_HOOK SHOOK_BEAUTIFUL AHA_TINCO HWESTA_TINCO NUM_5 NUM_8\\n  \\\\class U_TEHTA_DOUBLE_L AHA HWESTA VALA VILYA TW_EXT_13 TW_EXT_14 LAMBE ALDA ESSE_NUQUERNA YANTA VAIA NUM_2 NUM_6 NUM_7\\n  \\\\class U_TEHTA_DOUBLE_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 ESSE HWESTA_SINDARINWA MALTA_W_HOOK ANCA_CLOSED NUM_3 NUM_9\\n\\\\end\\n\\n\\\\beg virtual A_TEHTA_INF\\n  \\\\class THINF_TDOT_XS TELCO ARA HALLA ROMEN ARDA SILME_NUQUERNA SILME_NUQUERNA_ALT HARP_SHAPED\\n  \\\\class THINF_TDOT_S TINCO PARMA TW_EXT_11 TW_EXT_12 SILME URE OSSE SHOOK_BEAUTIFUL AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_4 NUM_8 NUM_10 NUM_11\\n  \\\\class THINF_TDOT_L CALMA QUESSE SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA TW_EXT_13 TW_EXT_14 LAMBE ALDA ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA YANTA VAIA VALA_W_HOOK NUM_2 NUM_5 NUM_7\\n  \\\\class THINF_TDOT_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 MALTA_W_HOOK ANCA_CLOSED NUM_3 NUM_6 NUM_9\\n\\\\end\\n\\n\\\\beg virtual E_TEHTA_INF\\n  \\\\class THINF_ACCENT_XS TELCO ARA HALLA ROMEN ARDA SILME_NUQUERNA SILME_NUQUERNA_ALT HARP_SHAPED\\n  \\\\class THINF_ACCENT_S TINCO PARMA TW_EXT_11 TW_EXT_12 SILME URE OSSE SHOOK_BEAUTIFUL AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_4 NUM_8 NUM_11\\n  \\\\class THINF_ACCENT_L CALMA QUESSE SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA TW_EXT_13 TW_EXT_14 LAMBE ALDA ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA YANTA VAIA VALA_W_HOOK NUM_2 NUM_7 NUM_10\\n  \\\\class THINF_ACCENT_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 MALTA_W_HOOK ANCA_CLOSED NUM_3 NUM_5 NUM_6 NUM_9\\n\\\\end\\n\\n\\\\beg virtual E_TEHTA_GRAVE_INF\\n  \\\\class E_TEHTA_GRAVE_INF_XS TELCO ARA HALLA ROMEN ARDA SILME_NUQUERNA SILME_NUQUERNA_ALT SHOOK_BEAUTIFUL HARP_SHAPED AHA_TINCO HWESTA_TINCO\\n  \\\\class E_TEHTA_GRAVE_INF_S SULE FORMEN AHA HWESTA ORE VALA TW_EXT_13 TW_EXT_14 HYARMEN HWESTA_SINDARINWA YANTA URE VAIA NUM_2 NUM_4 NUM_11\\n  \\\\class E_TEHTA_GRAVE_INF_L TINCO PARMA ANNA VILYA TW_EXT_11 TW_EXT_12 LAMBE ALDA SILME ESSE ESSE_NUQUERNA OSSE NUM_0 NUM_1 NUM_7 NUM_8 NUM_10\\n  \\\\class E_TEHTA_GRAVE_INF_XL CALMA QUESSE ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 MALTA_W_HOOK VALA_W_HOOK ANCA_CLOSED NUM_3 NUM_5 NUM_6 NUM_9\\n\\\\end\\n\\n\\\\beg virtual CIRC_TEHTA_INF\\n  \\\\class TH_SUB_CIRC_XS TELCO ARA HALLA TINCO PARMA SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA TW_EXT_11 TW_EXT_12 ROMEN ARDA SILME SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA YANTA URE OSSE SHOOK_BEAUTIFUL HARP_SHAPED AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_4 NUM_7 NUM_8 NUM_10 NUM_11\\n  \\\\class TH_SUB_CIRC_S CALMA QUESSE TW_EXT_13 TW_EXT_14 LAMBE ALDA VAIA NUM_2 NUM_5\\n  \\\\class TH_SUB_CIRC_L VALA_W_HOOK NUM_3\\n  \\\\class TH_SUB_CIRC_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 MALTA_W_HOOK ANCA_CLOSED NUM_6 NUM_9\\n\\\\end\\n\\n\\\\beg virtual THINNAS  THINF_STROKE\\n  \\\\class THINF_STROKE_XS TELCO ARA HALLA SILME_NUQUERNA SILME_NUQUERNA_ALT SHOOK_BEAUTIFUL\\n  \\\\class THINF_STROKE_S TINCO PARMA TW_EXT_11 TW_EXT_12 ROMEN ARDA SILME ESSE URE OSSE HARP_SHAPED AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_4 NUM_7 NUM_10 NUM_11\\n  \\\\class THINF_STROKE_L CALMA QUESSE SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA TW_EXT_13 TW_EXT_14 LAMBE ALDA ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA YANTA VAIA VALA_W_HOOK NUM_2 NUM_5 NUM_8\\n  \\\\class THINF_STROKE_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 MALTA_W_HOOK ANCA_CLOSED NUM_3 NUM_6 NUM_9\\n\\\\end\\n\\n\\\\beg virtual O_TEHTA_INF\\n  \\\\class THINF_CURL_XS TELCO ARA HALLA ROMEN ARDA SILME_NUQUERNA SILME_NUQUERNA_ALT SHOOK_BEAUTIFUL\\n  \\\\class THINF_CURL_S TINCO PARMA TW_EXT_11 TW_EXT_12 SILME ESSE ESSE_NUQUERNA URE OSSE HARP_SHAPED AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_4 NUM_7 NUM_8 NUM_10 NUM_11\\n  \\\\class THINF_CURL_L CALMA QUESSE SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA TW_EXT_13 TW_EXT_14 LAMBE ALDA HYARMEN HWESTA_SINDARINWA YANTA VALA_W_HOOK NUM_2 NUM_5\\n  \\\\class THINF_CURL_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 VAIA MALTA_W_HOOK ANCA_CLOSED NUM_3 NUM_6 NUM_9\\n\\\\end\\n\\n\\\\beg virtual U_TEHTA_INF\\n  \\\\class THINF_CURL_INV_XS TELCO ARA HALLA ROMEN ARDA SILME_NUQUERNA SILME_NUQUERNA_ALT SHOOK_BEAUTIFUL HARP_SHAPED AHA_TINCO HWESTA_TINCO\\n  \\\\class THINF_CURL_INV_S TINCO PARMA TW_EXT_11 TW_EXT_12 SILME ESSE ESSE_NUQUERNA URE OSSE NUM_0 NUM_1 NUM_4 NUM_7 NUM_8 NUM_10 NUM_11\\n  \\\\class THINF_CURL_INV_L SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA LAMBE ALDA HYARMEN HWESTA_SINDARINWA YANTA VAIA VALA_W_HOOK NUM_2 NUM_5\\n  \\\\class THINF_CURL_INV_XL CALMA QUESSE ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_13 TW_EXT_14 TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 MALTA_W_HOOK ANCA_CLOSED NUM_3 NUM_6 NUM_9\\n\\\\end\\n\\n\\\\beg virtual PALATAL_SIGN I_TEHTA_DOUBLE_INF Y_TEHTA_INF\\n  \\\\class THINF_DDOT_XS TELCO ARA HALLA ROMEN ARDA SILME_NUQUERNA SHOOK_BEAUTIFUL HARP_SHAPED AHA_TINCO HWESTA_TINCO\\n  \\\\class THINF_DDOT_S TINCO PARMA SULE AHA TW_EXT_11 TW_EXT_12 SILME URE OSSE NUM_0 NUM_1 NUM_8 NUM_10 NUM_11\\n  \\\\class THINF_DDOT_L FORMEN HWESTA ORE VALA ANNA VILYA ESSE HYARMEN HWESTA_SINDARINWA YANTA VAIA VALA_W_HOOK NUM_2 NUM_4 NUM_5\\n  \\\\class THINF_DDOT_XL CALMA QUESSE ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_13 TW_EXT_14 TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 ALDA ESSE_NUQUERNA MALTA_W_HOOK ANCA_CLOSED NUM_3 NUM_6 NUM_9\\n  \\\\class LAMBE_MARK_DDOT LAMBE SILME_NUQUERNA_ALT NUM_7\\n\\\\end\\n\\n\\\\beg virtual E_TEHTA_DOUBLE_INF GEMINATE_DOUBLE\\n  \\\\class THINF_DSTROKE_XS TELCO ARA HALLA ROMEN ARDA SILME_NUQUERNA SHOOK_BEAUTIFUL HARP_SHAPED\\n  \\\\class THINF_DSTROKE_S TINCO PARMA SULE AHA TW_EXT_11 TW_EXT_12 SILME URE OSSE AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_4 NUM_8 NUM_10 NUM_11\\n  \\\\class THINF_DSTROKE_L FORMEN HWESTA ORE VALA ANNA VILYA ESSE HYARMEN HWESTA_SINDARINWA YANTA VAIA VALA_W_HOOK NUM_2 NUM_5 NUM_7\\n  \\\\class THINF_DSTROKE_XL CALMA QUESSE ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_13 TW_EXT_14 TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 ALDA ESSE_NUQUERNA MALTA_W_HOOK ANCA_CLOSED NUM_3 NUM_6 NUM_9\\n  \\\\class LAMBE_MARK_DSTROKE LAMBE SILME_NUQUERNA_ALT\\n\\\\end\\n\\n\\\\beg virtual UNUTIXE I_TEHTA_INF NO_VOWEL_DOT\\n  \\\\class THINF_DOT_XS TELCO ARA HALLA SILME_NUQUERNA SHOOK_BEAUTIFUL HARP_SHAPED\\n  \\\\class THINF_DOT_S TINCO PARMA TW_EXT_11 TW_EXT_12 ROMEN ARDA URE OSSE AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_4 NUM_7 NUM_8 NUM_10 NUM_11\\n  \\\\class THINF_DOT_L SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA TW_EXT_13 TW_EXT_14 SILME ESSE HYARMEN HWESTA_SINDARINWA YANTA VAIA VALA_W_HOOK NUM_2\\n  \\\\class THINF_DOT_XL CALMA QUESSE ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 ALDA ESSE_NUQUERNA MALTA_W_HOOK ANCA_CLOSED NUM_3 NUM_5 NUM_6 NUM_9\\n  \\\\class LAMBE_MARK_DOT LAMBE SILME_NUQUERNA_ALT\\n\\\\end\\n\\n\\\\beg virtual GEMINATE_SIGN\\n  \\\\class DASH_INF_XS TELCO ARA HALLA\\n  \\\\class DASH_INF_S TINCO PARMA CALMA QUESSE SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA TW_EXT_11 TW_EXT_12 TW_EXT_13 TW_EXT_14 ROMEN ARDA SILME SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA YANTA URE OSSE VAIA VALA_W_HOOK SHOOK_BEAUTIFUL HARP_SHAPED NUM_0 NUM_1 NUM_2 NUM_4 NUM_5 NUM_6 NUM_7 NUM_8 NUM_10 NUM_11\\n  \\\\class DASH_INF_L ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 MALTA_W_HOOK ANCA_CLOSED AHA_TINCO HWESTA_TINCO NUM_3 NUM_9\\n  \\\\class LAMBE_MARK_DASH LAMBE ALDA\\n\\\\end\\n\\n\\\\beg virtual GEMINATE_SIGN_TILD\\n  \\\\class TILD_INF_XS TELCO ARA HALLA\\n  \\\\class TILD_INF_S TINCO PARMA CALMA QUESSE SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA TW_EXT_11 TW_EXT_12 TW_EXT_13 TW_EXT_14 ROMEN ARDA SILME SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA YANTA URE OSSE VAIA VALA_W_HOOK SHOOK_BEAUTIFUL HARP_SHAPED NUM_0 NUM_1 NUM_2 NUM_4 NUM_5 NUM_6 NUM_7 NUM_8 NUM_10 NUM_11\\n  \\\\class TILD_INF_L ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 MALTA_W_HOOK ANCA_CLOSED AHA_TINCO HWESTA_TINCO NUM_3 NUM_9\\n  \\\\class LAMBE_MARK_TILD LAMBE ALDA\\n\\\\end\\n\\n\\\\beg virtual NASALIZE_SIGN\\n  \\\\class DASH_SUP_XS TELCO ARA HALLA\\n  \\\\class DASH_SUP_S TINCO PARMA CALMA QUESSE SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA TW_EXT_11 TW_EXT_12 TW_EXT_13 TW_EXT_14 ROMEN ARDA SILME SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA YANTA URE OSSE VAIA VALA_W_HOOK HARP_SHAPED NUM_0 NUM_1 NUM_2 NUM_4 NUM_5 NUM_6 NUM_7 NUM_8 NUM_10 NUM_11\\n  \\\\class DASH_SUP_L ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 LAMBE ALDA MALTA_W_HOOK SHOOK_BEAUTIFUL ANCA_CLOSED AHA_TINCO HWESTA_TINCO NUM_3 NUM_9\\n\\\\end\\n\\n\\\\beg virtual NASALIZE_SIGN_TILD\\n  \\\\class TILD_SUP_XS TELCO ARA HALLA\\n  \\\\class TILD_SUP_S TINCO PARMA CALMA QUESSE SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA TW_EXT_11 TW_EXT_12 TW_EXT_13 TW_EXT_14 ROMEN ARDA SILME SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA YANTA URE OSSE VAIA VALA_W_HOOK HARP_SHAPED NUM_0 NUM_1 NUM_2 NUM_4 NUM_5 NUM_6 NUM_7 NUM_8 NUM_10 NUM_11\\n  \\\\class TILD_SUP_L ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 LAMBE ALDA MALTA_W_HOOK SHOOK_BEAUTIFUL ANCA_CLOSED AHA_TINCO HWESTA_TINCO NUM_3 NUM_9\\n\\\\end\\n\\n\\\\beg virtual SARINCE\\n  \\\\class SHOOK_LEFT_L CALMA QUESSE ANGA UNGWE TW_EXT_13 TW_EXT_14 TW_EXT_23 TW_EXT_24 HWESTA_SINDARINWA VALA_W_HOOK\\n  \\\\class SHOOK_RIGHT_L TELCO ARA HALLA TINCO PARMA ANDO UMBAR SULE FORMEN AHA HWESTA ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME ORE VALA ANNA VILYA TW_EXT_11 TW_EXT_12 TW_EXT_21 TW_EXT_22 ROMEN ARDA LAMBE ALDA SILME SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE ESSE_NUQUERNA HYARMEN YANTA URE OSSE VAIA MALTA_W_HOOK SHOOK_BEAUTIFUL ANCA_CLOSED HARP_SHAPED AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_2 NUM_3 NUM_4 NUM_5 NUM_6 NUM_7 NUM_8 NUM_9 NUM_10 NUM_11\\n\\\\end\\n\"\nGlaemscribe.resource_manager.raw_charsets[\"tengwar_ds_parmaite\"] = \"\\\\**\\n\\nGlǽmscribe (also written Glaemscribe) is a software dedicated to\\nthe transcription of texts between writing systems, and more \\nspecifically dedicated to the transcription of J.R.R. Tolkien\\'s \\ninvented languages to some of his devised writing systems.\\n\\nCopyright (C) 2015 Benjamin Babut (Talagan).\\n\\nThis program is free software: you can redistribute it and/or modify\\nit under the terms of the GNU Affero General Public License as published by\\nthe Free Software Foundation, either version 3 of the License, or\\nany later version.\\n\\nThis program is distributed in the hope that it will be useful,\\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\nGNU Affero General Public License for more details.\\n\\nYou should have received a copy of the GNU Affero General Public License\\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\\n\\n**\\\\\\n\\n\\\\** Charset specially customized for Tengwar Parmaite (Glaemscrafu patched version) **\\\\ \\n\\n\\\\version 0.1.0\\n\\n\\\\beg changelog\\n  \\\\entry \\\"0.0.6\\\" \\\"Added VALA_W_HOOK, VAIYA. Moved A_TEHTA_INV_L due to soft hyphen bug.\\\"\\n  \\\\entry \\\"0.0.6\\\" \\\"Superior and inferior dash and tild consonant modification signs have been added for halla, telco and ara. / Added pustar combinations (4/4-halfed/4-squared/5)\\\"\\n  \\\\entry \\\"0.0.7\\\" \\\"Fixed missing tinco_ext / sule_ext\\\"\\n  \\\\entry \\\"0.0.8\\\" \\\"Added NBSP\\\"  \\n  \\\\entry \\\"0.0.9\\\" \\\"Moved back some chars to latin blocks to avoid word-wrapping problems\\\"  \\n  \\\\entry \\\"0.1.0\\\" \\\"Added ELVISH_PAREN tokien, reworked sarince token names.\\\"\\n\\\\end\\n\\n\\\\**   **\\\\ \\\\char 20 SPACE              \\n\\\\** ! **\\\\ \\\\char 21 TW_EXT_11 TINCO_EXT SULE_EXT THULE_EXT                    \\n\\\\** \\\" **\\\\ \\\\char 22 DASH_INF_L            \\n\\\\** # **\\\\ \\\\char 23 A_TEHTA_XL          \\n\\\\** $ **\\\\ \\\\char 24 E_TEHTA_XL   \\n\\\\** % **\\\\ \\\\char 25 I_TEHTA_XL     \\n\\\\** & **\\\\ \\\\char 26 U_TEHTA_XL        \\n\\\\** \\' **\\\\ \\\\char 27 DASH_INF_S            \\n\\\\** ( **\\\\ \\\\char 28 ?                \\n\\\\** ) **\\\\ \\\\char 29 TILD_XSUP_L           \\n\\\\** * **\\\\ \\\\char 2a ?                \\n\\\\** + **\\\\ \\\\char 2b SARINCE_RIGHT_V1 SHOOK_RIGHT_L          \\n\\\\** , **\\\\ \\\\char 2c TW_84 ESSE_NUQUERNA       \\n\\\\** - **\\\\ \\\\char 2d PUNCT_DDOT            \\n\\\\** . **\\\\ \\\\char 2e TW_94 URE            \\n\\\\** / **\\\\ \\\\char 2f TILD_XINF_S           \\n\\\\** 0 **\\\\ \\\\char 30 TILD_XSUP_S           \\n\\\\** 1 **\\\\ \\\\char 31 TW_11 TINCO           \\n\\\\** 2 **\\\\ \\\\char 32 TW_21 ANDO           \\n\\\\** 3 **\\\\ \\\\char 33 TW_31 SULE THULE        \\n\\\\** 4 **\\\\ \\\\char 34 TW_41 ANTO           \\n\\\\** 5 **\\\\ \\\\char 35 TW_51 NUMEN           \\n\\\\** 6 **\\\\ \\\\char 36 TW_61 ORE            \\n\\\\** 7 **\\\\ \\\\char 37 TW_71 ROMEN           \\n\\\\** 8 **\\\\ \\\\char 38 TW_81 SILME           \\n\\\\** 9 **\\\\ \\\\char 39 TW_91 HYARMEN          \\n\\\\** : **\\\\ \\\\char 3a TILD_INF_L            \\n\\\\** ; **\\\\ \\\\char 3b TILD_INF_S            \\n\\\\** < **\\\\ \\\\char 3c ?  \\\\** Does not look compliant between DS and Annatar **\\\\\\n\\\\** = **\\\\ \\\\char 3d PUNCT_DOT            \\n\\\\** > **\\\\ \\\\char 3e ?                \\n\\\\** ? **\\\\ \\\\char 3f TILD_XINF_L           \\n\\\\** @ **\\\\ \\\\char 40 TW_EXT_21 ANDO_EXT ANTO_EXT            \\n\\\\** A **\\\\ \\\\char 41 TW_EXT_13 CALMA_EXT AHA_EXT            \\n\\\\** B **\\\\ \\\\char 42 I_TEHTA_XS     \\n\\\\** C **\\\\ \\\\char 43 A_TEHTA_XS          \\n\\\\** D **\\\\ \\\\char 44 A_TEHTA_S           \\n\\\\** E **\\\\ \\\\char 45 A_TEHTA_L           \\n\\\\** F **\\\\ \\\\char 46 E_TEHTA_S    \\n\\\\** G **\\\\ \\\\char 47 I_TEHTA_S           \\n\\\\** H **\\\\ \\\\char 48 O_TEHTA_S           \\n\\\\** I **\\\\ \\\\char 49 SILME_NUQUERNA_ALT \\\\** Used for y in s. beleriand **\\\\                \\n\\\\** J **\\\\ \\\\char 4a U_TEHTA_S         \\n\\\\** K **\\\\ \\\\char 4b ?                \\n\\\\** L **\\\\ \\\\char 4c LAMBE_MARK_DOT                \\n\\\\** M **\\\\ \\\\char 4d U_TEHTA_XS        \\n\\\\** N **\\\\ \\\\char 4e O_TEHTA_XS          \\n\\\\** O **\\\\ \\\\char 4f ?                \\n\\\\** P **\\\\ \\\\char 50 TILD_SUP_L            \\n\\\\** Q **\\\\ \\\\char 51 TW_EXT_12 PARMA_EXT FORMEN_EXT            \\n\\\\** R **\\\\ \\\\char 52 E_TEHTA_L          \\n\\\\** S **\\\\ \\\\char 53 TW_EXT_23 ANGA_EXT ANCA_EXT            \\n\\\\** T **\\\\ \\\\char 54 I_TEHTA_L           \\n\\\\** U **\\\\ \\\\char 55 U_TEHTA_L         \\n\\\\** V **\\\\ \\\\char 56 E_TEHTA_XS         \\n\\\\** W **\\\\ \\\\char 57 TW_EXT_22 UMBAR_EXT AMPA_EXT            \\n\\\\** X **\\\\ \\\\char 58 TW_EXT_24 UNQUE_EXT UNGWE_EXT            \\n\\\\** Y **\\\\ \\\\char 59 O_TEHTA_L           \\n\\\\** Z **\\\\ \\\\char 5a TW_EXT_14 QUESSE_EXT HWESTA_EXT            \\n\\\\** [ **\\\\ \\\\char 5b DASH_SUP_S            \\n\\\\** \\\\ **\\\\ \\\\char 5c TILD_L              \\n\\\\** ] **\\\\ \\\\char 5d OSSE               \\n\\\\** ^ **\\\\ \\\\char 5e O_TEHTA_XL          \\n\\\\** _ **\\\\ \\\\char 5f SARINCE_RIGHT_V2 SHOOK_RIGHT_S          \\n\\\\** ` **\\\\ \\\\char 60 TELCO              \\n\\\\** a **\\\\ \\\\char 61 TW_13 CALMA          \\n\\\\** b **\\\\ \\\\char 62 TW_54 NWALME          \\n\\\\** c **\\\\ \\\\char 63 TW_34 HWESTA          \\n\\\\** d **\\\\ \\\\char 64 TW_33 AHA           \\n\\\\** e **\\\\ \\\\char 65 TW_32 FORMEN          \\n\\\\** f **\\\\ \\\\char 66 TW_43 ANCA           \\n\\\\** g **\\\\ \\\\char 67 TW_53 NOLDO          \\n\\\\** h **\\\\ \\\\char 68 TW_63 ANNA           \\n\\\\** i **\\\\ \\\\char 69 TW_82 SILME_NUQUERNA      \\n\\\\** j **\\\\ \\\\char 6a TW_73 LAMBE          \\n\\\\** k **\\\\ \\\\char 6b TW_83 ESSE           \\n\\\\** l **\\\\ \\\\char 6c TW_93 YANTA          \\n\\\\** m **\\\\ \\\\char 6d TW_74 ALDA           \\n\\\\** n **\\\\ \\\\char 6e TW_64 VILYA          \\n\\\\** o **\\\\ \\\\char 6f TW_92 HWESTA_SINDARINWA    \\n\\\\** p **\\\\ \\\\char 70 TILD_SUP_S           \\n\\\\** q **\\\\ \\\\char 71 TW_12 PARMA          \\n\\\\** r **\\\\ \\\\char 72 TW_42 AMPA           \\n\\\\** s **\\\\ \\\\char 73 TW_23 ANGA           \\n\\\\** t **\\\\ \\\\char 74 TW_52 MALTA          \\n\\\\** u **\\\\ \\\\char 75 TW_72 ARDA           \\n\\\\** v **\\\\ \\\\char 76 TW_44 UNQUE          \\n\\\\** w **\\\\ \\\\char 77 TW_22 UMBAR          \\n\\\\** x **\\\\ \\\\char 78 TW_24 UNGWE          \\n\\\\** y **\\\\ \\\\char 79 TW_62 VALA           \\n\\\\** z **\\\\ \\\\char 7a TW_14 QUESSE          \\n\\\\** { **\\\\ \\\\char 7b DASH_SUP_L           \\n\\\\** | **\\\\ \\\\char 7c SARINCE_LEFT_V1 SHOOK_LEFT_L          \\n\\\\** } **\\\\ \\\\char 7d SARINCE_LEFT_V2 SHOOK_LEFT_S          \\n\\\\** ~ **\\\\ \\\\char 7e ARA              \\n\\\\char a0 NBSP \\n\\\\** ¡ **\\\\ \\\\char a1 SARINCE_SEMI_ASCENDING_V1               \\n\\\\** ¢ **\\\\ \\\\char a2 SARINCE_RIGHT_V3                        \\n\\\\** £ **\\\\ \\\\char a3 SARINCE_FLOURISHED_V1 SARINCE_FLOURISHED SHOOK_BEAUTIFUL                \\n\\\\** ¥ **\\\\ \\\\char a5 SARINCE_FLOURISHED_V2                 \\n\\\\** ¦ **\\\\ \\\\char a6 HWESTA_TINCO                \\n\\\\** § **\\\\ \\\\char a7 AHA_TINCO                \\n\\\\** ¨ **\\\\ \\\\char a8 TH_SUB_CIRC_S          \\n\\\\** © **\\\\ \\\\char a9 TH_SUB_CIRC_XS          \\n\\\\** ª **\\\\ \\\\char aa A_TEHTA_INV_XL        \\n\\\\** « **\\\\ \\\\char ab DQUOT_OPEN            \\n\\\\** ¬ **\\\\ \\\\char ac PUNCT_DTILD RING_MARK_L RING_MARK_R              \\n     \\n\\\\** ® **\\\\ \\\\char ae NUM_12                \\n\\\\** ¯ **\\\\ \\\\char af A_TEHTA_INV_S         \\n\\\\** ° **\\\\ \\\\char b0 LAMBE_MARK_TILD                 \\n\\\\** ± **\\\\ \\\\char b1 SQUOT_OPEN            \\n\\\\** ² **\\\\ \\\\char b2 SQUOT_CLOSE           \\n\\\\** ³ **\\\\ \\\\char b3 ?                \\n\\\\** ´ **\\\\ \\\\char b4 LAMBE_MARK_DDOT         \\n\\\\** µ **\\\\ \\\\char b5 A_TEHTA_INV_XS        \\n\\\\** · **\\\\ \\\\char b7 ?                \\n\\\\** ¸ **\\\\ \\\\char b8 LAMBE_MARK_DASH         \\n\\\\** ¹ **\\\\ \\\\char b9 ?                \\n\\\\** º **\\\\ \\\\char ba ?                \\n\\\\** » **\\\\ \\\\char bb DQUOT_CLOSE           \\n\\\\** ¼ **\\\\ \\\\char bc LIGATING_SHORT_CARRIER                \\n\\\\** ½ **\\\\ \\\\char bd HALLA              \\n\\\\** ¾ **\\\\ \\\\char be BOMBADIL_W                \\n\\\\** ¿ **\\\\ \\\\char bf ?                \\n\\\\** À **\\\\ \\\\char c0 PUNCT_INTERR           \\n\\\\** Á **\\\\ \\\\char c1 PUNCT_EXCLAM           \\n\\\\** Â **\\\\ \\\\char c2 PUNCT_TILD            \\n\\\\** Ã **\\\\ \\\\char c3 ?                \\n\\\\** Ä **\\\\ \\\\char c4 ?                \\n\\\\** Å **\\\\ \\\\char c5 SARINCE_ASCENDING_V1                \\n\\\\** Æ **\\\\ \\\\char c6 SARINCE_ASCENDING_V3                \\n\\\\** Ç **\\\\ \\\\char c7 SARINCE_DESCENDING_V1                   \\n\\\\** È **\\\\ \\\\char c8 THINF_DOT_XL           \\n\\\\** É **\\\\ \\\\char c9 THINF_DOT_L           \\n\\\\** Ê **\\\\ \\\\char ca THINF_DOT_S           \\n\\\\** Ë **\\\\ \\\\char cb THINF_DOT_XS           \\n\\\\** Ì **\\\\ \\\\char cc THINF_DDOT_XL          \\n\\\\** Í **\\\\ \\\\char cd THINF_DDOT_L           \\n\\\\** Î **\\\\ \\\\char ce THINF_DDOT_S           \\n\\\\** Ï **\\\\ \\\\char cf THINF_DDOT_XS          \\n\\\\** Ð **\\\\ \\\\char d0 THINF_TDOT_XL          \\n\\\\** Ñ **\\\\ \\\\char d1 THINF_TDOT_L           \\n\\\\** Ò **\\\\ \\\\char d2 THINF_TDOT_S           \\n\\\\** Ó **\\\\ \\\\char d3 THINF_TDOT_XS          \\n\\\\** Ô **\\\\ \\\\char d4 THSUP_DDOT_XL Y_TEHTA_XL I_TEHTA_DOUBLE_XL         \\n\\\\** Õ **\\\\ \\\\char d5 THSUP_DDOT_L Y_TEHTA_L I_TEHTA_DOUBLE_L       \\n\\\\** Ö **\\\\ \\\\char d6 THSUP_DDOT_S Y_TEHTA_S I_TEHTA_DOUBLE_S          \\n\\\\** × **\\\\ \\\\char d7 THSUP_DDOT_XS Y_TEHTA_XS I_TEHTA_DOUBLE_XS         \\n\\\\** Ø **\\\\ \\\\char d8 THSUP_TICK_XL           \\n\\\\** Ù **\\\\ \\\\char d9 THSUP_TICK_L           \\n\\\\** Ú **\\\\ \\\\char da THSUP_TICK_S           \\n\\\\** Û **\\\\ \\\\char db THSUP_TICK_XS          \\n\\\\** Ü **\\\\ \\\\char dc THSUP_TICK_INV_XL A_TEHTA_CIRCUM_XL       \\n\\\\** Ý **\\\\ \\\\char dd THSUP_TICK_INV_L A_TEHTA_CIRCUM_L        \\n\\\\** Þ **\\\\ \\\\char de THSUP_TICK_INV_S A_TEHTA_CIRCUM_S         \\n\\\\** ß **\\\\ \\\\char df THSUP_TICK_INV_XS A_TEHTA_CIRCUM_XS       \\n\\\\** à **\\\\ \\\\char e0 THSUP_LAMBDA_XL         \\n\\\\** á **\\\\ \\\\char e1 THSUP_LAMBDA_L          \\n\\\\** â **\\\\ \\\\char e2 THSUP_LAMBDA_S          \\n\\\\** ã **\\\\ \\\\char e3 THSUP_LAMBDA_XS         \\n\\\\** ä **\\\\ \\\\char e4 THINF_CURL_XL          \\n\\\\** å **\\\\ \\\\char e5 THINF_CURL_L           \\n\\\\** æ **\\\\ \\\\char e6 THINF_CURL_S           \\n\\\\** ç **\\\\ \\\\char e7 THINF_CURL_XS          \\n\\\\** è **\\\\ \\\\char e8 WA_TEHTA_XL           \\n\\\\** é **\\\\ \\\\char e9 WA_TEHTA_L           \\n\\\\** ê **\\\\ \\\\char ea WA_TEHTA_S           \\n\\\\** ë **\\\\ \\\\char eb WA_TEHTA_XS           \\n\\\\** ì **\\\\ \\\\char ec ?                                 \\n\\\\** í **\\\\ \\\\char ed ?                                 \\n\\\\** î **\\\\ \\\\char ee ?                                 \\n\\\\** ï **\\\\ \\\\char ef ?                                 \\n\\\\** ð **\\\\ \\\\char f0 NUM_0                               \\n\\\\** ñ **\\\\ \\\\char f1 NUM_1                               \\n\\\\** ò **\\\\ \\\\char f2 NUM_2                               \\n\\\\** ó **\\\\ \\\\char f3 NUM_3                               \\n\\\\** ô **\\\\ \\\\char f4 NUM_4                               \\n\\\\** õ **\\\\ \\\\char f5 NUM_5                               \\n\\\\** ö **\\\\ \\\\char f6 NUM_6                               \\n\\\\** ÷ **\\\\ \\\\char f7 NUM_7                               \\n\\\\** ø **\\\\ \\\\char f8 NUM_8                               \\n\\\\** ù **\\\\ \\\\char f9 NUM_9                               \\n\\\\** ú **\\\\ \\\\char fa NUM_10                               \\n\\\\** û **\\\\ \\\\char fb NUM_11                               \\n\\\\** ü **\\\\ \\\\char fc THINF_STROKE_XL                                 \\n\\\\** ý **\\\\ \\\\char fd THINF_STROKE_L                                 \\n\\\\** þ **\\\\ \\\\char fe THINF_STROKE_S                                 \\n\\\\** ÿ **\\\\ \\\\char ff THINF_STROKE_XS      \\n\\n\\\\** FIX FOR SOFT HYPHEN **\\\\\\n\\\\char 109 A_TEHTA_INV_L\\n\\n\\\\char 10C O_TEHTA_DOUBLE_XL\\n\\\\char 10D O_TEHTA_DOUBLE_L\\n\\\\char 10E O_TEHTA_DOUBLE_S\\n\\\\char 10F O_TEHTA_DOUBLE_XS\\n\\n\\\\** USING TENGWAR ELFICA POS TO AVOID PROBLEMS **\\\\\\n\\\\char 125 VAIA WAIA VAIYA\\n                           \\n                      \\n\\\\char 160 THINF_ACCENT_L                                 \\n\\\\char 161 MALTA_W_HOOK TW_MH                                \\n\\\\char 178 THINF_ACCENT_XS             \\n\\n\\\\char 180 VALA_W_HOOK TW_MH_BELERIANDIC                      \\n\\n\\\\char 181 PUSTA_4\\n\\\\char 182 PUSTA_5\\n\\n\\\\char 192 THINF_DSTROKE_XL          \\n\\n\\\\char 19C A_TEHTA_DOUBLE_XL\\n\\\\char 19D A_TEHTA_DOUBLE_L\\n\\\\char 19E A_TEHTA_DOUBLE_S\\n\\\\char 19F A_TEHTA_DOUBLE_XS\\n\\n\\\\char 1A0 E_TEHTA_DOUBLE_XL\\n\\\\char 1A1 E_TEHTA_DOUBLE_L\\n\\\\char 1A2 E_TEHTA_DOUBLE_S\\n\\\\char 1A3 E_TEHTA_DOUBLE_XS\\n\\n\\\\char 1A4 U_TEHTA_DOUBLE_XL\\n\\\\char 1A5 U_TEHTA_DOUBLE_L\\n\\\\char 1A6 U_TEHTA_DOUBLE_S\\n\\\\char 1A7 U_TEHTA_DOUBLE_XS\\n\\n\\n\\\\char 200 DASH_INF_XS\\n\\\\char 201 TILD_INF_XS\\n\\\\char 202 DASH_SUP_XS\\n\\\\char 203 TILD_SUP_XS\\n\\n\\\\** Non attested but might exist by principle. Beware, order is revesed. **\\\\\\n\\\\char 20C E_TEHTA_GRAVE_INF_XS\\n\\\\char 20D E_TEHTA_GRAVE_INF_L\\n\\\\char 20E E_TEHTA_GRAVE_INF_S\\n\\\\char 20F E_TEHTA_GRAVE_INF_XL\\n\\n\\n\\\\char 2C2 PUNCT_PAREN_L  PUNCT_PAREN_L_ALT                           \\n\\\\char 2C3 PUNCT_PAREN_R  PUNCT_PAREN_R_ALT   \\n\\n\\n\\\\char 2c6 PUNCT_TDOT PUSTA_3                                \\n\\\\char 2dc TH_SUB_CIRC_XL \\n\\n\\\\char 10FB PUSTA_4_HALFED\\n\\\\char 2E2C PUSTA_4_SQUARED\\n                                                      \\n\\\\char 2013 ANCA_CLOSED SILME_AHA                                \\n\\\\char 2014 OLD_ENGLISH_AND                                \\n\\\\char 2018 THINF_CURL_INV_XL                                \\n\\\\char 2019 THINF_CURL_INV_L                                \\n\\\\char 201a LAMBE_MARK_DSTROKE                                \\n\\\\char 201c THINF_CURL_INV_S                                \\n\\\\char 201d THINF_CURL_INV_XS                                \\n\\\\char 201e THINF_DSTROKE_L                                \\n\\\\char 2020 THINF_DSTROKE_XS                                \\n\\\\char 2021 ?                                \\n\\\\char 2022 TW_HW_LOWDHAM HARP_SHAPED                                \\n\\\\char 2026 THINF_DSTROKE_S                                \\n\\\\char 2030 THINF_ACCENT_XL                                \\n\\\\char 2039 THINF_ACCENT_S                                \\n\\\\char 203a ELVISH_PAREN BOOKMARK_SIGN                                \\n\\\\char 2122 TH_SUB_CIRC_L       \\n\\n\\\\char 2FFC E_TEHTA_GRAVE_XL\\n\\\\char 2FFD E_TEHTA_GRAVE_XS\\n\\\\char 2FFE E_TEHTA_GRAVE_L\\n\\\\char 2FFF E_TEHTA_GRAVE_S\\n\\n\\\\char 30BF BOMBADIL_HW\\n\\\\char 30C4 CHRISTOPHER_QU\\n\\n\\\\char 30D8 BREVE_TEHTA_XL\\n\\\\char 30D9 BREVE_TEHTA_L \\n\\\\char 30DA BREVE_TEHTA_S \\n\\\\char 30DB BREVE_TEHTA_XS\\n\\n                    \\n\\\\** The following virtual chars are used to handle tehtar (& the like) multiple version chosing **\\\\\\n\\\\** It could be avoided with modern fonts with gsub/gpos tables for ligatures and diacritics **\\\\\\n\\\\** placement **\\\\\\n\\n\\n\\\\** DUMPED FROM THE VIRTUAL CHARS TOOL **\\\\\\n\\n\\\\beg virtual A_TEHTA\\n  \\\\class A_TEHTA_XS TELCO ARA HALLA HYARMEN NUM_8 NUM_10 NUM_11\\n  \\\\class A_TEHTA_S TINCO PARMA CALMA QUESSE SULE FORMEN TW_EXT_11 TW_EXT_12 ROMEN ARDA URE OSSE VALA_W_HOOK HARP_SHAPED AHA_TINCO HWESTA_TINCO NUM_4\\n  \\\\class A_TEHTA_L AHA HWESTA ORE VALA ANNA VILYA TW_EXT_13 TW_EXT_14 SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA YANTA VAIA SHOOK_BEAUTIFUL NUM_0 NUM_1 NUM_5\\n  \\\\class A_TEHTA_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 LAMBE ALDA SILME ESSE HWESTA_SINDARINWA MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_6 NUM_7 NUM_9\\n\\\\end\\n\\n\\\\beg virtual A_TEHTA_CIRCUM\\n  \\\\class A_TEHTA_CIRCUM_XS TELCO ARA HALLA HYARMEN NUM_8 NUM_10 NUM_11\\n  \\\\class A_TEHTA_CIRCUM_S TINCO PARMA CALMA QUESSE SULE FORMEN ORE VALA ANNA VILYA TW_EXT_11 TW_EXT_12 ROMEN ARDA SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA YANTA URE OSSE VALA_W_HOOK HARP_SHAPED AHA_TINCO HWESTA_TINCO NUM_1 NUM_4\\n  \\\\class A_TEHTA_CIRCUM_L AHA HWESTA TW_EXT_13 TW_EXT_14 VAIA SHOOK_BEAUTIFUL NUM_0 NUM_2 NUM_5 NUM_7 NUM_9\\n  \\\\class A_TEHTA_CIRCUM_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 LAMBE ALDA SILME ESSE HWESTA_SINDARINWA MALTA_W_HOOK ANCA_CLOSED NUM_3 NUM_6\\n\\\\end\\n\\n\\\\beg virtual A_TEHTA_REVERSED\\n  \\\\class A_TEHTA_INV_XS TELCO ARA HALLA HYARMEN NUM_8 NUM_10 NUM_11\\n  \\\\class A_TEHTA_INV_S TINCO PARMA CALMA QUESSE SULE FORMEN ORE VALA ANNA VILYA TW_EXT_11 TW_EXT_12 ROMEN ARDA SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA YANTA URE OSSE VALA_W_HOOK HARP_SHAPED AHA_TINCO HWESTA_TINCO NUM_4\\n  \\\\class A_TEHTA_INV_L AHA HWESTA TW_EXT_13 TW_EXT_14 VAIA SHOOK_BEAUTIFUL NUM_0 NUM_1 NUM_5 NUM_7\\n  \\\\class A_TEHTA_INV_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 LAMBE ALDA SILME ESSE HWESTA_SINDARINWA MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_6 NUM_9\\n\\\\end\\n\\n\\\\beg virtual A_TEHTA_CIRCUM_REVERSED TEHTA_BREVE\\n  \\\\class THSUP_TICK_XS TELCO ARA HALLA HYARMEN NUM_8 NUM_10 NUM_11\\n  \\\\class THSUP_TICK_S TINCO PARMA CALMA QUESSE SULE FORMEN ORE VALA ANNA VILYA TW_EXT_11 TW_EXT_12 ROMEN ARDA SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA YANTA URE OSSE VALA_W_HOOK HARP_SHAPED AHA_TINCO HWESTA_TINCO NUM_4\\n  \\\\class THSUP_TICK_L AHA HWESTA TW_EXT_13 TW_EXT_14 VAIA SHOOK_BEAUTIFUL NUM_0 NUM_1 NUM_5 NUM_7\\n  \\\\class THSUP_TICK_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 LAMBE ALDA SILME ESSE HWESTA_SINDARINWA MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_6 NUM_9\\n\\\\end\\n\\n\\\\beg virtual E_TEHTA\\n  \\\\class E_TEHTA_XS TELCO ARA HALLA HYARMEN NUM_8 NUM_10 NUM_11\\n  \\\\class E_TEHTA_S TINCO PARMA CALMA QUESSE SULE FORMEN ORE VALA ANNA VILYA TW_EXT_11 TW_EXT_12 ROMEN ARDA URE OSSE VALA_W_HOOK HARP_SHAPED AHA_TINCO HWESTA_TINCO NUM_4\\n  \\\\class E_TEHTA_L AHA HWESTA TW_EXT_13 TW_EXT_14 SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA YANTA VAIA SHOOK_BEAUTIFUL NUM_0 NUM_1 NUM_5 NUM_7\\n  \\\\class E_TEHTA_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 LAMBE ALDA SILME ESSE HWESTA_SINDARINWA MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_6 NUM_9\\n\\\\end\\n\\n\\\\beg virtual E_TEHTA_GRAVE\\n  \\\\class E_TEHTA_GRAVE_XS TINCO PARMA CALMA QUESSE AHA HWESTA ORE VALA ANNA VILYA TW_EXT_13 TW_EXT_14 ROMEN ARDA SILME SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA YANTA URE VAIA VALA_W_HOOK SHOOK_BEAUTIFUL NUM_0 NUM_1 NUM_5 NUM_7\\n  \\\\class E_TEHTA_GRAVE_S TELCO ARA HALLA SULE FORMEN TW_EXT_11 TW_EXT_12 OSSE HARP_SHAPED AHA_TINCO HWESTA_TINCO NUM_4 NUM_8\\n  \\\\class E_TEHTA_GRAVE_L ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 LAMBE ALDA ESSE HYARMEN HWESTA_SINDARINWA MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_6 NUM_9 NUM_10 NUM_11\\n  \\\\class E_TEHTA_GRAVE_XL \\n\\\\end\\n\\n\\\\beg virtual I_TEHTA\\n  \\\\class I_TEHTA_XS TELCO ARA HALLA HYARMEN NUM_8 NUM_10 NUM_11\\n  \\\\class I_TEHTA_S TINCO PARMA CALMA QUESSE SULE FORMEN ORE VALA ANNA VILYA TW_EXT_11 TW_EXT_12 ROMEN ARDA SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA YANTA URE OSSE VALA_W_HOOK HARP_SHAPED AHA_TINCO HWESTA_TINCO NUM_1 NUM_4\\n  \\\\class I_TEHTA_L AHA HWESTA TW_EXT_13 TW_EXT_14 VAIA SHOOK_BEAUTIFUL NUM_0 NUM_5 NUM_7 NUM_9\\n  \\\\class I_TEHTA_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 LAMBE ALDA SILME ESSE HWESTA_SINDARINWA MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_6\\n\\\\end\\n\\n\\\\beg virtual O_TEHTA\\n  \\\\class O_TEHTA_XS TELCO ARA HALLA HYARMEN NUM_10 NUM_11\\n  \\\\class O_TEHTA_S TINCO PARMA CALMA QUESSE SULE FORMEN ORE VALA ANNA VILYA TW_EXT_11 TW_EXT_12 ROMEN ARDA SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA YANTA URE OSSE VALA_W_HOOK HARP_SHAPED AHA_TINCO HWESTA_TINCO NUM_8\\n  \\\\class O_TEHTA_L AHA HWESTA TW_EXT_13 TW_EXT_14 VAIA SHOOK_BEAUTIFUL NUM_0 NUM_1 NUM_2 NUM_3 NUM_4 NUM_9\\n  \\\\class O_TEHTA_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 LAMBE ALDA SILME ESSE HWESTA_SINDARINWA MALTA_W_HOOK ANCA_CLOSED NUM_5 NUM_6 NUM_7\\n\\\\end\\n\\n\\\\beg virtual U_TEHTA\\n  \\\\class U_TEHTA_XS TELCO ARA HALLA HYARMEN NUM_10 NUM_11\\n  \\\\class U_TEHTA_S TINCO PARMA CALMA QUESSE SULE FORMEN ORE VALA ANNA VILYA TW_EXT_11 TW_EXT_12 ROMEN ARDA SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA YANTA URE OSSE VALA_W_HOOK HARP_SHAPED AHA_TINCO HWESTA_TINCO NUM_4 NUM_8\\n  \\\\class U_TEHTA_L AHA HWESTA TW_EXT_13 TW_EXT_14 VAIA SHOOK_BEAUTIFUL NUM_0 NUM_1 NUM_2 NUM_3 NUM_5 NUM_9\\n  \\\\class U_TEHTA_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 LAMBE ALDA SILME ESSE HWESTA_SINDARINWA MALTA_W_HOOK ANCA_CLOSED NUM_6 NUM_7\\n\\\\end\\n\\n\\\\beg virtual WA_TEHTA SEV_TEHTA\\n  \\\\class WA_TEHTA_XS TELCO ARA HALLA SULE FORMEN TW_EXT_11 TW_EXT_12 HYARMEN HARP_SHAPED AHA_TINCO HWESTA_TINCO NUM_4 NUM_8 NUM_10 NUM_11\\n  \\\\class WA_TEHTA_S TINCO PARMA CALMA QUESSE ORE VALA ANNA VILYA ROMEN ARDA SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA YANTA URE OSSE VAIA VALA_W_HOOK NUM_0 NUM_1\\n  \\\\class WA_TEHTA_L AHA HWESTA TW_EXT_13 TW_EXT_14 SHOOK_BEAUTIFUL NUM_2 NUM_5 NUM_7 NUM_9\\n  \\\\class WA_TEHTA_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 LAMBE ALDA SILME ESSE HWESTA_SINDARINWA MALTA_W_HOOK ANCA_CLOSED NUM_3 NUM_6\\n\\\\end\\n\\n\\\\beg virtual A_TEHTA_DOUBLE\\n  \\\\class A_TEHTA_DOUBLE_XS TELCO ARA HALLA HYARMEN NUM_4 NUM_8 NUM_10 NUM_11\\n  \\\\class A_TEHTA_DOUBLE_S SULE FORMEN TW_EXT_11 TW_EXT_12 OSSE HARP_SHAPED AHA_TINCO HWESTA_TINCO\\n  \\\\class A_TEHTA_DOUBLE_L TINCO PARMA CALMA QUESSE ORE VALA ANNA VILYA ROMEN ARDA SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA YANTA URE VAIA VALA_W_HOOK SHOOK_BEAUTIFUL NUM_0 NUM_1 NUM_5\\n  \\\\class A_TEHTA_DOUBLE_XL ANDO UMBAR ANGA UNGWE AHA HWESTA ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_13 TW_EXT_14 TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 LAMBE ALDA SILME ESSE HWESTA_SINDARINWA MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_6 NUM_7 NUM_9\\n\\\\end\\n\\n\\\\beg virtual E_TEHTA_DOUBLE\\n  \\\\class E_TEHTA_DOUBLE_XS TELCO ARA HALLA HYARMEN NUM_8 NUM_10 NUM_11\\n  \\\\class E_TEHTA_DOUBLE_S TW_EXT_11\\n  \\\\class E_TEHTA_DOUBLE_L TINCO PARMA CALMA QUESSE SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA TW_EXT_12 TW_EXT_13 TW_EXT_14 ROMEN ARDA SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA YANTA URE OSSE VAIA VALA_W_HOOK SHOOK_BEAUTIFUL HARP_SHAPED AHA_TINCO HWESTA_TINCO NUM_0 NUM_1\\n  \\\\class E_TEHTA_DOUBLE_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 LAMBE ALDA SILME ESSE HWESTA_SINDARINWA MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_4 NUM_5 NUM_6 NUM_7 NUM_9\\n\\\\end\\n\\n\\\\beg virtual I_TEHTA_DOUBLE Y_TEHTA\\n  \\\\class I_TEHTA_DOUBLE_XS TELCO ARA HALLA SULE FORMEN TW_EXT_11 TW_EXT_12 HYARMEN HARP_SHAPED AHA_TINCO HWESTA_TINCO NUM_4 NUM_8 NUM_10 NUM_11\\n  \\\\class I_TEHTA_DOUBLE_S TINCO PARMA CALMA QUESSE ORE VALA ANNA VILYA ESSE_NUQUERNA YANTA URE OSSE VALA_W_HOOK SHOOK_BEAUTIFUL NUM_1\\n  \\\\class I_TEHTA_DOUBLE_L AHA HWESTA TW_EXT_13 TW_EXT_14 ROMEN ARDA SILME_NUQUERNA SILME_NUQUERNA_ALT VAIA NUM_0 NUM_2 NUM_5 NUM_9\\n  \\\\class I_TEHTA_DOUBLE_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 LAMBE ALDA SILME ESSE HWESTA_SINDARINWA MALTA_W_HOOK ANCA_CLOSED NUM_3 NUM_6 NUM_7\\n\\\\end\\n\\n\\\\beg virtual O_TEHTA_DOUBLE\\n  \\\\class O_TEHTA_DOUBLE_XS TELCO ARA HALLA HYARMEN NUM_10 NUM_11\\n  \\\\class O_TEHTA_DOUBLE_S TINCO PARMA CALMA QUESSE SULE FORMEN ORE VALA ANNA VILYA TW_EXT_11 TW_EXT_12 ROMEN ARDA SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA YANTA URE OSSE SHOOK_BEAUTIFUL HARP_SHAPED AHA_TINCO HWESTA_TINCO NUM_4 NUM_8\\n  \\\\class O_TEHTA_DOUBLE_L AHA HWESTA TW_EXT_13 TW_EXT_14 VAIA VALA_W_HOOK NUM_0 NUM_1 NUM_2 NUM_5 NUM_7\\n  \\\\class O_TEHTA_DOUBLE_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 LAMBE ALDA SILME ESSE HWESTA_SINDARINWA MALTA_W_HOOK ANCA_CLOSED NUM_3 NUM_6 NUM_9\\n\\\\end\\n\\n\\\\beg virtual U_TEHTA_DOUBLE\\n  \\\\class U_TEHTA_DOUBLE_XS TELCO ARA HALLA HYARMEN NUM_10 NUM_11\\n  \\\\class U_TEHTA_DOUBLE_S TINCO PARMA CALMA QUESSE SULE FORMEN ORE VALA ANNA VILYA TW_EXT_11 TW_EXT_12 ROMEN ARDA SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA YANTA URE OSSE SHOOK_BEAUTIFUL HARP_SHAPED AHA_TINCO HWESTA_TINCO NUM_8\\n  \\\\class U_TEHTA_DOUBLE_L AHA HWESTA TW_EXT_13 TW_EXT_14 VAIA VALA_W_HOOK NUM_0 NUM_1 NUM_2 NUM_4 NUM_5\\n  \\\\class U_TEHTA_DOUBLE_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 LAMBE ALDA SILME ESSE HWESTA_SINDARINWA MALTA_W_HOOK ANCA_CLOSED NUM_3 NUM_6 NUM_7 NUM_9\\n\\\\end\\n\\n\\\\beg virtual A_TEHTA_INF\\n  \\\\class THINF_TDOT_XS TELCO ARA HALLA ROMEN ARDA SILME_NUQUERNA HARP_SHAPED NUM_8\\n  \\\\class THINF_TDOT_S TINCO PARMA TW_EXT_11 TW_EXT_12 SILME URE OSSE SHOOK_BEAUTIFUL AHA_TINCO HWESTA_TINCO NUM_6 NUM_7\\n  \\\\class THINF_TDOT_L CALMA QUESSE SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA TW_EXT_13 TW_EXT_14 LAMBE ALDA SILME_NUQUERNA_ALT ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA YANTA VAIA VALA_W_HOOK NUM_0 NUM_1 NUM_2 NUM_4 NUM_10 NUM_11\\n  \\\\class THINF_TDOT_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 MALTA_W_HOOK ANCA_CLOSED NUM_3 NUM_5 NUM_9\\n\\\\end\\n\\n\\\\beg virtual E_TEHTA_INF\\n  \\\\class THINF_ACCENT_XS TELCO ARA HALLA ROMEN ARDA SILME_NUQUERNA HARP_SHAPED\\n  \\\\class THINF_ACCENT_S TINCO PARMA TW_EXT_11 TW_EXT_12 SILME URE OSSE SHOOK_BEAUTIFUL AHA_TINCO HWESTA_TINCO NUM_1 NUM_4 NUM_6 NUM_7 NUM_8 NUM_11\\n  \\\\class THINF_ACCENT_L CALMA QUESSE SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA TW_EXT_13 TW_EXT_14 LAMBE ALDA SILME_NUQUERNA_ALT ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA YANTA VAIA VALA_W_HOOK NUM_0 NUM_2 NUM_5 NUM_9 NUM_10\\n  \\\\class THINF_ACCENT_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 MALTA_W_HOOK ANCA_CLOSED NUM_3\\n\\\\end\\n\\n\\\\beg virtual E_TEHTA_GRAVE_INF\\n  \\\\class E_TEHTA_GRAVE_INF_XS TELCO ARA HALLA ROMEN ARDA SILME_NUQUERNA\\n  \\\\class E_TEHTA_GRAVE_INF_S CALMA QUESSE TW_EXT_13 TW_EXT_14 NUM_2 NUM_3 NUM_4\\n  \\\\class E_TEHTA_GRAVE_INF_L TINCO PARMA SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA TW_EXT_11 TW_EXT_12 SILME SILME_NUQUERNA_ALT ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA YANTA URE OSSE VAIA VALA_W_HOOK SHOOK_BEAUTIFUL HARP_SHAPED AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_6 NUM_7 NUM_8 NUM_10 NUM_11\\n  \\\\class E_TEHTA_GRAVE_INF_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 LAMBE ALDA MALTA_W_HOOK ANCA_CLOSED NUM_5 NUM_9\\n\\\\end\\n\\n\\\\beg virtual CIRC_TEHTA_INF\\n  \\\\class TH_SUB_CIRC_XS TELCO ARA HALLA ROMEN ARDA SILME_NUQUERNA HARP_SHAPED\\n  \\\\class TH_SUB_CIRC_S TINCO PARMA TW_EXT_11 TW_EXT_12 SILME URE OSSE SHOOK_BEAUTIFUL AHA_TINCO HWESTA_TINCO NUM_4 NUM_6 NUM_8\\n  \\\\class TH_SUB_CIRC_L CALMA QUESSE SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA TW_EXT_13 TW_EXT_14 LAMBE ALDA SILME_NUQUERNA_ALT ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA YANTA VAIA VALA_W_HOOK NUM_0 NUM_1 NUM_7 NUM_10 NUM_11\\n  \\\\class TH_SUB_CIRC_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_5 NUM_9\\n\\\\end\\n\\n\\\\beg virtual THINNAS  THINF_STROKE\\n  \\\\class THINF_STROKE_XS TELCO ARA HALLA ROMEN ARDA SILME_NUQUERNA HARP_SHAPED\\n  \\\\class THINF_STROKE_S TINCO PARMA TW_EXT_11 TW_EXT_12 SILME URE OSSE SHOOK_BEAUTIFUL AHA_TINCO HWESTA_TINCO NUM_4 NUM_6 NUM_7 NUM_8\\n  \\\\class THINF_STROKE_L CALMA QUESSE SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA TW_EXT_13 TW_EXT_14 LAMBE ALDA SILME_NUQUERNA_ALT ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA YANTA VAIA VALA_W_HOOK NUM_0 NUM_1 NUM_2 NUM_10 NUM_11\\n  \\\\class THINF_STROKE_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 MALTA_W_HOOK ANCA_CLOSED NUM_3 NUM_5 NUM_9\\n\\\\end\\n\\n\\\\beg virtual O_TEHTA_INF\\n  \\\\class THINF_CURL_XS TELCO ARA HALLA ROMEN ARDA SILME_NUQUERNA HARP_SHAPED\\n  \\\\class THINF_CURL_S TINCO PARMA TW_EXT_11 TW_EXT_12 SILME URE OSSE SHOOK_BEAUTIFUL AHA_TINCO HWESTA_TINCO NUM_4 NUM_6 NUM_7 NUM_8 NUM_10 NUM_11\\n  \\\\class THINF_CURL_L CALMA QUESSE SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA TW_EXT_13 TW_EXT_14 LAMBE ALDA SILME_NUQUERNA_ALT ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA YANTA VAIA VALA_W_HOOK NUM_0 NUM_1 NUM_2 NUM_5 NUM_9\\n  \\\\class THINF_CURL_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 MALTA_W_HOOK ANCA_CLOSED NUM_3\\n\\\\end\\n\\n\\\\beg virtual U_TEHTA_INF\\n  \\\\class THINF_CURL_INV_XS TELCO ARA HALLA ROMEN ARDA SILME_NUQUERNA HARP_SHAPED\\n  \\\\class THINF_CURL_INV_S TINCO PARMA TW_EXT_11 TW_EXT_12 SILME URE OSSE SHOOK_BEAUTIFUL AHA_TINCO HWESTA_TINCO\\n  \\\\class THINF_CURL_INV_L CALMA QUESSE SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA TW_EXT_13 TW_EXT_14 LAMBE ALDA SILME_NUQUERNA_ALT ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA YANTA VAIA VALA_W_HOOK NUM_0 NUM_1 NUM_2 NUM_4 NUM_5 NUM_6 NUM_7 NUM_8 NUM_9 NUM_10 NUM_11\\n  \\\\class THINF_CURL_INV_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 MALTA_W_HOOK ANCA_CLOSED NUM_3\\n\\\\end\\n\\n\\\\beg virtual PALATAL_SIGN I_TEHTA_DOUBLE_INF Y_TEHTA_INF\\n  \\\\class THINF_DDOT_XS TELCO ARA HALLA ROMEN ARDA SILME_NUQUERNA HARP_SHAPED NUM_8\\n  \\\\class THINF_DDOT_S TINCO PARMA TW_EXT_11 TW_EXT_12 SILME URE OSSE SHOOK_BEAUTIFUL AHA_TINCO HWESTA_TINCO NUM_4 NUM_6\\n  \\\\class THINF_DDOT_L CALMA QUESSE SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA TW_EXT_13 TW_EXT_14 SILME_NUQUERNA_ALT ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA YANTA VAIA VALA_W_HOOK NUM_0 NUM_1 NUM_2 NUM_9 NUM_10 NUM_11\\n  \\\\class THINF_DDOT_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 MALTA_W_HOOK ANCA_CLOSED NUM_3 NUM_5\\n  \\\\class LAMBE_MARK_DDOT LAMBE ALDA NUM_7\\n\\\\end\\n\\n\\\\beg virtual E_TEHTA_DOUBLE_INF GEMINATE_DOUBLE\\n  \\\\class THINF_DSTROKE_XS TELCO ARA HALLA ROMEN ARDA SILME_NUQUERNA HARP_SHAPED\\n  \\\\class THINF_DSTROKE_S TINCO PARMA TW_EXT_11 TW_EXT_12 SILME URE OSSE SHOOK_BEAUTIFUL AHA_TINCO HWESTA_TINCO NUM_4 NUM_6 NUM_7 NUM_8\\n  \\\\class THINF_DSTROKE_L CALMA QUESSE SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA TW_EXT_13 TW_EXT_14 SILME_NUQUERNA_ALT ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA YANTA VAIA VALA_W_HOOK NUM_0 NUM_1 NUM_10 NUM_11\\n  \\\\class THINF_DSTROKE_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_5 NUM_9\\n  \\\\class LAMBE_MARK_DSTROKE LAMBE ALDA\\n\\\\end\\n\\n\\\\beg virtual UNUTIXE I_TEHTA_INF NO_VOWEL_DOT\\n  \\\\class THINF_DOT_XS TELCO ARA HALLA ROMEN ARDA SILME_NUQUERNA HARP_SHAPED\\n  \\\\class THINF_DOT_S TINCO PARMA TW_EXT_11 TW_EXT_12 SILME URE OSSE SHOOK_BEAUTIFUL AHA_TINCO HWESTA_TINCO NUM_4 NUM_6 NUM_7 NUM_8\\n  \\\\class THINF_DOT_L CALMA QUESSE SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA TW_EXT_13 TW_EXT_14 SILME_NUQUERNA_ALT ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA YANTA VAIA VALA_W_HOOK NUM_0 NUM_1 NUM_2 NUM_10 NUM_11\\n  \\\\class THINF_DOT_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 MALTA_W_HOOK ANCA_CLOSED NUM_3 NUM_5 NUM_9\\n  \\\\class LAMBE_MARK_DOT LAMBE ALDA\\n\\\\end\\n\\n\\\\beg virtual GEMINATE_SIGN\\n  \\\\class DASH_INF_XS TELCO ARA HALLA\\n  \\\\class DASH_INF_S TINCO PARMA CALMA QUESSE SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA TW_EXT_11 TW_EXT_12 TW_EXT_13 TW_EXT_14 ROMEN ARDA SILME SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA YANTA URE OSSE VAIA VALA_W_HOOK SHOOK_BEAUTIFUL HARP_SHAPED AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_4 NUM_7 NUM_8 NUM_10 NUM_11\\n  \\\\class DASH_INF_L ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_5 NUM_6 NUM_9\\n  \\\\class LAMBE_MARK_DASH LAMBE ALDA\\n\\\\end\\n\\n\\\\beg virtual GEMINATE_SIGN_TILD\\n  \\\\class TILD_INF_XS TELCO ARA HALLA\\n  \\\\class TILD_INF_S TINCO PARMA CALMA QUESSE SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA TW_EXT_11 TW_EXT_12 TW_EXT_13 TW_EXT_14 ROMEN ARDA SILME SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA YANTA URE OSSE VAIA VALA_W_HOOK SHOOK_BEAUTIFUL HARP_SHAPED AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_4 NUM_7 NUM_8 NUM_10 NUM_11\\n  \\\\class TILD_INF_L ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_5 NUM_6 NUM_9\\n  \\\\class LAMBE_MARK_TILD LAMBE ALDA\\n\\\\end\\n\\n\\\\beg virtual NASALIZE_SIGN\\n  \\\\class DASH_SUP_XS TELCO ARA HALLA\\n  \\\\class DASH_SUP_S TINCO PARMA CALMA QUESSE SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA TW_EXT_11 TW_EXT_12 TW_EXT_13 TW_EXT_14 ROMEN ARDA LAMBE ALDA SILME SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA YANTA URE OSSE VAIA VALA_W_HOOK SHOOK_BEAUTIFUL HARP_SHAPED AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_4 NUM_7 NUM_8 NUM_10 NUM_11\\n  \\\\class DASH_SUP_L ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_5 NUM_6 NUM_9\\n\\\\end\\n\\n\\\\beg virtual NASALIZE_SIGN_TILD\\n  \\\\class TILD_SUP_XS TELCO ARA HALLA\\n  \\\\class TILD_SUP_S TINCO PARMA CALMA QUESSE SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA TW_EXT_11 TW_EXT_12 TW_EXT_13 TW_EXT_14 ROMEN ARDA LAMBE ALDA SILME SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA YANTA URE OSSE VAIA VALA_W_HOOK SHOOK_BEAUTIFUL HARP_SHAPED AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_4 NUM_7 NUM_8 NUM_10 NUM_11\\n  \\\\class TILD_SUP_L ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_5 NUM_6 NUM_9\\n\\\\end\\n\\n\\\\beg virtual SARINCE\\n  \\\\class SHOOK_LEFT_L CALMA QUESSE ANGA UNGWE TW_EXT_13 TW_EXT_14 TW_EXT_23 TW_EXT_24 HWESTA_SINDARINWA NUM_0 NUM_1 NUM_4 NUM_7 NUM_8 NUM_10 NUM_11\\n  \\\\class SHOOK_RIGHT_L TELCO ARA HALLA TINCO PARMA ANDO UMBAR SULE FORMEN AHA HWESTA ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME ORE VALA ANNA VILYA TW_EXT_11 TW_EXT_12 TW_EXT_21 TW_EXT_22 ROMEN ARDA LAMBE ALDA SILME SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE ESSE_NUQUERNA HYARMEN YANTA URE OSSE VAIA MALTA_W_HOOK VALA_W_HOOK SHOOK_BEAUTIFUL ANCA_CLOSED HARP_SHAPED AHA_TINCO HWESTA_TINCO NUM_2 NUM_3 NUM_5 NUM_6 NUM_9\\n\\\\end\\n\"\nGlaemscribe.resource_manager.raw_charsets[\"tengwar_ds_sindarin\"] = \"\\\\**\\n\\nGlǽmscribe (also written Glaemscribe) is a software dedicated to\\nthe transcription of texts between writing systems, and more \\nspecifically dedicated to the transcription of J.R.R. Tolkien\\'s \\ninvented languages to some of his devised writing systems.\\n\\nCopyright (C) 2015 Benjamin Babut (Talagan).\\n\\nThis program is free software: you can redistribute it and/or modify\\nit under the terms of the GNU Affero General Public License as published by\\nthe Free Software Foundation, either version 3 of the License, or\\nany later version.\\n\\nThis program is distributed in the hope that it will be useful,\\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\nGNU Affero General Public License for more details.\\n\\nYou should have received a copy of the GNU Affero General Public License\\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\\n\\n**\\\\\\n\\n\\\\** Charset specially customized for Tengwar Sindarin (Glaemscrafu patched version) **\\\\ \\n\\n\\\\version 0.1.0\\n\\n\\\\beg changelog\\n  \\\\entry \\\"0.0.5\\\" \\\"Added VALA_W_HOOK, VAIYA. Moved A_TEHTA_INV_L due to soft hyphen bug.\\\"\\n  \\\\entry \\\"0.0.6\\\" \\\"Superior and inferior dash and tild consonant modification signs have been added for halla, telco and ara. / Added pustar combinations (4/4-halfed/4-squared/5)\\\"\\n  \\\\entry \\\"0.0.7\\\" \\\"Fixed missing tinco_ext / sule_ext\\\"\\n  \\\\entry \\\"0.0.8\\\" \\\"Added NBSP\\\"  \\n  \\\\entry \\\"0.0.9\\\" \\\"Moved back some chars to latin blocks to avoid word-wrapping problems\\\"  \\n  \\\\entry \\\"0.1.0\\\" \\\"Added ELVISH_PAREN tokien, reworked sarince token names.\\\"\\n\\\\end\\n\\n\\\\**   **\\\\ \\\\char 20 SPACE              \\n\\\\** ! **\\\\ \\\\char 21 TW_EXT_11 TINCO_EXT SULE_EXT THULE_EXT                    \\n\\\\** \\\" **\\\\ \\\\char 22 DASH_INF_L            \\n\\\\** # **\\\\ \\\\char 23 A_TEHTA_XL          \\n\\\\** $ **\\\\ \\\\char 24 E_TEHTA_XL   \\n\\\\** % **\\\\ \\\\char 25 I_TEHTA_XL     \\n\\\\** & **\\\\ \\\\char 26 U_TEHTA_XL        \\n\\\\** \\' **\\\\ \\\\char 27 DASH_INF_S            \\n\\\\** ( **\\\\ \\\\char 28 ?                \\n\\\\** ) **\\\\ \\\\char 29 TILD_XSUP_L           \\n\\\\** * **\\\\ \\\\char 2a ?                \\n\\\\** + **\\\\ \\\\char 2b SARINCE_RIGHT_V1 SHOOK_RIGHT_L          \\n\\\\** , **\\\\ \\\\char 2c TW_84 ESSE_NUQUERNA       \\n\\\\** - **\\\\ \\\\char 2d PUNCT_DDOT            \\n\\\\** . **\\\\ \\\\char 2e TW_94 URE            \\n\\\\** / **\\\\ \\\\char 2f TILD_XINF_S           \\n\\\\** 0 **\\\\ \\\\char 30 TILD_XSUP_S           \\n\\\\** 1 **\\\\ \\\\char 31 TW_11 TINCO           \\n\\\\** 2 **\\\\ \\\\char 32 TW_21 ANDO           \\n\\\\** 3 **\\\\ \\\\char 33 TW_31 SULE THULE        \\n\\\\** 4 **\\\\ \\\\char 34 TW_41 ANTO           \\n\\\\** 5 **\\\\ \\\\char 35 TW_51 NUMEN           \\n\\\\** 6 **\\\\ \\\\char 36 TW_61 ORE            \\n\\\\** 7 **\\\\ \\\\char 37 TW_71 ROMEN           \\n\\\\** 8 **\\\\ \\\\char 38 TW_81 SILME           \\n\\\\** 9 **\\\\ \\\\char 39 TW_91 HYARMEN          \\n\\\\** : **\\\\ \\\\char 3a TILD_INF_L            \\n\\\\** ; **\\\\ \\\\char 3b TILD_INF_S            \\n\\\\** < **\\\\ \\\\char 3c ?  \\\\** Does not look compliant between DS and Annatar **\\\\\\n\\\\** = **\\\\ \\\\char 3d PUNCT_DOT            \\n\\\\** > **\\\\ \\\\char 3e ?                \\n\\\\** ? **\\\\ \\\\char 3f TILD_XINF_L           \\n\\\\** @ **\\\\ \\\\char 40 TW_EXT_21 ANDO_EXT ANTO_EXT            \\n\\\\** A **\\\\ \\\\char 41 TW_EXT_13 CALMA_EXT AHA_EXT            \\n\\\\** B **\\\\ \\\\char 42 I_TEHTA_XS     \\n\\\\** C **\\\\ \\\\char 43 A_TEHTA_XS          \\n\\\\** D **\\\\ \\\\char 44 A_TEHTA_S           \\n\\\\** E **\\\\ \\\\char 45 A_TEHTA_L           \\n\\\\** F **\\\\ \\\\char 46 E_TEHTA_S    \\n\\\\** G **\\\\ \\\\char 47 I_TEHTA_S           \\n\\\\** H **\\\\ \\\\char 48 O_TEHTA_S           \\n\\\\** I **\\\\ \\\\char 49 SILME_NUQUERNA_ALT \\\\** Used for y in s. beleriand **\\\\                \\n\\\\** J **\\\\ \\\\char 4a U_TEHTA_S         \\n\\\\** K **\\\\ \\\\char 4b ?                \\n\\\\** L **\\\\ \\\\char 4c LAMBE_MARK_DOT                \\n\\\\** M **\\\\ \\\\char 4d U_TEHTA_XS        \\n\\\\** N **\\\\ \\\\char 4e O_TEHTA_XS          \\n\\\\** O **\\\\ \\\\char 4f ?                \\n\\\\** P **\\\\ \\\\char 50 TILD_SUP_L            \\n\\\\** Q **\\\\ \\\\char 51 TW_EXT_12 PARMA_EXT FORMEN_EXT            \\n\\\\** R **\\\\ \\\\char 52 E_TEHTA_L          \\n\\\\** S **\\\\ \\\\char 53 TW_EXT_23 ANGA_EXT ANCA_EXT            \\n\\\\** T **\\\\ \\\\char 54 I_TEHTA_L           \\n\\\\** U **\\\\ \\\\char 55 U_TEHTA_L         \\n\\\\** V **\\\\ \\\\char 56 E_TEHTA_XS         \\n\\\\** W **\\\\ \\\\char 57 TW_EXT_22 UMBAR_EXT AMPA_EXT            \\n\\\\** X **\\\\ \\\\char 58 TW_EXT_24 UNQUE_EXT UNGWE_EXT            \\n\\\\** Y **\\\\ \\\\char 59 O_TEHTA_L           \\n\\\\** Z **\\\\ \\\\char 5a TW_EXT_14 QUESSE_EXT HWESTA_EXT            \\n\\\\** [ **\\\\ \\\\char 5b DASH_SUP_S            \\n\\\\** \\\\ **\\\\ \\\\char 5c TILD_L              \\n\\\\** ] **\\\\ \\\\char 5d OSSE               \\n\\\\** ^ **\\\\ \\\\char 5e O_TEHTA_XL          \\n\\\\** _ **\\\\ \\\\char 5f SARINCE_RIGHT_V2 SHOOK_RIGHT_S          \\n\\\\** ` **\\\\ \\\\char 60 TELCO              \\n\\\\** a **\\\\ \\\\char 61 TW_13 CALMA          \\n\\\\** b **\\\\ \\\\char 62 TW_54 NWALME          \\n\\\\** c **\\\\ \\\\char 63 TW_34 HWESTA          \\n\\\\** d **\\\\ \\\\char 64 TW_33 AHA           \\n\\\\** e **\\\\ \\\\char 65 TW_32 FORMEN          \\n\\\\** f **\\\\ \\\\char 66 TW_43 ANCA           \\n\\\\** g **\\\\ \\\\char 67 TW_53 NOLDO          \\n\\\\** h **\\\\ \\\\char 68 TW_63 ANNA           \\n\\\\** i **\\\\ \\\\char 69 TW_82 SILME_NUQUERNA      \\n\\\\** j **\\\\ \\\\char 6a TW_73 LAMBE          \\n\\\\** k **\\\\ \\\\char 6b TW_83 ESSE           \\n\\\\** l **\\\\ \\\\char 6c TW_93 YANTA          \\n\\\\** m **\\\\ \\\\char 6d TW_74 ALDA           \\n\\\\** n **\\\\ \\\\char 6e TW_64 VILYA          \\n\\\\** o **\\\\ \\\\char 6f TW_92 HWESTA_SINDARINWA    \\n\\\\** p **\\\\ \\\\char 70 TILD_SUP_S           \\n\\\\** q **\\\\ \\\\char 71 TW_12 PARMA          \\n\\\\** r **\\\\ \\\\char 72 TW_42 AMPA           \\n\\\\** s **\\\\ \\\\char 73 TW_23 ANGA           \\n\\\\** t **\\\\ \\\\char 74 TW_52 MALTA          \\n\\\\** u **\\\\ \\\\char 75 TW_72 ARDA           \\n\\\\** v **\\\\ \\\\char 76 TW_44 UNQUE          \\n\\\\** w **\\\\ \\\\char 77 TW_22 UMBAR          \\n\\\\** x **\\\\ \\\\char 78 TW_24 UNGWE          \\n\\\\** y **\\\\ \\\\char 79 TW_62 VALA           \\n\\\\** z **\\\\ \\\\char 7a TW_14 QUESSE          \\n\\\\** { **\\\\ \\\\char 7b DASH_SUP_L           \\n\\\\** | **\\\\ \\\\char 7c SARINCE_LEFT_V1 SHOOK_LEFT_L          \\n\\\\** } **\\\\ \\\\char 7d SARINCE_LEFT_V2 SHOOK_LEFT_S          \\n\\\\** ~ **\\\\ \\\\char 7e ARA             \\n\\\\char a0 NBSP  \\n\\\\** ¡ **\\\\ \\\\char a1 SARINCE_SEMI_ASCENDING_V1        \\n\\\\** ¢ **\\\\ \\\\char a2 SARINCE_RIGHT_V3                        \\n\\\\** £ **\\\\ \\\\char a3 SARINCE_FLOURISHED_V1 SARINCE_FLOURISHED SHOOK_BEAUTIFUL                \\n\\\\** ¥ **\\\\ \\\\char a5 SARINCE_FLOURISHED_V2                 \\n\\\\** ¦ **\\\\ \\\\char a6 HWESTA_TINCO                \\n\\\\** § **\\\\ \\\\char a7 AHA_TINCO                \\n\\\\** ¨ **\\\\ \\\\char a8 TH_SUB_CIRC_S          \\n\\\\** © **\\\\ \\\\char a9 TH_SUB_CIRC_XS          \\n\\\\** ª **\\\\ \\\\char aa A_TEHTA_INV_XL        \\n\\\\** « **\\\\ \\\\char ab DQUOT_OPEN            \\n\\\\** ¬ **\\\\ \\\\char ac PUNCT_DTILD RING_MARK_L RING_MARK_R              \\n\\\\** SOFT HYPEN BUG HERE **\\\\\\n\\\\** ® **\\\\ \\\\char ae ?                \\n\\\\** ¯ **\\\\ \\\\char af A_TEHTA_INV_S         \\n\\\\** ° **\\\\ \\\\char b0 LAMBE_MARK_TILD               \\n\\\\** ± **\\\\ \\\\char b1 SQUOT_OPEN            \\n\\\\** ² **\\\\ \\\\char b2 SQUOT_CLOSE           \\n\\\\** ³ **\\\\ \\\\char b3 ?                \\n\\\\** ´ **\\\\ \\\\char b4 LAMBE_MARK_DDOT         \\n\\\\** µ **\\\\ \\\\char b5 A_TEHTA_INV_XS        \\n\\\\** · **\\\\ \\\\char b7 ?                \\n\\\\** ¸ **\\\\ \\\\char b8 LAMBE_MARK_DASH           \\n\\\\** ¹ **\\\\ \\\\char b9 ?                \\n\\\\** º **\\\\ \\\\char ba ?                \\n\\\\** » **\\\\ \\\\char bb DQUOT_CLOSE           \\n\\\\** ¼ **\\\\ \\\\char bc LIGATING_SHORT_CARRIER                \\n\\\\** ½ **\\\\ \\\\char bd HALLA              \\n\\\\** ¾ **\\\\ \\\\char be BOMBADIL_W                   \\n\\\\** ¿ **\\\\ \\\\char bf BOMBADIL_HW                \\n\\\\** À **\\\\ \\\\char c0 PUNCT_INTERR           \\n\\\\** Á **\\\\ \\\\char c1 PUNCT_EXCLAM           \\n\\\\** Â **\\\\ \\\\char c2 PUNCT_TILD            \\n\\\\** Ã **\\\\ \\\\char c3 ?                \\n\\\\** Ä **\\\\ \\\\char c4 CHRISTOPHER_QU                \\n\\\\** Å **\\\\ \\\\char c5 SARINCE_ASCENDING_V1                \\n\\\\** Æ **\\\\ \\\\char c6 SARINCE_ASCENDING_V3                \\n\\\\** Ç **\\\\ \\\\char c7 ?                \\n\\\\** È **\\\\ \\\\char c8 THINF_DOT_XL           \\n\\\\** É **\\\\ \\\\char c9 THINF_DOT_L           \\n\\\\** Ê **\\\\ \\\\char ca THINF_DOT_S           \\n\\\\** Ë **\\\\ \\\\char cb THINF_DOT_XS           \\n\\\\** Ì **\\\\ \\\\char cc THINF_DDOT_XL          \\n\\\\** Í **\\\\ \\\\char cd THINF_DDOT_L           \\n\\\\** Î **\\\\ \\\\char ce THINF_DDOT_S           \\n\\\\** Ï **\\\\ \\\\char cf THINF_DDOT_XS          \\n\\\\** Ð **\\\\ \\\\char d0 THINF_TDOT_XL          \\n\\\\** Ñ **\\\\ \\\\char d1 THINF_TDOT_L           \\n\\\\** Ò **\\\\ \\\\char d2 THINF_TDOT_S           \\n\\\\** Ó **\\\\ \\\\char d3 THINF_TDOT_XS          \\n\\\\** Ô **\\\\ \\\\char d4 THSUP_DDOT_XL Y_TEHTA_XL I_TEHTA_DOUBLE_XL         \\n\\\\** Õ **\\\\ \\\\char d5 THSUP_DDOT_L Y_TEHTA_L I_TEHTA_DOUBLE_L       \\n\\\\** Ö **\\\\ \\\\char d6 THSUP_DDOT_S Y_TEHTA_S I_TEHTA_DOUBLE_S          \\n\\\\** × **\\\\ \\\\char d7 THSUP_DDOT_XS Y_TEHTA_XS I_TEHTA_DOUBLE_XS         \\n\\\\** Ø **\\\\ \\\\char d8 THSUP_TICK_XL          \\n\\\\** Ù **\\\\ \\\\char d9 THSUP_TICK_L           \\n\\\\** Ú **\\\\ \\\\char da THSUP_TICK_S           \\n\\\\** Û **\\\\ \\\\char db THSUP_TICK_XS          \\n\\\\** Ü **\\\\ \\\\char dc THSUP_TICK_INV_XL A_TEHTA_CIRCUM_XL       \\n\\\\** Ý **\\\\ \\\\char dd THSUP_TICK_INV_L A_TEHTA_CIRCUM_L        \\n\\\\** Þ **\\\\ \\\\char de THSUP_TICK_INV_S A_TEHTA_CIRCUM_S         \\n\\\\** ß **\\\\ \\\\char df THSUP_TICK_INV_XS A_TEHTA_CIRCUM_XS       \\n\\\\** à **\\\\ \\\\char e0 THSUP_CURL_GRAVE_XL         \\n\\\\** á **\\\\ \\\\char e1 THSUP_CURL_GRAVE_L          \\n\\\\** â **\\\\ \\\\char e2 THSUP_CURL_GRAVE_S          \\n\\\\** ã **\\\\ \\\\char e3 THSUP_CURL_GRAVE_XS         \\n\\\\** ä **\\\\ \\\\char e4 THINF_CURL_XL          \\n\\\\** å **\\\\ \\\\char e5 THINF_CURL_L           \\n\\\\** æ **\\\\ \\\\char e6 THINF_CURL_S           \\n\\\\** ç **\\\\ \\\\char e7 THINF_CURL_XS          \\n\\\\** è **\\\\ \\\\char e8 WA_TEHTA_XL           \\n\\\\** é **\\\\ \\\\char e9 WA_TEHTA_L           \\n\\\\** ê **\\\\ \\\\char ea WA_TEHTA_S           \\n\\\\** ë **\\\\ \\\\char eb WA_TEHTA_XS           \\n\\\\** ì **\\\\ \\\\char ec ?                                 \\n\\\\** í **\\\\ \\\\char ed ?                                 \\n\\\\** î **\\\\ \\\\char ee ?                                 \\n\\\\** ï **\\\\ \\\\char ef ?                                 \\n\\\\** ð **\\\\ \\\\char f0 NUM_0                               \\n\\\\** ñ **\\\\ \\\\char f1 NUM_1                               \\n\\\\** ò **\\\\ \\\\char f2 NUM_2                               \\n\\\\** ó **\\\\ \\\\char f3 NUM_3                               \\n\\\\** ô **\\\\ \\\\char f4 NUM_4                               \\n\\\\** õ **\\\\ \\\\char f5 NUM_5                               \\n\\\\** ö **\\\\ \\\\char f6 NUM_6                               \\n\\\\** ÷ **\\\\ \\\\char f7 NUM_7                               \\n\\\\** ø **\\\\ \\\\char f8 NUM_8                               \\n\\\\** ù **\\\\ \\\\char f9 NUM_9                               \\n\\\\** ú **\\\\ \\\\char fa NUM_10                               \\n\\\\** û **\\\\ \\\\char fb NUM_11                               \\n\\\\** ü **\\\\ \\\\char fc THINF_STROKE_XL                                 \\n\\\\** ý **\\\\ \\\\char fd THINF_STROKE_L                                 \\n\\\\** þ **\\\\ \\\\char fe THINF_STROKE_S                                 \\n\\\\** ÿ **\\\\ \\\\char ff THINF_STROKE_XS     \\n\\n\\\\** FIX FOR SOFT HYPHEN **\\\\\\n\\\\char 109 A_TEHTA_INV_L\\n\\n\\\\char 10C O_TEHTA_DOUBLE_XL\\n\\\\char 10D O_TEHTA_DOUBLE_L\\n\\\\char 10E O_TEHTA_DOUBLE_S\\n\\\\char 10F O_TEHTA_DOUBLE_XS\\n\\n\\\\** USING TENGWAR ELFICA POS TO AVOID PROBLEMS **\\\\\\n\\\\char 110 E_TEHTA_GRAVE_XL\\n\\\\char 111 E_TEHTA_GRAVE_L\\n\\\\char 112 E_TEHTA_GRAVE_S\\n\\\\char 113 E_TEHTA_GRAVE_XS\\n\\n\\n\\\\** USING TENGWAR ELFICA POS TO AVOID PROBLEMS **\\\\\\n\\\\char 125 VAIA WAIA VAIYA\\n\\n\\\\char 129 NUM_12\\n                            \\n\\\\** Œ **\\\\ \\\\char 152 PUNCT_PAREN_L PUNCT_PAREN_L_ALT                          \\n\\\\** œ **\\\\ \\\\char 153 PUNCT_PAREN_R PUNCT_PAREN_R_ALT                          \\n\\\\** Š **\\\\ \\\\char 160 THINF_ACCENT_L                                 \\n\\n\\\\char 161 MALTA_W_HOOK TW_MH     \\n\\\\char 178 THINF_ACCENT_XS                                 \\n\\n\\\\char 180 VALA_W_HOOK TW_MH_BELERIANDIC      \\n\\\\char 181 PUSTA_4\\n\\\\char 182 PUSTA_5\\n                 \\n\\\\char 192 THINF_DSTROKE_XL     \\n\\n\\\\char 19C A_TEHTA_DOUBLE_XL\\n\\\\char 19D A_TEHTA_DOUBLE_L\\n\\\\char 19E A_TEHTA_DOUBLE_S\\n\\\\char 19F A_TEHTA_DOUBLE_XS\\n\\n\\\\char 1A0 E_TEHTA_DOUBLE_XL\\n\\\\char 1A1 E_TEHTA_DOUBLE_L\\n\\\\char 1A2 E_TEHTA_DOUBLE_S\\n\\\\char 1A3 E_TEHTA_DOUBLE_XS\\n\\n\\\\char 1A4 U_TEHTA_DOUBLE_XL\\n\\\\char 1A5 U_TEHTA_DOUBLE_L\\n\\\\char 1A6 U_TEHTA_DOUBLE_S\\n\\\\char 1A7 U_TEHTA_DOUBLE_XS\\n          \\n\\n\\\\char 200 DASH_INF_XS\\n\\\\char 201 TILD_INF_XS\\n\\\\char 202 DASH_SUP_XS\\n\\\\char 203 TILD_SUP_XS\\n\\n\\\\char 204 THINF_CURL_INV_XL\\n\\\\char 205 THINF_CURL_INV_L\\n\\\\char 206 THINF_CURL_INV_S\\n\\\\char 207 THINF_CURL_INV_XS\\n\\n\\\\** Non attested but might exist by principle. Beware, order is revesed. **\\\\\\n\\\\char 20C E_TEHTA_GRAVE_INF_XS\\n\\\\char 20D E_TEHTA_GRAVE_INF_L\\n\\\\char 20E E_TEHTA_GRAVE_INF_S\\n\\\\char 20F E_TEHTA_GRAVE_INF_XL\\n\\n\\n\\\\char 10FB PUSTA_4_HALFED\\n\\\\char 2E2C PUSTA_4_SQUARED\\n\\n                  \\n\\\\** ˆ **\\\\ \\\\char 2c6 PUNCT_TDOT PUSTA_3                                 \\n\\\\** ˜ **\\\\ \\\\char 2dc TH_SUB_CIRC_XL                                 \\n\\\\** – **\\\\ \\\\char 2013 ANCA_CLOSED SILME_AHA                                \\n\\\\** — **\\\\ \\\\char 2014 OLD_ENGLISH_AND                                \\n\\\\** ‘ **\\\\ \\\\char 2018 ?                                \\n\\\\** ’ **\\\\ \\\\char 2019 ?                                \\n\\\\** ‚ **\\\\ \\\\char 201a LAMBE_MARK_DSTROKE                                \\n\\\\** “ **\\\\ \\\\char 201c ?                                \\n\\\\** ” **\\\\ \\\\char 201d ?                                \\n\\\\** „ **\\\\ \\\\char 201e THINF_DSTROKE_L                                \\n\\\\** † **\\\\ \\\\char 2020 THINF_DSTROKE_XS                                \\n\\\\** ‡ **\\\\ \\\\char 2021 ?                                \\n\\\\** • **\\\\ \\\\char 2022 TW_HW_LOWDHAM HARP_SHAPED                                \\n\\\\** … **\\\\ \\\\char 2026 THINF_DSTROKE_S                                \\n\\\\** ‰ **\\\\ \\\\char 2030 THINF_ACCENT_XL                                \\n\\\\** ‹ **\\\\ \\\\char 2039 THINF_ACCENT_S                                \\n\\\\** › **\\\\ \\\\char 203a ELVISH_PAREN BOOKMARK_SIGN                                \\n\\\\** ™ **\\\\ \\\\char 2122 TH_SUB_CIRC_L                            \\n\\n\\n\\\\** The following virtual chars are used to handle tehtar (& the like) multiple version chosing **\\\\\\n\\\\** It could be avoided with modern fonts with gsub/gpos tables for ligatures and diacritics **\\\\\\n\\\\** placement **\\\\\\n\\n\\\\** DUMPED FROM THE VIRTUAL CHARS TOOL **\\\\\\n\\n\\\\beg virtual A_TEHTA\\n  \\\\class A_TEHTA_XS TELCO ARA HALLA HYARMEN\\n  \\\\class A_TEHTA_S SULE FORMEN TW_EXT_11 TW_EXT_12 HARP_SHAPED AHA_TINCO HWESTA_TINCO NUM_4 NUM_8\\n  \\\\class A_TEHTA_L TINCO PARMA CALMA QUESSE AHA HWESTA ORE VALA ANNA VILYA TW_EXT_13 TW_EXT_14 ROMEN ARDA LAMBE ALDA SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA YANTA URE OSSE VALA_W_HOOK SHOOK_BEAUTIFUL NUM_0 NUM_1 NUM_5 NUM_7 NUM_10 NUM_11\\n  \\\\class A_TEHTA_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 SILME ESSE HWESTA_SINDARINWA VAIA MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_6 NUM_9\\n\\\\end\\n\\n\\\\beg virtual A_TEHTA_CIRCUM\\n  \\\\class A_TEHTA_CIRCUM_XS TELCO ARA HALLA HYARMEN\\n  \\\\class A_TEHTA_CIRCUM_S SULE FORMEN TW_EXT_11 TW_EXT_12 HARP_SHAPED AHA_TINCO HWESTA_TINCO NUM_0 NUM_4 NUM_8\\n  \\\\class A_TEHTA_CIRCUM_L TINCO PARMA CALMA QUESSE AHA HWESTA ORE VALA ANNA VILYA TW_EXT_13 TW_EXT_14 ROMEN ARDA LAMBE ALDA SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA YANTA URE OSSE VALA_W_HOOK SHOOK_BEAUTIFUL NUM_1 NUM_2 NUM_5 NUM_7 NUM_10 NUM_11\\n  \\\\class A_TEHTA_CIRCUM_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 SILME ESSE HWESTA_SINDARINWA VAIA MALTA_W_HOOK ANCA_CLOSED NUM_3 NUM_6 NUM_9\\n\\\\end\\n\\n\\\\beg virtual A_TEHTA_REVERSED\\n  \\\\class A_TEHTA_INV_XS TELCO ARA HALLA HYARMEN\\n  \\\\class A_TEHTA_INV_S SULE FORMEN TW_EXT_11 TW_EXT_12 HARP_SHAPED AHA_TINCO HWESTA_TINCO NUM_4 NUM_8\\n  \\\\class A_TEHTA_INV_L TINCO PARMA CALMA QUESSE AHA HWESTA ORE VALA ANNA VILYA TW_EXT_13 TW_EXT_14 ROMEN ARDA LAMBE ALDA SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA YANTA URE OSSE VALA_W_HOOK SHOOK_BEAUTIFUL NUM_0 NUM_1 NUM_5 NUM_7 NUM_10 NUM_11\\n  \\\\class A_TEHTA_INV_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 SILME ESSE HWESTA_SINDARINWA VAIA MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_6 NUM_9\\n\\\\end\\n\\n\\\\beg virtual A_TEHTA_CIRCUM_REVERSED TEHTA_BREVE\\n  \\\\class THSUP_TICK_XS TELCO ARA HALLA HYARMEN\\n  \\\\class THSUP_TICK_S SULE FORMEN TW_EXT_11 TW_EXT_12 HARP_SHAPED AHA_TINCO HWESTA_TINCO NUM_0 NUM_4 NUM_8\\n  \\\\class THSUP_TICK_L TINCO PARMA CALMA QUESSE AHA HWESTA ORE VALA ANNA VILYA TW_EXT_13 TW_EXT_14 ROMEN ARDA LAMBE ALDA SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA YANTA URE OSSE VALA_W_HOOK SHOOK_BEAUTIFUL NUM_1 NUM_5 NUM_7 NUM_10 NUM_11\\n  \\\\class THSUP_TICK_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 SILME ESSE HWESTA_SINDARINWA VAIA MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_6 NUM_9\\n\\\\end\\n\\n\\\\beg virtual E_TEHTA\\n  \\\\class E_TEHTA_XS TELCO ARA HALLA HYARMEN\\n  \\\\class E_TEHTA_S SULE FORMEN TW_EXT_11 TW_EXT_12 HARP_SHAPED AHA_TINCO HWESTA_TINCO NUM_0 NUM_4 NUM_8\\n  \\\\class E_TEHTA_L TINCO PARMA CALMA QUESSE AHA HWESTA ORE VALA ANNA VILYA TW_EXT_13 TW_EXT_14 ROMEN ARDA LAMBE ALDA SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA YANTA URE OSSE VALA_W_HOOK SHOOK_BEAUTIFUL NUM_1 NUM_5 NUM_7 NUM_10 NUM_11\\n  \\\\class E_TEHTA_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 SILME ESSE HWESTA_SINDARINWA VAIA MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_6 NUM_9\\n\\\\end\\n\\n\\\\beg virtual E_TEHTA_GRAVE\\n  \\\\class E_TEHTA_GRAVE_XS TELCO ARA HALLA HYARMEN\\n  \\\\class E_TEHTA_GRAVE_S SULE FORMEN TW_EXT_11 TW_EXT_12 HARP_SHAPED AHA_TINCO HWESTA_TINCO NUM_4 NUM_8\\n  \\\\class E_TEHTA_GRAVE_L TINCO PARMA CALMA QUESSE AHA HWESTA ORE VALA ANNA VILYA TW_EXT_13 TW_EXT_14 ROMEN ARDA LAMBE ALDA SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA YANTA URE OSSE VALA_W_HOOK SHOOK_BEAUTIFUL NUM_0 NUM_1 NUM_5 NUM_7 NUM_10 NUM_11\\n  \\\\class E_TEHTA_GRAVE_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 SILME ESSE HWESTA_SINDARINWA VAIA MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_6 NUM_9\\n\\\\end\\n\\n\\\\beg virtual I_TEHTA\\n  \\\\class I_TEHTA_XS TELCO ARA HALLA HYARMEN\\n  \\\\class I_TEHTA_S SULE FORMEN TW_EXT_11 TW_EXT_12 HARP_SHAPED AHA_TINCO HWESTA_TINCO NUM_4 NUM_8\\n  \\\\class I_TEHTA_L TINCO PARMA CALMA QUESSE AHA HWESTA ORE VALA ANNA VILYA TW_EXT_13 TW_EXT_14 ROMEN ARDA LAMBE ALDA SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA YANTA URE OSSE VALA_W_HOOK SHOOK_BEAUTIFUL NUM_0 NUM_1 NUM_5 NUM_7 NUM_10 NUM_11\\n  \\\\class I_TEHTA_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 SILME ESSE HWESTA_SINDARINWA VAIA MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_6 NUM_9\\n\\\\end\\n\\n\\\\beg virtual O_TEHTA\\n  \\\\class O_TEHTA_XS TELCO ARA HALLA HYARMEN\\n  \\\\class O_TEHTA_S SULE FORMEN TW_EXT_11 TW_EXT_12 HARP_SHAPED AHA_TINCO HWESTA_TINCO NUM_4 NUM_8\\n  \\\\class O_TEHTA_L TINCO PARMA CALMA QUESSE AHA HWESTA ORE VALA ANNA VILYA TW_EXT_13 TW_EXT_14 ROMEN ARDA LAMBE ALDA SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA YANTA URE OSSE VALA_W_HOOK SHOOK_BEAUTIFUL NUM_0 NUM_1 NUM_5 NUM_7 NUM_10 NUM_11\\n  \\\\class O_TEHTA_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 SILME ESSE HWESTA_SINDARINWA VAIA MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_6 NUM_9\\n\\\\end\\n\\n\\\\beg virtual U_TEHTA\\n  \\\\class U_TEHTA_XS TELCO ARA HALLA HYARMEN\\n  \\\\class U_TEHTA_S SULE FORMEN TW_EXT_11 TW_EXT_12 HARP_SHAPED AHA_TINCO HWESTA_TINCO NUM_4 NUM_8\\n  \\\\class U_TEHTA_L TINCO PARMA CALMA QUESSE AHA HWESTA ORE VALA ANNA VILYA TW_EXT_13 TW_EXT_14 ROMEN ARDA LAMBE ALDA SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA YANTA URE OSSE VALA_W_HOOK SHOOK_BEAUTIFUL NUM_0 NUM_1 NUM_5 NUM_7 NUM_10 NUM_11\\n  \\\\class U_TEHTA_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 SILME ESSE HWESTA_SINDARINWA VAIA MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_6 NUM_9\\n\\\\end\\n\\n\\\\beg virtual WA_TEHTA\\n  \\\\class WA_TEHTA_XS TELCO ARA HALLA HYARMEN\\n  \\\\class WA_TEHTA_S SULE FORMEN TW_EXT_11 TW_EXT_12 HARP_SHAPED AHA_TINCO HWESTA_TINCO NUM_4 NUM_8\\n  \\\\class WA_TEHTA_L TINCO PARMA CALMA QUESSE AHA HWESTA ORE VALA ANNA VILYA TW_EXT_13 TW_EXT_14 ROMEN ARDA LAMBE ALDA SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA YANTA URE OSSE VALA_W_HOOK SHOOK_BEAUTIFUL NUM_0 NUM_1 NUM_5 NUM_7 NUM_10 NUM_11\\n  \\\\class WA_TEHTA_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 SILME ESSE HWESTA_SINDARINWA VAIA MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_6 NUM_9\\n\\\\end\\n\\n\\\\beg virtual A_TEHTA_DOUBLE\\n  \\\\class A_TEHTA_DOUBLE_XS TELCO ARA HALLA HYARMEN HARP_SHAPED\\n  \\\\class A_TEHTA_DOUBLE_S SULE FORMEN TW_EXT_11 TW_EXT_12 AHA_TINCO HWESTA_TINCO NUM_4 NUM_8\\n  \\\\class A_TEHTA_DOUBLE_L TINCO PARMA CALMA QUESSE AHA HWESTA ORE VALA ANNA VILYA TW_EXT_13 TW_EXT_14 ROMEN ARDA LAMBE ALDA SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA YANTA URE OSSE VALA_W_HOOK SHOOK_BEAUTIFUL NUM_0 NUM_1 NUM_5 NUM_7 NUM_10 NUM_11\\n  \\\\class A_TEHTA_DOUBLE_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 SILME ESSE HWESTA_SINDARINWA VAIA MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_6 NUM_9\\n\\\\end\\n\\n\\\\beg virtual E_TEHTA_DOUBLE\\n  \\\\class E_TEHTA_DOUBLE_XS TELCO ARA HALLA HYARMEN HARP_SHAPED\\n  \\\\class E_TEHTA_DOUBLE_S SULE FORMEN TW_EXT_11 TW_EXT_12 AHA_TINCO HWESTA_TINCO\\n  \\\\class E_TEHTA_DOUBLE_L TINCO PARMA CALMA QUESSE AHA HWESTA ORE VALA ANNA VILYA TW_EXT_13 TW_EXT_14 ROMEN ARDA LAMBE ALDA SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA YANTA URE OSSE VALA_W_HOOK SHOOK_BEAUTIFUL NUM_0 NUM_1 NUM_4 NUM_8 NUM_10 NUM_11\\n  \\\\class E_TEHTA_DOUBLE_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 SILME ESSE HWESTA_SINDARINWA VAIA MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_5 NUM_6 NUM_7 NUM_9\\n\\\\end\\n\\n\\\\beg virtual I_TEHTA_DOUBLE Y_TEHTA\\n  \\\\class I_TEHTA_DOUBLE_XS TELCO ARA HALLA HYARMEN HARP_SHAPED\\n  \\\\class I_TEHTA_DOUBLE_S SULE FORMEN TW_EXT_11 TW_EXT_12 AHA_TINCO HWESTA_TINCO NUM_4 NUM_8\\n  \\\\class I_TEHTA_DOUBLE_L TINCO PARMA CALMA QUESSE AHA HWESTA ORE VALA ANNA VILYA TW_EXT_13 TW_EXT_14 ROMEN ARDA LAMBE ALDA SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA YANTA URE OSSE VALA_W_HOOK SHOOK_BEAUTIFUL NUM_0 NUM_1 NUM_5 NUM_10 NUM_11\\n  \\\\class I_TEHTA_DOUBLE_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 SILME ESSE HWESTA_SINDARINWA VAIA MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_6 NUM_7 NUM_9\\n\\\\end\\n\\n\\\\beg virtual O_TEHTA_DOUBLE\\n  \\\\class O_TEHTA_DOUBLE_XS TELCO ARA HALLA HYARMEN HARP_SHAPED\\n  \\\\class O_TEHTA_DOUBLE_S SULE FORMEN TW_EXT_11 TW_EXT_12 AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_4 NUM_8\\n  \\\\class O_TEHTA_DOUBLE_L TINCO PARMA CALMA QUESSE AHA HWESTA ORE VALA ANNA VILYA TW_EXT_13 TW_EXT_14 ROMEN ARDA LAMBE ALDA SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA YANTA URE OSSE VALA_W_HOOK SHOOK_BEAUTIFUL NUM_2 NUM_5 NUM_7 NUM_9 NUM_10 NUM_11\\n  \\\\class O_TEHTA_DOUBLE_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 SILME ESSE HWESTA_SINDARINWA VAIA MALTA_W_HOOK ANCA_CLOSED NUM_3 NUM_6\\n\\\\end\\n\\n\\\\beg virtual U_TEHTA_DOUBLE\\n  \\\\class U_TEHTA_DOUBLE_XS TELCO ARA HALLA HYARMEN HARP_SHAPED\\n  \\\\class U_TEHTA_DOUBLE_S SULE FORMEN TW_EXT_11 TW_EXT_12 AHA_TINCO HWESTA_TINCO\\n  \\\\class U_TEHTA_DOUBLE_L TINCO PARMA CALMA QUESSE AHA HWESTA ORE VALA ANNA VILYA TW_EXT_13 TW_EXT_14 ROMEN ARDA LAMBE ALDA SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA YANTA URE OSSE VALA_W_HOOK SHOOK_BEAUTIFUL NUM_0 NUM_1 NUM_4 NUM_5 NUM_8 NUM_10 NUM_11\\n  \\\\class U_TEHTA_DOUBLE_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 SILME ESSE HWESTA_SINDARINWA VAIA MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_6 NUM_7 NUM_9\\n\\\\end\\n\\n\\\\beg virtual A_TEHTA_INF\\n  \\\\class THINF_TDOT_XS TELCO ARA HALLA ROMEN ARDA SILME_NUQUERNA HARP_SHAPED\\n  \\\\class THINF_TDOT_S TINCO PARMA TW_EXT_11 TW_EXT_12 SHOOK_BEAUTIFUL AHA_TINCO HWESTA_TINCO NUM_4\\n  \\\\class THINF_TDOT_L SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA LAMBE ALDA SILME SILME_NUQUERNA_ALT ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA YANTA URE OSSE NUM_0 NUM_1 NUM_7 NUM_8 NUM_10 NUM_11\\n  \\\\class THINF_TDOT_XL CALMA QUESSE ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_13 TW_EXT_14 TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 VAIA MALTA_W_HOOK VALA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_5 NUM_6 NUM_9\\n\\\\end\\n\\n\\\\beg virtual E_TEHTA_INF\\n  \\\\class THINF_ACCENT_XS TELCO ARA HALLA ROMEN ARDA SILME_NUQUERNA HARP_SHAPED\\n  \\\\class THINF_ACCENT_S TINCO PARMA TW_EXT_11 TW_EXT_12 SHOOK_BEAUTIFUL AHA_TINCO HWESTA_TINCO\\n  \\\\class THINF_ACCENT_L SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA LAMBE ALDA SILME SILME_NUQUERNA_ALT ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA YANTA URE OSSE NUM_0 NUM_1 NUM_4 NUM_7 NUM_8 NUM_10 NUM_11\\n  \\\\class THINF_ACCENT_XL CALMA QUESSE ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_13 TW_EXT_14 TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 VAIA MALTA_W_HOOK VALA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_5 NUM_6 NUM_9\\n\\\\end\\n\\n\\\\beg virtual E_TEHTA_GRAVE_INF\\n  \\\\class E_TEHTA_GRAVE_INF_XS TELCO ARA HALLA HARP_SHAPED\\n  \\\\class E_TEHTA_GRAVE_INF_S CALMA QUESSE SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA TW_EXT_13 TW_EXT_14 LAMBE ALDA SILME_NUQUERNA_ALT ESSE ESSE_NUQUERNA HWESTA_SINDARINWA YANTA NUM_2 NUM_7 NUM_8\\n  \\\\class E_TEHTA_GRAVE_INF_L TINCO PARMA TW_EXT_11 TW_EXT_12 ROMEN ARDA SILME SILME_NUQUERNA HYARMEN URE OSSE SHOOK_BEAUTIFUL AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_4 NUM_10 NUM_11\\n  \\\\class E_TEHTA_GRAVE_INF_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 VAIA MALTA_W_HOOK VALA_W_HOOK ANCA_CLOSED NUM_3 NUM_5 NUM_6 NUM_9\\n\\\\end\\n\\n\\\\beg virtual CIRC_TEHTA_INF\\n  \\\\class TH_SUB_CIRC_XS TELCO ARA HALLA ROMEN ARDA SILME_NUQUERNA HARP_SHAPED\\n  \\\\class TH_SUB_CIRC_S TINCO PARMA TW_EXT_11 TW_EXT_12 SHOOK_BEAUTIFUL AHA_TINCO HWESTA_TINCO\\n  \\\\class TH_SUB_CIRC_L SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA LAMBE ALDA SILME SILME_NUQUERNA_ALT ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA YANTA URE OSSE NUM_0 NUM_1 NUM_4 NUM_7 NUM_8 NUM_10 NUM_11\\n  \\\\class TH_SUB_CIRC_XL CALMA QUESSE ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_13 TW_EXT_14 TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 VAIA MALTA_W_HOOK VALA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_5 NUM_6 NUM_9\\n\\\\end\\n\\n\\\\beg virtual THINNAS  THINF_STROKE\\n  \\\\class THINF_STROKE_XS TELCO ARA HALLA ROMEN ARDA SILME_NUQUERNA HARP_SHAPED\\n  \\\\class THINF_STROKE_S TINCO PARMA TW_EXT_11 TW_EXT_12 SHOOK_BEAUTIFUL AHA_TINCO HWESTA_TINCO\\n  \\\\class THINF_STROKE_L SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA LAMBE ALDA SILME SILME_NUQUERNA_ALT ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA YANTA URE OSSE NUM_0 NUM_1 NUM_4 NUM_7 NUM_8 NUM_10 NUM_11\\n  \\\\class THINF_STROKE_XL CALMA QUESSE ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_13 TW_EXT_14 TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 VAIA MALTA_W_HOOK VALA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_5 NUM_6 NUM_9\\n\\\\end\\n\\n\\\\beg virtual O_TEHTA_INF\\n  \\\\class THINF_CURL_XS TELCO ARA HALLA ROMEN ARDA SILME_NUQUERNA HARP_SHAPED\\n  \\\\class THINF_CURL_S TINCO PARMA TW_EXT_11 TW_EXT_12 SHOOK_BEAUTIFUL AHA_TINCO HWESTA_TINCO\\n  \\\\class THINF_CURL_L SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA LAMBE ALDA SILME SILME_NUQUERNA_ALT ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA YANTA URE OSSE NUM_0 NUM_1 NUM_4 NUM_5 NUM_7 NUM_8 NUM_10 NUM_11\\n  \\\\class THINF_CURL_XL CALMA QUESSE ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_13 TW_EXT_14 TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 VAIA MALTA_W_HOOK VALA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_6 NUM_9\\n\\\\end\\n\\n\\\\beg virtual U_TEHTA_INF\\n  \\\\class THINF_CURL_INV_XS TELCO ARA HALLA ROMEN ARDA SILME_NUQUERNA HARP_SHAPED\\n  \\\\class THINF_CURL_INV_S TINCO PARMA TW_EXT_11 TW_EXT_12 SHOOK_BEAUTIFUL AHA_TINCO HWESTA_TINCO\\n  \\\\class THINF_CURL_INV_L SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA LAMBE ALDA SILME SILME_NUQUERNA_ALT ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA YANTA URE OSSE NUM_0 NUM_1 NUM_4 NUM_5 NUM_7 NUM_8 NUM_10 NUM_11\\n  \\\\class THINF_CURL_INV_XL CALMA QUESSE ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_13 TW_EXT_14 TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 VAIA MALTA_W_HOOK VALA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_6 NUM_9\\n\\\\end\\n\\n\\\\beg virtual PALATAL_SIGN I_TEHTA_DOUBLE_INF Y_TEHTA_INF\\n  \\\\class THINF_DDOT_XS TELCO ARA HALLA ROMEN ARDA SILME_NUQUERNA HARP_SHAPED\\n  \\\\class THINF_DDOT_S TINCO PARMA TW_EXT_11 TW_EXT_12 SHOOK_BEAUTIFUL AHA_TINCO HWESTA_TINCO\\n  \\\\class THINF_DDOT_L SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA SILME SILME_NUQUERNA_ALT ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA YANTA URE OSSE NUM_0 NUM_1 NUM_4 NUM_5 NUM_7 NUM_8 NUM_10 NUM_11\\n  \\\\class THINF_DDOT_XL CALMA QUESSE ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_13 TW_EXT_14 TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 VAIA MALTA_W_HOOK VALA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_6 NUM_9\\n  \\\\class LAMBE_MARK_DDOT LAMBE ALDA\\n\\\\end\\n\\n\\\\beg virtual E_TEHTA_DOUBLE_INF GEMINATE_DOUBLE\\n  \\\\class THINF_DSTROKE_XS TELCO ARA HALLA ROMEN ARDA SILME_NUQUERNA HARP_SHAPED\\n  \\\\class THINF_DSTROKE_S TINCO PARMA TW_EXT_11 TW_EXT_12 SHOOK_BEAUTIFUL AHA_TINCO HWESTA_TINCO\\n  \\\\class THINF_DSTROKE_L SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA SILME SILME_NUQUERNA_ALT ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA YANTA URE OSSE NUM_0 NUM_1 NUM_4 NUM_7 NUM_8 NUM_10 NUM_11\\n  \\\\class THINF_DSTROKE_XL CALMA QUESSE ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_13 TW_EXT_14 TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 VAIA MALTA_W_HOOK VALA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_5 NUM_6 NUM_9\\n  \\\\class LAMBE_MARK_DSTROKE LAMBE ALDA\\n\\\\end\\n\\n\\\\beg virtual UNUTIXE I_TEHTA_INF NO_VOWEL_DOT\\n  \\\\class THINF_DOT_XS TELCO ARA HALLA ROMEN ARDA SILME_NUQUERNA HARP_SHAPED\\n  \\\\class THINF_DOT_S TINCO PARMA TW_EXT_11 TW_EXT_12 SHOOK_BEAUTIFUL AHA_TINCO HWESTA_TINCO\\n  \\\\class THINF_DOT_L SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA SILME SILME_NUQUERNA_ALT ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA YANTA URE OSSE NUM_0 NUM_1 NUM_4 NUM_7 NUM_8 NUM_10 NUM_11\\n  \\\\class THINF_DOT_XL CALMA QUESSE ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_13 TW_EXT_14 TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 VAIA MALTA_W_HOOK VALA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_5 NUM_6 NUM_9\\n  \\\\class LAMBE_MARK_DOT LAMBE ALDA\\n\\\\end\\n\\n\\\\beg virtual GEMINATE_SIGN\\n  \\\\class DASH_INF_XS TELCO ARA HALLA\\n  \\\\class DASH_INF_S TINCO PARMA CALMA QUESSE SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA TW_EXT_11 TW_EXT_12 TW_EXT_13 TW_EXT_14 ROMEN ARDA SILME SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA YANTA URE OSSE VALA_W_HOOK SHOOK_BEAUTIFUL HARP_SHAPED AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_4 NUM_7 NUM_8 NUM_10 NUM_11\\n  \\\\class DASH_INF_L ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 VAIA MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_5 NUM_6 NUM_9\\n  \\\\class LAMBE_MARK_DASH LAMBE ALDA\\n\\\\end\\n\\n\\\\beg virtual GEMINATE_SIGN_TILD\\n  \\\\class TILD_INF_XS TELCO ARA HALLA\\n  \\\\class TILD_INF_S TINCO PARMA CALMA QUESSE SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA TW_EXT_11 TW_EXT_12 TW_EXT_13 TW_EXT_14 ROMEN ARDA SILME SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA YANTA URE OSSE VALA_W_HOOK SHOOK_BEAUTIFUL HARP_SHAPED AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_4 NUM_7 NUM_8 NUM_10 NUM_11\\n  \\\\class TILD_INF_L ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 VAIA MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_5 NUM_6 NUM_9\\n  \\\\class LAMBE_MARK_TILD LAMBE ALDA\\n\\\\end\\n\\n\\\\beg virtual NASALIZE_SIGN\\n  \\\\class DASH_SUP_XS TELCO ARA HALLA\\n  \\\\class DASH_SUP_S TINCO PARMA CALMA QUESSE SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA TW_EXT_11 TW_EXT_12 TW_EXT_13 TW_EXT_14 ROMEN ARDA LAMBE ALDA SILME SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA YANTA URE OSSE VALA_W_HOOK SHOOK_BEAUTIFUL HARP_SHAPED AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_4 NUM_7 NUM_8 NUM_10 NUM_11\\n  \\\\class DASH_SUP_L ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 VAIA MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_5 NUM_6 NUM_9\\n\\\\end\\n\\n\\\\beg virtual NASALIZE_SIGN_TILD\\n  \\\\class TILD_SUP_XS TELCO ARA HALLA\\n  \\\\class TILD_SUP_S TINCO PARMA CALMA QUESSE SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA TW_EXT_11 TW_EXT_12 TW_EXT_13 TW_EXT_14 ROMEN ARDA LAMBE ALDA SILME SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA YANTA URE OSSE VALA_W_HOOK SHOOK_BEAUTIFUL HARP_SHAPED AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_4 NUM_5 NUM_7 NUM_8 NUM_10 NUM_11\\n  \\\\class TILD_SUP_L ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 VAIA MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_6 NUM_9\\n\\\\end\\n\\n\\\\beg virtual SARINCE\\n  \\\\class SHOOK_LEFT_L CALMA QUESSE ANGA UNGWE TW_EXT_13 TW_EXT_14 TW_EXT_23 TW_EXT_24 HWESTA_SINDARINWA\\n  \\\\class SHOOK_RIGHT_L TELCO ARA HALLA TINCO PARMA ANDO UMBAR SULE FORMEN AHA HWESTA ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME ORE VALA ANNA VILYA TW_EXT_11 TW_EXT_12 TW_EXT_21 TW_EXT_22 ROMEN ARDA LAMBE ALDA SILME SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE ESSE_NUQUERNA HYARMEN YANTA URE OSSE VAIA MALTA_W_HOOK VALA_W_HOOK SHOOK_BEAUTIFUL ANCA_CLOSED HARP_SHAPED AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_2 NUM_3 NUM_4 NUM_5 NUM_6 NUM_7 NUM_8 NUM_9 NUM_10 NUM_11\\n\\\\end\\n\"\nGlaemscribe.resource_manager.raw_charsets[\"tengwar_freemono\"] = \"\\\\**\\n\\nGlǽmscribe (also written Glaemscribe) is a software dedicated to\\nthe transcription of texts between writing systems, and more \\nspecifically dedicated to the transcription of J.R.R. Tolkien\\'s \\ninvented languages to some of his devised writing systems.\\n\\nCopyright (C) 2015 Benjamin Babut (Talagan).\\n\\nThis program is free software: you can redistribute it and/or modify\\nit under the terms of the GNU Affero General Public License as published by\\nthe Free Software Foundation, either version 3 of the License, or\\nany later version.\\n\\nThis program is distributed in the hope that it will be useful,\\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\nGNU Affero General Public License for more details.\\n\\nYou should have received a copy of the GNU Affero General Public License\\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\\n\\n**\\\\\\n\\n\\\\** Charset for the FreeMonoTengwar font **\\\\ \\n\\n\\\\version 0.1.0\\n\\n\\\\beg changelog\\n  \\\\entry \\\"0.0.5\\\" \\\"Added VALA_W_HOOK.\\\"\\n  \\\\entry \\\"0.0.6\\\" \\\"Updating punctuation\\\"\\n  \\\\entry \\\"0.0.7\\\" \\\"Fixed missing tinco_ext / sule_ext\\\"\\n  \\\\entry \\\"0.0.8\\\" \\\"Added NBSP\\\"\\n  \\\\entry \\\"0.0.9\\\" \\\"Replaced fixed ligatures by their dynamic sequence\\\"\\n  \\\\entry \\\"0.1.0\\\" \\\"Added ELVISH_PAREN tokien, reworked sarince token names.\\\"\\n\\\\end\\n\\n\\\\char 20 SPACE\\n\\\\char a0 NBSP\\n\\n\\\\** PUSTAR, take them in unicode not in personnal use (deprecation) **\\\\\\n\\\\char 2e31 PUNCT_DOT\\n\\\\char   3a PUNCT_DDOT\\n\\\\char 205D PUNCT_TDOT PUSTA_3\\n\\\\char 2058 PUSTA_4\\n\\\\char 10FB PUSTA_4_HALFED\\n\\\\char 2E2C PUSTA_4_SQUARED\\n\\\\char 2E2D PUSTA_5\\n\\n\\\\char e000  TW_11 TINCO     \\n\\\\char e001  TW_12 PARMA\\n\\\\char e002  TW_13 CALMA\\n\\\\char e003  TW_14 QUESSE\\n\\n\\\\char e004  TW_21 ANDO  \\n\\\\char e005  TW_22 UMBAR\\n\\\\char e006  TW_23 ANGA  \\n\\\\char e007  TW_24 UNGWE\\n      \\n\\\\char e008  TW_31 SULE THULE\\n\\\\char e009  TW_32 FORMEN\\n\\\\char e00A  TW_33 AHA  \\n\\\\char e00B  TW_34 HWESTA\\n\\n\\\\char e00C  TW_41 ANTO\\n\\\\char e00D  TW_42 AMPA\\n\\\\char e00E  TW_43 ANCA\\n\\\\char e00F  TW_44 UNQUE\\n\\n\\\\char e010  TW_51 NUMEN \\n\\\\char e011  TW_52 MALTA\\n\\\\char e012  TW_53 NOLDO\\n\\\\char e013  TW_54 NWALME\\n\\n\\\\char e014  TW_61 ORE\\n\\\\char e015  TW_62 VALA\\n\\\\char e016  TW_63 ANNA\\n\\\\char e017  TW_64 VILYA\\n\\n\\\\char e018  TW_EXT_11 TINCO_EXT SULE_EXT THULE_EXT\\n\\\\char e019  TW_EXT_12 PARMA_EXT FORMEN_EXT \\n\\\\char e01A  TW_EXT_13 CALMA_EXT AHA_EXT\\n\\\\char e01B  TW_EXT_14 QUESSE_EXT HWESTA_EXT\\n        \\n\\\\char e01C  TW_EXT_21 ANDO_EXT ANTO_EXT \\n\\\\char e01D  TW_EXT_22 UMBAR_EXT AMPA_EXT\\n\\\\char e01E  TW_EXT_23 ANGA_EXT ANCA_EXT\\n\\\\char e01F  TW_EXT_24 UNGWE_EXT UNQUE_EXT\\n\\n\\\\char e020  TW_71 ROMEN\\n\\\\char e021  TW_72 ARDA\\n\\\\char e022  TW_73 LAMBE\\n\\\\char e023  TW_74 ALDA \\n\\n\\\\char e024  TW_81 SILME \\n\\\\** Unfortunately, monotengwar is missing silme nuquerna used for y in beleriand **\\\\\\n\\\\char e025  TW_82 SILME_NUQUERNA SILME_NUQUERNA_ALT\\n\\\\char e026  TW_83 ESSE\\n\\\\char e027  TW_84 ESSE_NUQUERNA\\n\\n\\\\char e028  TW_91 HYARMEN \\n\\\\char e029  TW_92 HWESTA_SINDARINWA \\n\\\\char e02A  TW_93 YANTA\\n\\\\char e02B  TW_94 URE\\n\\n\\\\char e02C  ARA\\n\\\\char e02D  HALLA\\n\\\\char e02E  TELCO\\n\\\\char e02F  ?      \\n\\n\\\\char e030  REVERSED_OSSE\\n\\\\char e031  BOMBADIL_W \\n\\\\char e032  OSSE\\n\\\\char e033  ?\\n\\n\\\\char e034  LIGATING_SHORT_CARRIER\\n\\\\char e035  ?\\n\\\\char e036  ANNA_OPEN\\n\\\\char e037  CHRISTOPHER_QU\\n\\n\\\\char e038  ?\\n\\\\char e039  BOMBADIL_HW\\n\\\\char e03A  TW_MH MALTA_W_HOOK \\n\\\\char e03B  TW_MH_BELERIANDIC VALA_W_HOOK \\n\\n\\\\char e03C  TW_HW_LOWDHAM HARP_SHAPED\\n\\\\char e03D  VAIA WAIA VAIYA\\n\\\\char e03E  ?\\n\\\\char e03F  ?      \\n\\n\\\\char e040  A_TEHTA\\n\\\\char e041  A_TEHTA_INF\\n\\\\char e042  I_TEHTA_DOUBLE Y_TEHTA\\n\\\\char e043  I_TEHTA_DOUBLE_INF PALATAL_SIGN Y_TEHTA_INF \\n\\n\\\\char e044  I_TEHTA\\n\\\\char e045  I_TEHTA_INF NO_VOWEL_DOT UNUTIXE\\n\\\\char e046  E_TEHTA\\n\\\\char e047  E_TEHTA_INF\\n\\n\\\\char e048  E_TEHTA_DOUBLE\\n\\\\char e049  E_TEHTA_DOUBLE_INF GEMINATE_DOUBLE\\n\\\\char e04A  O_TEHTA\\n\\\\char e04B  O_TEHTA_INF\\n\\n\\\\char e04C  U_TEHTA\\n\\\\char e04D  U_TEHTA_INF\\n\\\\char e04E  O_TEHTA_DOUBLE\\n\\\\char e04F  U_TEHTA_DOUBLE\\n\\n\\\\char e050  NASALIZE_SIGN NASALIZE_SIGN_TILD      \\n\\\\char e051  GEMINATE_SIGN GEMINATE_SIGN_TILD\\n\\\\char e052  WA_TEHTA SEV_TEHTA\\n\\\\char e053  TEHTA_BREVE A_TEHTA_CIRCUM_REVERSED\\n\\n\\\\char e054  E_TEHTA_GRAVE\\n\\\\char e055  A_TEHTA_CIRCUM  \\n\\\\char e056  A_TEHTA_REVERSED A_TEHTA_DOUBLE\\n\\\\char e057  THINNAS  THINF_STROKE\\n\\n\\\\** THE TWO FOLLOWING ONES ARE HIGHLY DISCUSSABLE, MAYBE WE SHOULD ADD A VIRTUAL CHAR FOR THESE **\\\\\\n\\\\char e058  SARINCE_ENDING_LONG SARINCE_FLOURISHED\\n\\\\char e059  SARINCE COMBINING_SARINCE SHOOK_RIGHT_L SHOOK_LEFT_L \\n\\\\char e05A  ?\\n\\\\char e05B  ?\\n\\n\\\\char e065  PUNCT_EXCLAM\\n\\\\char e066  PUNCT_INTERR\\n\\\\char e067  ELVISH_PAREN PUNCT_PAREN_L PUNCT_PAREN_R PUNCT_PAREN_L_ALT PUNCT_PAREN_R_ALT BOOKMARK_SIGN\\n\\\\char e068  PUNCT_TILD\\n \\n\\\\char e069  PUNCT_DTILD RING_MARK_L RING_MARK_R\\n\\n\\\\char e06A  DQUOT_OPEN\\n\\\\char e06B  DQUOT_CLOSE\\n\\\\char e06C  THORIN_EXCLAMATION\\n\\n\\\\char e070 NUM_0 \\n\\\\char e071 NUM_1 \\n\\\\char e072 NUM_2 \\n\\\\char e073 NUM_3 \\n\\\\char e074 NUM_4 \\n\\\\char e075 NUM_5 \\n\\\\char e076 NUM_6 \\n\\\\char e077 NUM_7 \\n\\\\char e078 NUM_8 \\n\\\\char e079 NUM_9 \\n\\\\char e07A NUM_10\\n\\\\char e07B NUM_11\\n\\\\char e07C NUM_12\\n\\n\\\\char e07D CIRC_TEHTA_INF\\n\\n\\\\** Ligatured results are mapped here **\\\\\\n\\\\**\\n\\\\char 10037 AHA_TINCO\\n\\\\char 10038 HWESTA_TINCO\\n\\\\char 10039 ANCA_CLOSED SILME_AHA\\n**\\\\\\n\\n\\\\char 204A OLD_ENGLISH_AND\\n\\n\\\\char 200d ZWJ\\n\\n\\\\** Ligatured sequences used as one entity in modes **\\\\\\n\\\\beg seq AHA_TINCO\\n  AHA ZWJ TINCO\\n\\\\end\\n\\n\\\\beg seq HWESTA_TINCO\\n  HWESTA ZWJ TINCO\\n\\\\end\\n\\n\\\\beg seq ANCA_CLOSED SILME_AHA\\n  SILME ZWJ AHA\\n\\\\end\\n\\n\"\nGlaemscribe.resource_manager.raw_charsets[\"tengwar_guni_annatar\"] = \"\\\\**\\n\\nGlǽmscribe (also written Glaemscribe) is a software dedicated to\\nthe transcription of texts between writing systems, and more \\nspecifically dedicated to the transcription of J.R.R. Tolkien\\'s \\ninvented languages to some of his devised writing systems.\\n\\nCopyright (C) 2015 Benjamin Babut (Talagan).\\n\\nThis program is free software: you can redistribute it and/or modify\\nit under the terms of the GNU Affero General Public License as published by\\nthe Free Software Foundation, either version 3 of the License, or\\nany later version.\\n\\nThis program is distributed in the hope that it will be useful,\\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\nGNU Affero General Public License for more details.\\n\\nYou should have received a copy of the GNU Affero General Public License\\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\\n\\n**\\\\\\n\\n\\\\** Charset specially customized for Tengwar Annatar (Glaemscrafu patched version) **\\\\ \\n\\n\\\\version 0.1.0\\n\\n\\\\beg changelog\\n  \\\\** Changes done to the original font and inherited. **\\\\\\n  \\\\entry \\\"0.0.0\\\" \\\"Added VALA_W_HOOK, VAIYA. \\\"\\n  \\\\entry \\\"0.0.0\\\" \\\"Superior and inferior dash and tild consonant modification signs have been added for halla, telco and ara. / Added pustar combinations (4/4-halfed/4-squared/5)\\\"\\n  \\\\entry \\\"0.0.0\\\" \\\"Fixed missing tinco_ext / sule_ext\\\"\\n  \\\\entry \\\"0.0.0\\\" \\\"Added NBSP\\\"\\n  \\n  \\\\entry \\\"0.1.0\\\" \\\"First version of the unicode layout\\\"\\n\\\\end\\n\\n\\n\\\\char 20 SPACE\\n\\\\char a0 NBSP\\n\\n\\\\char 2018 SQUOT_OPEN\\n\\\\char 2019 SQUOT_CLOSE\\n\\n\\\\char 28 PUNCT_PAREN_L \\n\\\\char 29 PUNCT_PAREN_R \\n\\\\char 5B PUNCT_PAREN_L_ALT \\n\\\\char 5D PUNCT_PAREN_R_ALT \\n\\n\\\\** PUSTAR, take them in unicode not in personnal use (deprecation) **\\\\\\n\\\\char 2e31 PUNCT_DOT\\n\\\\char   3a PUNCT_DDOT\\n\\\\char 205D PUNCT_TDOT PUSTA_3\\n\\\\char 2058 PUSTA_4\\n\\\\char 10FB PUSTA_4_HALFED\\n\\\\char 2E2C PUSTA_4_SQUARED\\n\\\\char 2E2D PUSTA_5\\n\\n\\\\char e000  TW_11 TINCO     \\n\\\\char e001  TW_12 PARMA\\n\\\\char e002  TW_13 CALMA\\n\\\\char e003  TW_14 QUESSE\\n\\\\char e004  TW_21 ANDO  \\n\\\\char e005  TW_22 UMBAR\\n\\\\char e006  TW_23 ANGA  \\n\\\\char e007  TW_24 UNGWE   \\n\\\\char e008  TW_31 SULE THULE\\n\\\\char e009  TW_32 FORMEN\\n\\\\char e00A  TW_33 AHA  \\n\\\\char e00B  TW_34 HWESTA\\n\\\\char e00C  TW_41 ANTO\\n\\\\char e00D  TW_42 AMPA\\n\\\\char e00E  TW_43 ANCA\\n\\\\char e00F  TW_44 UNQUE\\n\\n\\\\char e010  TW_51 NUMEN \\n\\\\char e011  TW_52 MALTA\\n\\\\char e012  TW_53 NOLDO\\n\\\\char e013  TW_54 NWALME\\n\\\\char e014  TW_61 ORE\\n\\\\char e015  TW_62 VALA\\n\\\\char e016  TW_63 ANNA\\n\\\\char e017  TW_64 VILYA\\n\\\\char e018  TW_EXT_11 TINCO_EXT SULE_EXT THULE_EXT\\n\\\\char e019  TW_EXT_12 PARMA_EXT FORMEN_EXT \\n\\\\char e01A  TW_EXT_13 CALMA_EXT AHA_EXT\\n\\\\char e01B  TW_EXT_14 QUESSE_EXT HWESTA_EXT   \\n\\\\char e01C  TW_EXT_21 ANDO_EXT ANTO_EXT \\n\\\\char e01D  TW_EXT_22 UMBAR_EXT AMPA_EXT\\n\\\\char e01E  TW_EXT_23 ANGA_EXT ANCA_EXT\\n\\\\char e01F  TW_EXT_24 UNGWE_EXT UNQUE_EXT\\n\\n\\\\char e020  TW_71 ROMEN\\n\\\\char e021  TW_72 ARDA\\n\\\\char e022  TW_73 LAMBE_NO_LIG \\\\** LAMBE **\\\\\\n\\\\char e023  TW_74 ALDA \\n\\\\char e024  TW_81 SILME \\n\\\\char e025  TW_82 SILME_NUQUERNA \\n\\\\char e026  TW_83 ESSE\\n\\\\char e027  TW_84 ESSE_NUQUERNA\\n\\\\char e028  TW_91 HYARMEN \\n\\\\char e029  TW_92 HWESTA_SINDARINWA \\n\\\\char e02A  TW_93 YANTA\\n\\\\char e02B  TW_94 URE\\n\\\\char e02C  ARA\\n\\\\char e02D  HALLA\\n\\\\char e02E  TELCO\\n\\\\**.....**\\\\    \\n\\n\\\\char e030  REVERSED_OSSE\\n\\\\char e031  BOMBADIL_W \\n\\\\char e032  OSSE\\n\\\\**.....**\\\\ \\n\\\\char e034  LIGATING_SHORT_CARRIER\\n\\\\**..D..**\\\\ \\n\\\\char e036  ANNA_OPEN\\n\\\\char e037  CHRISTOPHER_QU\\n\\\\**..D..**\\\\ \\n\\\\char e039  BOMBADIL_HW\\n\\\\char e03A  TW_MH MALTA_W_HOOK \\n\\\\char e03B  TW_MH_BELERIANDIC VALA_W_HOOK \\n\\\\char e03C  TW_HW_LOWDHAM HARP_SHAPED\\n\\\\char e03D  VAIA WAIA VAIYA\\n\\\\**..X..**\\\\ \\n\\\\**..X..**\\\\ \\n \\n\\\\char e040  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e041  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e042  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e043  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e044  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e045  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e046  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e047  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e048  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e049  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e04A  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e04B  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e04C  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e04D  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e04E  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e04F  ? \\\\** LEGACY FONT **\\\\\\n\\n\\\\char e050  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e051  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e052  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e053  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e054  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e055  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e056  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e057  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e058  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e059  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e05A  ? \\\\** LEGACY FONT **\\\\\\n\\\\**.....**\\\\ \\n\\\\**.....**\\\\ \\n\\\\**.....**\\\\ \\n\\\\**.....**\\\\ \\n\\\\**.....**\\\\ \\n\\n\\\\**..D..**\\\\ \\n\\\\**..D..**\\\\ \\n\\\\**..D..**\\\\ \\n\\\\**..D..**\\\\ \\n\\\\**..D..**\\\\ \\n\\\\char e065  PUNCT_EXCLAM\\n\\\\char e066  PUNCT_INTERR\\n\\\\char e067  ELVISH_PAREN BOOKMARK_SIGN\\n\\\\char e068  PUNCT_TILD \\n\\\\char e069  PUNCT_DTILD\\n\\\\char e06A  DQUOT_OPEN\\n\\\\char e06B  DQUOT_CLOSE\\n\\\\char e06C  THORIN_EXCLAMATION\\n\\\\**.....**\\\\ \\n\\\\**..X..**\\\\ \\n\\\\**..X..**\\\\ \\n\\n\\n\\\\char e070 NUM_0 \\n\\\\char e071 NUM_1 \\n\\\\char e072 NUM_2 \\n\\\\char e073 NUM_3 \\n\\\\char e074 NUM_4 \\n\\\\char e075 NUM_5 \\n\\\\char e076 NUM_6 \\n\\\\char e077 NUM_7 \\n\\\\char e078 NUM_8 \\n\\\\char e079 NUM_9 \\n\\\\char e07A NUM_10\\n\\\\char e07B NUM_11\\n\\\\char e07C NUM_12\\n\\n\\\\** MISSING in the norm**\\\\\\n\\\\char 204A OLD_ENGLISH_AND\\n\\n\\\\char e03e SILME_NUQUERNA_ALT\\n\\\\char e06e RING_MARK_L \\n\\\\char e06f RING_MARK_R\\n\\n\\\\** LEGACY SARINCE **\\\\\\n\\n\\\\char EBD0 SARINCE_LEFT_V1 SHOOK_LEFT_L\\n\\\\char EBD1 SARINCE_LEFT_V2 SHOOK_LEFT_S\\n\\n\\\\char EBD8 SARINCE_RIGHT_V1 SHOOK_RIGHT_L\\n\\\\char EBD9 SARINCE_RIGHT_V2 SHOOK_RIGHT_S\\n\\\\char EBDA SARINCE_RIGHT_V3\\n\\n\\\\char EBE0 SARINCE_SEMI_ASCENDING_V1\\n\\n\\\\char EBE8 SARINCE_ASCENDING_V1\\n\\\\** .. **\\\\\\n\\\\char EBEA SARINCE_ASCENDING_V3\\n\\n\\\\char EBF0 SARINCE_DESCENDING_V1\\n\\n\\\\char EBF8 SARINCE_FLOURISHED_V1  SARINCE_FLOURISHED SHOOK_BEAUTIFUL\\n\\\\char EBF9 SARINCE_FLOURISHED_V2\\n\\n\\\\** Consonant modifiers **\\\\\\n\\n\\\\char EC00 DASH_INF_XS\\n\\\\char EC01 DASH_INF_S   \\n\\\\char EC02 DASH_INF_L    \\n\\\\char EC0F LAMBE_MARK_DASH \\n\\n\\\\char EC10 TILD_INF_XS\\n\\\\char EC11 TILD_INF_S   \\n\\\\char EC12 TILD_INF_L            \\n\\\\char EC1F LAMBE_MARK_TILD   \\n\\n\\\\char EC20 DASH_SUP_XS\\n\\\\char EC21 DASH_SUP_S                      \\n\\\\char EC22 DASH_SUP_L  \\n\\n\\\\char EC30 TILD_SUP_XS\\n\\\\char EC31 TILD_SUP_S  \\n\\\\char EC32 TILD_SUP_L                       \\n\\n\\\\** Base tehtar **\\\\\\n\\n\\\\char EC40 A_TEHTA_XS  \\n\\\\char EC41 A_TEHTA_S \\n\\\\char EC42 A_TEHTA_L \\n\\\\char EC43 A_TEHTA_XL       \\n\\n\\\\char EC50 E_TEHTA_XS         \\n\\\\char EC51 E_TEHTA_S\\n\\\\char EC52 E_TEHTA_L \\n\\\\char EC53 E_TEHTA_XL  \\n\\n\\\\char EC60 I_TEHTA_XS   \\n\\\\char EC61 I_TEHTA_S  \\n\\\\char EC62 I_TEHTA_L   \\n\\\\char EC63 I_TEHTA_XL   \\n      \\n\\\\char EC70 O_TEHTA_XS              \\n\\\\char EC71 O_TEHTA_S    \\n\\\\char EC72 O_TEHTA_L   \\n\\\\char EC73 O_TEHTA_XL \\n      \\n\\\\char EC80 U_TEHTA_XS \\n\\\\char EC81 U_TEHTA_S \\n\\\\char EC82 U_TEHTA_L    \\n\\\\char EC83 U_TEHTA_XL  \\n\\n\\\\** Inf tehtar **\\\\\\n\\n\\\\char EC90 THINF_TDOT_XS       \\n\\\\char EC91 THINF_TDOT_L           \\n\\\\char EC92 THINF_TDOT_S           \\n\\\\char EC93 THINF_TDOT_XL\\n\\n\\\\char ECA0 THINF_ACCENT_XS    \\n\\\\char ECA1 THINF_ACCENT_S       \\n\\\\char ECA2 THINF_ACCENT_L                                                         \\n\\\\char ECA3 THINF_ACCENT_XL \\n\\n\\\\char ECB0 THINF_DOT_XS        \\n\\\\char ECB1 THINF_DOT_S           \\n\\\\char ECB2 THINF_DOT_L           \\n\\\\char ECB3 THINF_DOT_XL\\n\\\\char ECBF LAMBE_MARK_DOT  \\n\\n\\\\char ECC0 THINF_CURL_XS          \\n\\\\char ECC1 THINF_CURL_S           \\n\\\\char ECC2 THINF_CURL_L           \\n\\\\char ECC3 THINF_CURL_XL     \\n \\n\\\\char ECD0 THINF_CURL_INV_XS                                \\n\\\\char ECD1 THINF_CURL_INV_S                                                            \\n\\\\char ECD2 THINF_CURL_INV_L                                \\n\\\\char ECD3 THINF_CURL_INV_XL \\n\\n\\\\** Double tehtar **\\\\\\n\\n\\\\char ECE0 A_TEHTA_DOUBLE_XS\\n\\\\char ECE1 A_TEHTA_DOUBLE_S \\n\\\\char ECE2 A_TEHTA_DOUBLE_L \\n\\\\char ECE3 A_TEHTA_DOUBLE_XL\\n\\n\\\\char ECF0 E_TEHTA_DOUBLE_XS\\n\\\\char ECF1 E_TEHTA_DOUBLE_S \\n\\\\char ECF2 E_TEHTA_DOUBLE_L \\n\\\\char ECF3 E_TEHTA_DOUBLE_XL\\n\\n\\\\char ED00 THSUP_DDOT_XS    Y_TEHTA_XS    I_TEHTA_DOUBLE_XS         \\n\\\\char ED01 THSUP_DDOT_S     Y_TEHTA_S     I_TEHTA_DOUBLE_S       \\n\\\\char ED02 THSUP_DDOT_L     Y_TEHTA_L     I_TEHTA_DOUBLE_L          \\n\\\\char ED03 THSUP_DDOT_XL    Y_TEHTA_XL    I_TEHTA_DOUBLE_XL     \\n\\n\\\\char ED10 O_TEHTA_DOUBLE_XS\\n\\\\char ED11 O_TEHTA_DOUBLE_S \\n\\\\char ED12 O_TEHTA_DOUBLE_L \\n\\\\char ED13 O_TEHTA_DOUBLE_XL \\n\\n\\\\char ED20 U_TEHTA_DOUBLE_XS\\n\\\\char ED21 U_TEHTA_DOUBLE_S \\n\\\\char ED22 U_TEHTA_DOUBLE_L \\n\\\\char ED23 U_TEHTA_DOUBLE_XL\\n\\n\\\\** Double inf tehtar **\\\\\\n\\n\\\\char ED30 THINF_DSTROKE_XS                               \\n\\\\char ED31 THINF_DSTROKE_S       \\n\\\\char ED32 THINF_DSTROKE_L                         \\n\\\\char ED33 THINF_DSTROKE_XL \\n\\\\char ED3F LAMBE_MARK_DSTROKE \\n\\n\\\\char ED40 THINF_DDOT_XS          \\n\\\\char ED41 THINF_DDOT_S           \\n\\\\char ED42 THINF_DDOT_L           \\n\\\\char ED43 THINF_DDOT_XL \\n\\\\char ED4F LAMBE_MARK_DDOT    \\n\\n\\\\** Labializer **\\\\\\n\\n\\\\char ED50 WA_TEHTA_XS           \\n\\\\char ED51 WA_TEHTA_S           \\n\\\\char ED52 WA_TEHTA_L           \\n\\\\char ED53 WA_TEHTA_XL  \\n\\n\\\\** Thinnas **\\\\\\n\\n\\\\char ED60 THINF_STROKE_XS                                 \\n\\\\char ED61 THINF_STROKE_S                                 \\n\\\\char ED62 THINF_STROKE_L                                 \\n\\\\char ED63 THINF_STROKE_XL    \\n\\n\\\\** MSB Marker **\\\\\\n\\n\\\\char ED70 TH_SUB_CIRC_XS         \\n\\\\char ED71 TH_SUB_CIRC_S           \\n\\\\char ED72 TH_SUB_CIRC_L                                  \\n\\\\char ED73 TH_SUB_CIRC_XL  \\n\\n\\\\** Other UP Tehtar **\\\\\\n\\n\\\\char ED80 A_TEHTA_INV_XS \\n\\\\char ED81 A_TEHTA_INV_S         \\n\\\\char ED82 A_TEHTA_INV_L         \\n\\\\char ED83 A_TEHTA_INV_XL    \\n\\n\\\\char ED90 THSUP_TICK_INV_XS    A_TEHTA_CIRCUM_XS       \\n\\\\char ED91 THSUP_TICK_INV_S     A_TEHTA_CIRCUM_S        \\n\\\\char ED92 THSUP_TICK_INV_L     A_TEHTA_CIRCUM_L         \\n\\\\char ED93 THSUP_TICK_INV_XL    A_TEHTA_CIRCUM_XL   \\n\\n\\\\char EDA0 THSUP_TICK_XS          \\n\\\\char EDA1 THSUP_TICK_S           \\n\\\\char EDA2 THSUP_TICK_L           \\n\\\\char EDA3 THSUP_TICK_XL     \\n                                                          \\n\\\\char EDB0 THSUP_LAMBDA_XS         \\n\\\\char EDB1 THSUP_LAMBDA_S          \\n\\\\char EDB2 THSUP_LAMBDA_L          \\n\\\\char EDB3 THSUP_LAMBDA_XL  \\n\\n\\\\char EDC0 E_TEHTA_GRAVE_XS\\n\\\\char EDC1 E_TEHTA_GRAVE_S \\n\\\\char EDC2 E_TEHTA_GRAVE_L \\n\\\\char EDC3 E_TEHTA_GRAVE_XL \\n\\n\\\\char EDD0 BREVE_TEHTA_XS\\n\\\\char EDD1 BREVE_TEHTA_S\\n\\\\char EDD2 BREVE_TEHTA_L\\n\\\\char EDD3 BREVE_TEHTA_XL\\n\\n\\\\char EDE0 E_TEHTA_GRAVE_INF_XS\\n\\\\char EDE1 E_TEHTA_GRAVE_INF_S\\n\\\\char EDE2 E_TEHTA_GRAVE_INF_L\\n\\\\char EDE3 E_TEHTA_GRAVE_INF_XL\\n\\n\\\\** Ligatured results are mapped here **\\\\\\n\\\\char e800 AHA_TINCO\\n\\\\char e801 HWESTA_TINCO\\n\\\\char e802 ANCA_CLOSED SILME_AHA\\n\\\\char e900 LAMBE_LIG\\n\\n\\n\\n\\n\\\\** The following virtual chars are used to handle tehtar (& the like) multiple version chosing **\\\\\\n\\\\** It could be avoided with modern fonts with gsub/gpos tables for ligatures and diacritics **\\\\\\n\\\\** placement **\\\\\\n\\n\\\\** DUMPED FROM THE VIRTUAL CHARS TOOL **\\\\\\n\\n\\n\\n\\\\beg virtual A_TEHTA\\n  \\\\class A_TEHTA_XS TELCO ARA HALLA HYARMEN HARP_SHAPED NUM_4 NUM_10 NUM_11\\n  \\\\class A_TEHTA_S CALMA QUESSE SULE FORMEN ANNA TW_EXT_11 TW_EXT_12 SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA URE OSSE AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_8\\n  \\\\class A_TEHTA_L TINCO PARMA AHA HWESTA ORE VALA VILYA TW_EXT_13 TW_EXT_14 ROMEN ARDA YANTA VAIA VALA_W_HOOK SHOOK_BEAUTIFUL NUM_5\\n  \\\\class A_TEHTA_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 LAMBE LAMBE_LIG LAMBE_NO_LIG ALDA SILME ESSE HWESTA_SINDARINWA MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_6 NUM_7 NUM_9\\n\\\\end\\n\\n\\\\beg virtual A_TEHTA_CIRCUM\\n  \\\\class A_TEHTA_CIRCUM_XS TELCO ARA HALLA HYARMEN HARP_SHAPED NUM_4 NUM_10 NUM_11\\n  \\\\class A_TEHTA_CIRCUM_S CALMA QUESSE SULE FORMEN ANNA TW_EXT_11 TW_EXT_12 SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA URE OSSE AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_8\\n  \\\\class A_TEHTA_CIRCUM_L TINCO PARMA AHA HWESTA ORE VALA VILYA TW_EXT_13 TW_EXT_14 ROMEN ARDA YANTA VAIA VALA_W_HOOK SHOOK_BEAUTIFUL NUM_5\\n  \\\\class A_TEHTA_CIRCUM_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 LAMBE LAMBE_LIG LAMBE_NO_LIG ALDA SILME ESSE HWESTA_SINDARINWA MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_6 NUM_7 NUM_9\\n\\\\end\\n\\n\\\\beg virtual A_TEHTA_REVERSED\\n  \\\\class A_TEHTA_INV_XS TELCO ARA HALLA HYARMEN HARP_SHAPED NUM_4 NUM_10 NUM_11\\n  \\\\class A_TEHTA_INV_S CALMA QUESSE SULE FORMEN ANNA TW_EXT_11 TW_EXT_12 SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA URE OSSE AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_8\\n  \\\\class A_TEHTA_INV_L TINCO PARMA AHA HWESTA ORE VALA VILYA TW_EXT_13 TW_EXT_14 ROMEN ARDA YANTA VAIA VALA_W_HOOK SHOOK_BEAUTIFUL NUM_5\\n  \\\\class A_TEHTA_INV_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 LAMBE LAMBE_LIG LAMBE_NO_LIG ALDA SILME ESSE HWESTA_SINDARINWA MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_6 NUM_7 NUM_9\\n\\\\end\\n\\n\\\\beg virtual A_TEHTA_CIRCUM_REVERSED TEHTA_BREVE\\n  \\\\class THSUP_TICK_XS TELCO ARA HALLA HYARMEN HARP_SHAPED NUM_4 NUM_10 NUM_11\\n  \\\\class THSUP_TICK_S CALMA QUESSE SULE FORMEN TW_EXT_11 TW_EXT_12 SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA URE OSSE AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_8\\n  \\\\class THSUP_TICK_L TINCO PARMA AHA HWESTA ORE VALA ANNA VILYA TW_EXT_13 TW_EXT_14 ROMEN ARDA YANTA VAIA VALA_W_HOOK SHOOK_BEAUTIFUL NUM_5\\n  \\\\class THSUP_TICK_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 LAMBE LAMBE_LIG LAMBE_NO_LIG ALDA SILME ESSE HWESTA_SINDARINWA MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_6 NUM_7 NUM_9\\n\\\\end\\n\\n\\\\beg virtual E_TEHTA\\n  \\\\class E_TEHTA_XS TELCO ARA HALLA HYARMEN HARP_SHAPED NUM_4 NUM_10 NUM_11\\n  \\\\class E_TEHTA_S CALMA QUESSE SULE FORMEN ANNA TW_EXT_11 TW_EXT_12 SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA URE OSSE AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_8\\n  \\\\class E_TEHTA_L TINCO PARMA AHA HWESTA ORE VALA VILYA TW_EXT_13 TW_EXT_14 ROMEN ARDA YANTA VAIA VALA_W_HOOK SHOOK_BEAUTIFUL NUM_5\\n  \\\\class E_TEHTA_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 LAMBE LAMBE_LIG LAMBE_NO_LIG ALDA SILME ESSE HWESTA_SINDARINWA MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_6 NUM_7 NUM_9\\n\\\\end\\n\\n\\\\beg virtual E_TEHTA_GRAVE\\n  \\\\class E_TEHTA_GRAVE_XS TELCO ARA HALLA HYARMEN HARP_SHAPED NUM_4 NUM_10 NUM_11\\n  \\\\class E_TEHTA_GRAVE_S CALMA QUESSE SULE FORMEN ANNA TW_EXT_11 TW_EXT_12 SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA URE OSSE AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_8\\n  \\\\class E_TEHTA_GRAVE_L TINCO PARMA AHA HWESTA ORE VALA VILYA TW_EXT_13 TW_EXT_14 ROMEN ARDA YANTA VAIA VALA_W_HOOK SHOOK_BEAUTIFUL NUM_5\\n  \\\\class E_TEHTA_GRAVE_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 LAMBE LAMBE_LIG LAMBE_NO_LIG ALDA SILME ESSE HWESTA_SINDARINWA MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_6 NUM_7 NUM_9\\n\\\\end\\n\\n\\\\beg virtual I_TEHTA\\n  \\\\class I_TEHTA_XS TELCO ARA HALLA HYARMEN HARP_SHAPED NUM_4 NUM_10 NUM_11\\n  \\\\class I_TEHTA_S CALMA QUESSE SULE FORMEN ANNA TW_EXT_11 TW_EXT_12 SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA URE OSSE AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_8\\n  \\\\class I_TEHTA_L TINCO PARMA AHA HWESTA ORE VALA VILYA TW_EXT_13 TW_EXT_14 ROMEN ARDA YANTA VAIA VALA_W_HOOK SHOOK_BEAUTIFUL NUM_5\\n  \\\\class I_TEHTA_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 LAMBE LAMBE_LIG LAMBE_NO_LIG ALDA SILME ESSE HWESTA_SINDARINWA MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_6 NUM_7 NUM_9\\n\\\\end\\n\\n\\\\beg virtual O_TEHTA\\n  \\\\class O_TEHTA_XS TELCO ARA HALLA HYARMEN URE OSSE SHOOK_BEAUTIFUL NUM_4 NUM_10 NUM_11\\n  \\\\class O_TEHTA_S CALMA QUESSE SULE FORMEN AHA HWESTA ANNA VILYA TW_EXT_11 TW_EXT_12 TW_EXT_13 TW_EXT_14 ROMEN ARDA SILME SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA YANTA HARP_SHAPED AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_8\\n  \\\\class O_TEHTA_L TINCO PARMA ORE VALA VAIA VALA_W_HOOK NUM_5\\n  \\\\class O_TEHTA_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 LAMBE LAMBE_LIG LAMBE_NO_LIG ALDA ESSE HWESTA_SINDARINWA MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_6 NUM_7 NUM_9\\n\\\\end\\n\\n\\\\beg virtual U_TEHTA\\n  \\\\class U_TEHTA_XS TELCO ARA HALLA HYARMEN URE OSSE SHOOK_BEAUTIFUL NUM_4 NUM_10 NUM_11\\n  \\\\class U_TEHTA_S CALMA QUESSE SULE FORMEN AHA HWESTA ANNA VILYA TW_EXT_11 TW_EXT_12 TW_EXT_13 TW_EXT_14 ROMEN ARDA SILME SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA YANTA HARP_SHAPED AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_8\\n  \\\\class U_TEHTA_L TINCO PARMA ORE VALA VAIA VALA_W_HOOK NUM_5\\n  \\\\class U_TEHTA_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 LAMBE LAMBE_LIG LAMBE_NO_LIG ALDA ESSE HWESTA_SINDARINWA MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_6 NUM_7 NUM_9\\n\\\\end\\n\\n\\\\beg virtual WA_TEHTA SEV_TEHTA\\n  \\\\class WA_TEHTA_XS TELCO ARA HALLA HYARMEN HARP_SHAPED NUM_4 NUM_10 NUM_11\\n  \\\\class WA_TEHTA_S CALMA QUESSE SULE FORMEN TW_EXT_11 TW_EXT_12 SILME_NUQUERNA_ALT URE OSSE AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_8\\n  \\\\class WA_TEHTA_L TINCO PARMA AHA HWESTA ORE VALA ANNA VILYA TW_EXT_13 TW_EXT_14 ROMEN ARDA SILME_NUQUERNA ESSE_NUQUERNA YANTA VAIA VALA_W_HOOK SHOOK_BEAUTIFUL NUM_5\\n  \\\\class WA_TEHTA_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 LAMBE LAMBE_LIG LAMBE_NO_LIG ALDA SILME ESSE HWESTA_SINDARINWA MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_6 NUM_7 NUM_9\\n\\\\end\\n\\n\\\\beg virtual A_TEHTA_DOUBLE\\n  \\\\class A_TEHTA_DOUBLE_XS TELCO ARA HALLA HYARMEN HARP_SHAPED NUM_4 NUM_10 NUM_11\\n  \\\\class A_TEHTA_DOUBLE_S CALMA QUESSE SULE FORMEN ANNA TW_EXT_11 TW_EXT_12 SILME_NUQUERNA_ALT URE OSSE AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_8\\n  \\\\class A_TEHTA_DOUBLE_L TINCO PARMA AHA HWESTA ORE VALA VILYA TW_EXT_13 TW_EXT_14 ROMEN ARDA SILME_NUQUERNA ESSE_NUQUERNA YANTA VAIA VALA_W_HOOK SHOOK_BEAUTIFUL NUM_5\\n  \\\\class A_TEHTA_DOUBLE_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 LAMBE LAMBE_LIG LAMBE_NO_LIG ALDA SILME ESSE HWESTA_SINDARINWA MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_6 NUM_7 NUM_9\\n\\\\end\\n\\n\\\\beg virtual E_TEHTA_DOUBLE\\n  \\\\class E_TEHTA_DOUBLE_XS HYARMEN HARP_SHAPED NUM_0 NUM_1 NUM_4 NUM_10 NUM_11\\n  \\\\class E_TEHTA_DOUBLE_S TELCO ARA HALLA CALMA QUESSE SULE FORMEN TW_EXT_11 TW_EXT_12 SILME_NUQUERNA_ALT URE OSSE AHA_TINCO HWESTA_TINCO NUM_8\\n  \\\\class E_TEHTA_DOUBLE_L TINCO PARMA AHA HWESTA ORE VALA ANNA VILYA TW_EXT_13 TW_EXT_14 ROMEN ARDA SILME_NUQUERNA ESSE_NUQUERNA YANTA VAIA VALA_W_HOOK SHOOK_BEAUTIFUL NUM_5\\n  \\\\class E_TEHTA_DOUBLE_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 LAMBE LAMBE_LIG LAMBE_NO_LIG ALDA SILME ESSE HWESTA_SINDARINWA MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_6 NUM_7 NUM_9\\n\\\\end\\n\\n\\\\beg virtual I_TEHTA_DOUBLE Y_TEHTA\\n  \\\\class I_TEHTA_DOUBLE_XS TELCO ARA HALLA HYARMEN HARP_SHAPED NUM_4 NUM_10 NUM_11\\n  \\\\class I_TEHTA_DOUBLE_S CALMA QUESSE SULE FORMEN ANNA TW_EXT_11 TW_EXT_12 SILME_NUQUERNA_ALT URE OSSE AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_8\\n  \\\\class I_TEHTA_DOUBLE_L TINCO PARMA AHA HWESTA ORE VALA VILYA TW_EXT_13 TW_EXT_14 ROMEN ARDA SILME_NUQUERNA ESSE_NUQUERNA YANTA VAIA VALA_W_HOOK SHOOK_BEAUTIFUL NUM_5\\n  \\\\class I_TEHTA_DOUBLE_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 LAMBE LAMBE_LIG LAMBE_NO_LIG ALDA SILME ESSE HWESTA_SINDARINWA MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_6 NUM_7 NUM_9\\n\\\\end\\n\\n\\\\beg virtual O_TEHTA_DOUBLE\\n  \\\\class O_TEHTA_DOUBLE_XS TELCO ARA HALLA HYARMEN URE OSSE SHOOK_BEAUTIFUL NUM_4 NUM_10 NUM_11\\n  \\\\class O_TEHTA_DOUBLE_S CALMA QUESSE SULE FORMEN AHA HWESTA ANNA VILYA TW_EXT_11 TW_EXT_12 TW_EXT_13 TW_EXT_14 ROMEN ARDA SILME SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA HWESTA_SINDARINWA YANTA VAIA HARP_SHAPED AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_8\\n  \\\\class O_TEHTA_DOUBLE_L TINCO PARMA ORE VALA VALA_W_HOOK NUM_5\\n  \\\\class O_TEHTA_DOUBLE_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 LAMBE LAMBE_LIG LAMBE_NO_LIG ALDA ESSE MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_6 NUM_7 NUM_9\\n\\\\end\\n\\n\\\\beg virtual U_TEHTA_DOUBLE\\n  \\\\class U_TEHTA_DOUBLE_XS TELCO ARA HALLA HYARMEN URE OSSE SHOOK_BEAUTIFUL NUM_4 NUM_10 NUM_11\\n  \\\\class U_TEHTA_DOUBLE_S CALMA QUESSE SULE FORMEN AHA HWESTA ANNA VILYA TW_EXT_11 TW_EXT_12 TW_EXT_13 TW_EXT_14 ROMEN ARDA SILME SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA HWESTA_SINDARINWA YANTA VAIA HARP_SHAPED AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_8\\n  \\\\class U_TEHTA_DOUBLE_L TINCO PARMA ORE VALA VALA_W_HOOK NUM_5\\n  \\\\class U_TEHTA_DOUBLE_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 LAMBE LAMBE_LIG LAMBE_NO_LIG ALDA ESSE MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_6 NUM_7 NUM_9\\n\\\\end\\n\\n\\\\beg virtual A_TEHTA_INF\\n  \\\\class THINF_TDOT_XS TELCO ARA HALLA ROMEN ARDA SILME_NUQUERNA SHOOK_BEAUTIFUL HARP_SHAPED NUM_4 NUM_10 NUM_11\\n  \\\\class THINF_TDOT_S TINCO PARMA SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA TW_EXT_11 TW_EXT_12 SILME HYARMEN HWESTA_SINDARINWA YANTA URE OSSE VAIA AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_8\\n  \\\\class THINF_TDOT_L CALMA QUESSE TW_EXT_13 TW_EXT_14 ESSE ESSE_NUQUERNA VALA_W_HOOK NUM_5\\n  \\\\class THINF_TDOT_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 LAMBE LAMBE_LIG LAMBE_NO_LIG ALDA SILME_NUQUERNA_ALT MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_6 NUM_7 NUM_9\\n\\\\end\\n\\n\\\\beg virtual E_TEHTA_INF\\n  \\\\class THINF_ACCENT_XS TELCO ARA HALLA ROMEN ARDA SILME_NUQUERNA SHOOK_BEAUTIFUL HARP_SHAPED NUM_4\\n  \\\\class THINF_ACCENT_S TINCO PARMA SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA TW_EXT_11 TW_EXT_12 SILME HYARMEN HWESTA_SINDARINWA YANTA URE OSSE VAIA AHA_TINCO HWESTA_TINCO\\n  \\\\class THINF_ACCENT_L CALMA QUESSE TW_EXT_13 TW_EXT_14 ESSE ESSE_NUQUERNA VALA_W_HOOK NUM_0 NUM_1 NUM_6 NUM_7 NUM_8 NUM_10 NUM_11\\n  \\\\class THINF_ACCENT_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 LAMBE LAMBE_LIG LAMBE_NO_LIG ALDA SILME_NUQUERNA_ALT MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_5 NUM_9\\n\\\\end\\n\\n\\\\beg virtual E_TEHTA_GRAVE_INF\\n  \\\\class E_TEHTA_GRAVE_INF_XS TELCO ARA HALLA ROMEN ARDA VALA_W_HOOK HARP_SHAPED NUM_4\\n  \\\\class E_TEHTA_GRAVE_INF_S TW_EXT_13 TW_EXT_14 NUM_8\\n  \\\\class E_TEHTA_GRAVE_INF_L TINCO PARMA CALMA QUESSE SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA TW_EXT_11 TW_EXT_12 SILME SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA YANTA URE OSSE VAIA SHOOK_BEAUTIFUL AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_6 NUM_7 NUM_10 NUM_11\\n  \\\\class E_TEHTA_GRAVE_INF_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 LAMBE LAMBE_LIG LAMBE_NO_LIG ALDA MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_5 NUM_9\\n\\\\end\\n\\n\\\\beg virtual CIRC_TEHTA_INF\\n  \\\\class TH_SUB_CIRC_XS TELCO ARA HALLA ROMEN ARDA SILME_NUQUERNA HARP_SHAPED\\n  \\\\class TH_SUB_CIRC_S TINCO PARMA CALMA QUESSE SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA TW_EXT_11 TW_EXT_12 TW_EXT_13 TW_EXT_14 SILME ESSE HYARMEN HWESTA_SINDARINWA YANTA URE OSSE VAIA SHOOK_BEAUTIFUL AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_4 NUM_6 NUM_7 NUM_8 NUM_10 NUM_11\\n  \\\\class TH_SUB_CIRC_L ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 LAMBE LAMBE_LIG LAMBE_NO_LIG ALDA SILME_NUQUERNA_ALT ESSE_NUQUERNA VALA_W_HOOK ANCA_CLOSED NUM_2 NUM_5 NUM_9\\n  \\\\class TH_SUB_CIRC_XL TW_EXT_24 MALTA_W_HOOK NUM_3\\n\\\\end\\n\\n\\\\beg virtual THINNAS  THINF_STROKE\\n  \\\\class THINF_STROKE_XS TELCO ARA HALLA ROMEN ARDA SILME_NUQUERNA SHOOK_BEAUTIFUL HARP_SHAPED NUM_5\\n  \\\\class THINF_STROKE_S TINCO PARMA SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA TW_EXT_11 TW_EXT_12 SILME HYARMEN HWESTA_SINDARINWA YANTA URE OSSE VAIA AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_4 NUM_10 NUM_11\\n  \\\\class THINF_STROKE_L CALMA QUESSE TW_EXT_13 TW_EXT_14 ESSE ESSE_NUQUERNA VALA_W_HOOK NUM_6 NUM_7 NUM_8\\n  \\\\class THINF_STROKE_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 LAMBE LAMBE_LIG LAMBE_NO_LIG ALDA SILME_NUQUERNA_ALT MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_9\\n\\\\end\\n\\n\\\\beg virtual O_TEHTA_INF\\n  \\\\class THINF_CURL_XS TELCO ARA HALLA ROMEN ARDA SILME_NUQUERNA SHOOK_BEAUTIFUL HARP_SHAPED NUM_5\\n  \\\\class THINF_CURL_S TINCO PARMA SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA TW_EXT_11 TW_EXT_12 SILME HYARMEN HWESTA_SINDARINWA YANTA URE OSSE VAIA AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_4 NUM_10 NUM_11\\n  \\\\class THINF_CURL_L CALMA QUESSE TW_EXT_13 TW_EXT_14 ESSE ESSE_NUQUERNA VALA_W_HOOK NUM_6 NUM_7 NUM_8\\n  \\\\class THINF_CURL_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 LAMBE LAMBE_LIG LAMBE_NO_LIG ALDA SILME_NUQUERNA_ALT MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_9\\n\\\\end\\n\\n\\\\beg virtual U_TEHTA_INF\\n  \\\\class THINF_CURL_INV_XS TELCO ARA HALLA ROMEN ARDA SILME_NUQUERNA SHOOK_BEAUTIFUL HARP_SHAPED NUM_5\\n  \\\\class THINF_CURL_INV_S TINCO PARMA SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA TW_EXT_11 TW_EXT_12 SILME HYARMEN HWESTA_SINDARINWA YANTA URE OSSE VAIA AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_4 NUM_10 NUM_11\\n  \\\\class THINF_CURL_INV_L CALMA QUESSE TW_EXT_13 TW_EXT_14 ESSE ESSE_NUQUERNA VALA_W_HOOK NUM_6 NUM_7 NUM_8\\n  \\\\class THINF_CURL_INV_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 LAMBE LAMBE_LIG LAMBE_NO_LIG ALDA SILME_NUQUERNA_ALT MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_9\\n\\\\end\\n\\n\\\\beg virtual PALATAL_SIGN I_TEHTA_DOUBLE_INF Y_TEHTA_INF\\n  \\\\class THINF_DDOT_XS TELCO ARA HALLA ROMEN ARDA SILME_NUQUERNA SHOOK_BEAUTIFUL HARP_SHAPED\\n  \\\\class THINF_DDOT_S TINCO PARMA SULE FORMEN AHA HWESTA TW_EXT_11 TW_EXT_12 URE OSSE AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_4\\n  \\\\class THINF_DDOT_L CALMA QUESSE ORE VALA ANNA VILYA TW_EXT_13 TW_EXT_14 SILME ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA YANTA VAIA VALA_W_HOOK NUM_6 NUM_8 NUM_10 NUM_11\\n  \\\\class THINF_DDOT_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 ALDA SILME_NUQUERNA_ALT MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_5 NUM_9\\n  \\\\class LAMBE_MARK_DDOT LAMBE LAMBE_LIG LAMBE_NO_LIG NUM_7\\n\\\\end\\n\\n\\\\beg virtual E_TEHTA_DOUBLE_INF GEMINATE_DOUBLE\\n  \\\\class THINF_DSTROKE_XS TELCO ARA HALLA ROMEN ARDA SILME_NUQUERNA SHOOK_BEAUTIFUL HARP_SHAPED NUM_5\\n  \\\\class THINF_DSTROKE_S TINCO PARMA SULE FORMEN AHA HWESTA TW_EXT_11 TW_EXT_12 URE OSSE AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_4\\n  \\\\class THINF_DSTROKE_L CALMA QUESSE ORE VALA ANNA VILYA TW_EXT_13 TW_EXT_14 SILME ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA YANTA VAIA VALA_W_HOOK NUM_6 NUM_8 NUM_10 NUM_11\\n  \\\\class THINF_DSTROKE_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 ALDA SILME_NUQUERNA_ALT MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_9\\n  \\\\class LAMBE_MARK_DSTROKE LAMBE LAMBE_LIG LAMBE_NO_LIG NUM_7\\n\\\\end\\n\\n\\\\beg virtual UNUTIXE I_TEHTA_INF NO_VOWEL_DOT\\n  \\\\class THINF_DOT_XS TELCO ARA HALLA ROMEN ARDA SILME_NUQUERNA SHOOK_BEAUTIFUL HARP_SHAPED NUM_5\\n  \\\\class THINF_DOT_S TINCO PARMA SULE FORMEN AHA HWESTA TW_EXT_11 TW_EXT_12 URE OSSE AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_4 NUM_7\\n  \\\\class THINF_DOT_L CALMA QUESSE ORE VALA ANNA VILYA TW_EXT_13 TW_EXT_14 SILME ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA YANTA VAIA VALA_W_HOOK NUM_6 NUM_8 NUM_10 NUM_11\\n  \\\\class THINF_DOT_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 ALDA SILME_NUQUERNA_ALT MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_9\\n  \\\\class LAMBE_MARK_DOT LAMBE LAMBE_LIG LAMBE_NO_LIG\\n\\\\end\\n\\n\\\\beg virtual GEMINATE_SIGN\\n  \\\\class DASH_INF_XS TELCO ARA HALLA\\n  \\\\class DASH_INF_S TINCO PARMA CALMA QUESSE SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA TW_EXT_11 TW_EXT_12 TW_EXT_13 TW_EXT_14 ROMEN ARDA SILME SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA YANTA URE OSSE VAIA VALA_W_HOOK SHOOK_BEAUTIFUL HARP_SHAPED AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_4 NUM_7 NUM_8 NUM_10 NUM_11\\n  \\\\class DASH_INF_L ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_5 NUM_6 NUM_9\\n  \\\\class LAMBE_MARK_DASH LAMBE LAMBE_LIG LAMBE_NO_LIG ALDA\\n\\\\end\\n\\n\\\\beg virtual GEMINATE_SIGN_TILD\\n  \\\\class TILD_INF_XS TELCO ARA HALLA\\n  \\\\class TILD_INF_S TINCO PARMA CALMA QUESSE SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA TW_EXT_11 TW_EXT_12 TW_EXT_13 TW_EXT_14 ROMEN ARDA SILME SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA YANTA URE OSSE VAIA VALA_W_HOOK SHOOK_BEAUTIFUL HARP_SHAPED AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_4 NUM_7 NUM_8 NUM_10 NUM_11\\n  \\\\class TILD_INF_L ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_5 NUM_6 NUM_9\\n  \\\\class LAMBE_MARK_TILD LAMBE LAMBE_LIG LAMBE_NO_LIG ALDA\\n\\\\end\\n\\n\\\\beg virtual NASALIZE_SIGN\\n  \\\\class DASH_SUP_XS TELCO ARA HALLA\\n  \\\\class DASH_SUP_S TINCO PARMA CALMA QUESSE SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA TW_EXT_11 TW_EXT_12 TW_EXT_13 TW_EXT_14 ROMEN ARDA SILME SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA YANTA URE OSSE VAIA VALA_W_HOOK HARP_SHAPED NUM_0 NUM_1 NUM_4 NUM_7 NUM_8 NUM_10 NUM_11\\n  \\\\class DASH_SUP_L ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 LAMBE LAMBE_LIG LAMBE_NO_LIG ALDA MALTA_W_HOOK SHOOK_BEAUTIFUL ANCA_CLOSED AHA_TINCO HWESTA_TINCO NUM_2 NUM_3 NUM_5 NUM_6 NUM_9\\n\\\\end\\n\\n\\\\beg virtual NASALIZE_SIGN_TILD\\n  \\\\class TILD_SUP_XS TELCO ARA HALLA\\n  \\\\class TILD_SUP_S TINCO PARMA CALMA QUESSE SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA TW_EXT_11 TW_EXT_12 TW_EXT_13 TW_EXT_14 ROMEN ARDA SILME SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA YANTA URE OSSE VAIA VALA_W_HOOK HARP_SHAPED NUM_0 NUM_1 NUM_4 NUM_7 NUM_8 NUM_10 NUM_11\\n  \\\\class TILD_SUP_L ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 LAMBE LAMBE_LIG LAMBE_NO_LIG ALDA MALTA_W_HOOK SHOOK_BEAUTIFUL ANCA_CLOSED AHA_TINCO HWESTA_TINCO NUM_2 NUM_3 NUM_5 NUM_6 NUM_9\\n\\\\end\\n\\n\\\\beg virtual SARINCE\\n  \\\\class SHOOK_LEFT_L CALMA QUESSE ANGA UNGWE TW_EXT_13 TW_EXT_14 TW_EXT_23 TW_EXT_24 HWESTA_SINDARINWA VALA_W_HOOK\\n  \\\\class SHOOK_RIGHT_L TELCO ARA HALLA TINCO PARMA ANDO UMBAR SULE FORMEN AHA HWESTA ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME ORE VALA ANNA VILYA TW_EXT_11 TW_EXT_12 TW_EXT_21 TW_EXT_22 ROMEN ARDA LAMBE LAMBE_LIG LAMBE_NO_LIG ALDA SILME SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE ESSE_NUQUERNA HYARMEN YANTA URE OSSE VAIA MALTA_W_HOOK SHOOK_BEAUTIFUL ANCA_CLOSED HARP_SHAPED AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_2 NUM_3 NUM_4 NUM_5 NUM_6 NUM_7 NUM_8 NUM_9 NUM_10 NUM_11\\n\\\\end\\n\\n\\\\beg virtual LAMBE\\n  \\\\reversed\\n  \\\\default LAMBE_NO_LIG\\n  \\\\class LAMBE_NO_LIG HALLA\\n  \\\\class LAMBE_LIG TELCO ARA TINCO PARMA CALMA QUESSE ANDO UMBAR ANGA UNGWE SULE FORMEN AHA HWESTA ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME ORE VALA ANNA VILYA TW_EXT_11 TW_EXT_12 TW_EXT_13 TW_EXT_14 TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 ROMEN ARDA LAMBE LAMBE_LIG LAMBE_NO_LIG ALDA SILME SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA YANTA URE OSSE VAIA MALTA_W_HOOK VALA_W_HOOK SHOOK_BEAUTIFUL ANCA_CLOSED HARP_SHAPED AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_2 NUM_3 NUM_4 NUM_5 NUM_6 NUM_7 NUM_8 NUM_9 NUM_10 NUM_11\\n\\\\end\\n\\n\\n\"\nGlaemscribe.resource_manager.raw_charsets[\"tengwar_guni_eldamar\"] = \"\\\\**\\n\\nGlǽmscribe (also written Glaemscribe) is a software dedicated to\\nthe transcription of texts between writing systems, and more \\nspecifically dedicated to the transcription of J.R.R. Tolkien\\'s \\ninvented languages to some of his devised writing systems.\\n\\nCopyright (C) 2015 Benjamin Babut (Talagan).\\n\\nThis program is free software: you can redistribute it and/or modify\\nit under the terms of the GNU Affero General Public License as published by\\nthe Free Software Foundation, either version 3 of the License, or\\nany later version.\\n\\nThis program is distributed in the hope that it will be useful,\\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\nGNU Affero General Public License for more details.\\n\\nYou should have received a copy of the GNU Affero General Public License\\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\\n\\n**\\\\\\n\\n\\\\** Charset specially customized for Tengwar Eldamar (Glaemscrafu patched version) **\\\\ \\n\\n\\\\version 0.1.0\\n\\n\\\\beg changelog\\n  \\\\** Changes done to the original font and inherited. **\\\\\\n  \\\\entry \\\"0.0.0\\\" \\\"Added VALA_W_HOOK, VAIYA.\\\"\\n  \\\\entry \\\"0.0.0\\\" \\\"Superior and inferior dash and tild consonant modification signs have been added for halla, telco and ara. / Added pustar combinations (4/4-halfed/4-squared/5)\\\"\\n  \\\\entry \\\"0.0.0\\\" \\\"Fixed missing tinco_ext / sule_ext\\\"\\n  \\\\entry \\\"0.0.0\\\" \\\"Added NBSP\\\"\\n  \\n  \\\\entry \\\"0.1.0\\\" \\\"First version of the unicode layout\\\"\\n\\\\end\\n\\n\\n\\\\char 20 SPACE\\n\\\\char a0 NBSP\\n\\n\\\\char 2018 SQUOT_OPEN\\n\\\\char 2019 SQUOT_CLOSE\\n\\n\\\\char 28 PUNCT_PAREN_L \\n\\\\char 29 PUNCT_PAREN_R \\n\\\\char 5B PUNCT_PAREN_L_ALT \\n\\\\char 5D PUNCT_PAREN_R_ALT \\n\\n\\\\** PUSTAR, take them in unicode not in personnal use (deprecation) **\\\\\\n\\\\char 2e31 PUNCT_DOT\\n\\\\char   3a PUNCT_DDOT\\n\\\\char 205D PUNCT_TDOT PUSTA_3\\n\\\\char 2058 PUSTA_4\\n\\\\char 10FB PUSTA_4_HALFED\\n\\\\char 2E2C PUSTA_4_SQUARED\\n\\\\char 2E2D PUSTA_5\\n\\n\\\\char e000  TW_11 TINCO     \\n\\\\char e001  TW_12 PARMA\\n\\\\char e002  TW_13 CALMA\\n\\\\char e003  TW_14 QUESSE\\n\\\\char e004  TW_21 ANDO  \\n\\\\char e005  TW_22 UMBAR\\n\\\\char e006  TW_23 ANGA  \\n\\\\char e007  TW_24 UNGWE   \\n\\\\char e008  TW_31 SULE THULE\\n\\\\char e009  TW_32 FORMEN\\n\\\\char e00A  TW_33 AHA  \\n\\\\char e00B  TW_34 HWESTA\\n\\\\char e00C  TW_41 ANTO\\n\\\\char e00D  TW_42 AMPA\\n\\\\char e00E  TW_43 ANCA\\n\\\\char e00F  TW_44 UNQUE\\n\\n\\\\char e010  TW_51 NUMEN \\n\\\\char e011  TW_52 MALTA\\n\\\\char e012  TW_53 NOLDO\\n\\\\char e013  TW_54 NWALME\\n\\\\char e014  TW_61 ORE\\n\\\\char e015  TW_62 VALA\\n\\\\char e016  TW_63 ANNA\\n\\\\char e017  TW_64 VILYA\\n\\\\char e018  TW_EXT_11 TINCO_EXT SULE_EXT THULE_EXT\\n\\\\char e019  TW_EXT_12 PARMA_EXT FORMEN_EXT \\n\\\\char e01A  TW_EXT_13 CALMA_EXT AHA_EXT\\n\\\\char e01B  TW_EXT_14 QUESSE_EXT HWESTA_EXT   \\n\\\\char e01C  TW_EXT_21 ANDO_EXT ANTO_EXT \\n\\\\char e01D  TW_EXT_22 UMBAR_EXT AMPA_EXT\\n\\\\char e01E  TW_EXT_23 ANGA_EXT ANCA_EXT\\n\\\\char e01F  TW_EXT_24 UNGWE_EXT UNQUE_EXT\\n\\n\\\\char e020  TW_71 ROMEN\\n\\\\char e021  TW_72 ARDA\\n\\\\char e022  TW_73 LAMBE LAMBE_NO_LIG\\n\\\\char e023  TW_74 ALDA \\n\\\\char e024  TW_81 SILME \\n\\\\char e025  TW_82 SILME_NUQUERNA \\n\\\\char e026  TW_83 ESSE\\n\\\\char e027  TW_84 ESSE_NUQUERNA\\n\\\\char e028  TW_91 HYARMEN \\n\\\\char e029  TW_92 HWESTA_SINDARINWA \\n\\\\char e02A  TW_93 YANTA\\n\\\\char e02B  TW_94 URE\\n\\\\char e02C  ARA\\n\\\\char e02D  HALLA\\n\\\\char e02E  TELCO\\n\\\\**.....**\\\\    \\n\\n\\\\char e030  REVERSED_OSSE\\n\\\\char e031  BOMBADIL_W \\n\\\\char e032  OSSE\\n\\\\**.....**\\\\ \\n\\\\char e034  LIGATING_SHORT_CARRIER\\n\\\\**..D..**\\\\ \\n\\\\char e036  ANNA_OPEN\\n\\\\char e037  CHRISTOPHER_QU\\n\\\\**..D..**\\\\ \\n\\\\char e039  BOMBADIL_HW\\n\\\\char e03A  TW_MH MALTA_W_HOOK \\n\\\\char e03B  TW_MH_BELERIANDIC VALA_W_HOOK \\n\\\\char e03C  TW_HW_LOWDHAM HARP_SHAPED\\n\\\\char e03D  VAIA WAIA VAIYA\\n\\\\**..X..**\\\\ \\n\\\\**..X..**\\\\ \\n \\n\\\\char e040  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e041  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e042  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e043  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e044  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e045  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e046  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e047  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e048  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e049  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e04A  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e04B  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e04C  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e04D  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e04E  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e04F  ? \\\\** LEGACY FONT **\\\\\\n\\n\\\\char e050  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e051  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e052  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e053  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e054  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e055  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e056  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e057  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e058  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e059  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e05A  ? \\\\** LEGACY FONT **\\\\\\n\\\\**.....**\\\\ \\n\\\\**.....**\\\\ \\n\\\\**.....**\\\\ \\n\\\\**.....**\\\\ \\n\\\\**.....**\\\\ \\n\\n\\\\**..D..**\\\\ \\n\\\\**..D..**\\\\ \\n\\\\**..D..**\\\\ \\n\\\\**..D..**\\\\ \\n\\\\**..D..**\\\\ \\n\\\\char e065  PUNCT_EXCLAM\\n\\\\char e066  PUNCT_INTERR\\n\\\\char e067  ELVISH_PAREN BOOKMARK_SIGN\\n\\\\char e068  PUNCT_TILD \\n\\\\char e069  PUNCT_DTILD\\n\\\\char e06A  DQUOT_OPEN\\n\\\\char e06B  DQUOT_CLOSE\\n\\\\char e06C  THORIN_EXCLAMATION\\n\\\\**.....**\\\\ \\n\\\\**..X..**\\\\ \\n\\\\**..X..**\\\\ \\n\\n\\n\\\\char e070 NUM_0 \\n\\\\char e071 NUM_1 \\n\\\\char e072 NUM_2 \\n\\\\char e073 NUM_3 \\n\\\\char e074 NUM_4 \\n\\\\char e075 NUM_5 \\n\\\\char e076 NUM_6 \\n\\\\char e077 NUM_7 \\n\\\\char e078 NUM_8 \\n\\\\char e079 NUM_9 \\n\\\\char e07A NUM_10\\n\\\\char e07B NUM_11\\n\\\\char e07C NUM_12\\n\\n\\\\** MISSING in the norm**\\\\\\n\\\\char 204A OLD_ENGLISH_AND\\n\\n\\\\char e03e SILME_NUQUERNA_ALT\\n\\\\char e06e RING_MARK_L \\n\\\\char e06f RING_MARK_R\\n\\n\\\\** LEGACY SARINCE **\\\\\\n\\n\\\\char EBD0 SARINCE_LEFT_V1 SHOOK_LEFT_L\\n\\\\char EBD1 SARINCE_LEFT_V2 SHOOK_LEFT_S\\n\\n\\\\char EBD8 SARINCE_RIGHT_V1 SHOOK_RIGHT_L\\n\\\\char EBD9 SARINCE_RIGHT_V2 SHOOK_RIGHT_S\\n\\\\char EBDA SARINCE_RIGHT_V3\\n\\n\\\\char EBE0 SARINCE_SEMI_ASCENDING_V1\\n\\n\\\\char EBE8 SARINCE_ASCENDING_V1\\n\\\\** .. **\\\\\\n\\\\char EBEA SARINCE_ASCENDING_V3\\n\\n\\\\char EBF0 SARINCE_DESCENDING_V1\\n\\n\\\\char EBF8 SARINCE_FLOURISHED_V1  SARINCE_FLOURISHED SHOOK_BEAUTIFUL\\n\\\\char EBF9 SARINCE_FLOURISHED_V2\\n\\n\\\\** Consonant modifiers **\\\\\\n\\n\\\\char EC00 DASH_INF_XS\\n\\\\char EC01 DASH_INF_S   \\n\\\\char EC02 DASH_INF_L    \\n\\\\char EC0F LAMBE_MARK_DASH \\n\\n\\\\char EC10 TILD_INF_XS\\n\\\\char EC11 TILD_INF_S   \\n\\\\char EC12 TILD_INF_L            \\n\\\\char EC1F LAMBE_MARK_TILD   \\n\\n\\\\char EC20 DASH_SUP_XS\\n\\\\char EC21 DASH_SUP_S                      \\n\\\\char EC22 DASH_SUP_L  \\n\\n\\\\char EC30 TILD_SUP_XS\\n\\\\char EC31 TILD_SUP_S  \\n\\\\char EC32 TILD_SUP_L                       \\n\\n\\\\** Base tehtar **\\\\\\n\\n\\\\char EC40 A_TEHTA_XS  \\n\\\\char EC41 A_TEHTA_S \\n\\\\char EC42 A_TEHTA_L \\n\\\\char EC43 A_TEHTA_XL       \\n\\n\\\\char EC50 E_TEHTA_XS         \\n\\\\char EC51 E_TEHTA_S\\n\\\\char EC52 E_TEHTA_L \\n\\\\char EC53 E_TEHTA_XL  \\n\\n\\\\char EC60 I_TEHTA_XS   \\n\\\\char EC61 I_TEHTA_S  \\n\\\\char EC62 I_TEHTA_L   \\n\\\\char EC63 I_TEHTA_XL   \\n      \\n\\\\char EC70 O_TEHTA_XS              \\n\\\\char EC71 O_TEHTA_S    \\n\\\\char EC72 O_TEHTA_L   \\n\\\\char EC73 O_TEHTA_XL \\n      \\n\\\\char EC80 U_TEHTA_XS \\n\\\\char EC81 U_TEHTA_S \\n\\\\char EC82 U_TEHTA_L    \\n\\\\char EC83 U_TEHTA_XL  \\n\\n\\\\** Inf tehtar **\\\\\\n\\n\\\\char EC90 THINF_TDOT_XS       \\n\\\\char EC91 THINF_TDOT_L           \\n\\\\char EC92 THINF_TDOT_S           \\n\\\\char EC93 THINF_TDOT_XL\\n\\n\\\\char ECA0 THINF_ACCENT_XS    \\n\\\\char ECA1 THINF_ACCENT_S       \\n\\\\char ECA2 THINF_ACCENT_L                                                         \\n\\\\char ECA3 THINF_ACCENT_XL \\n\\n\\\\char ECB0 THINF_DOT_XS        \\n\\\\char ECB1 THINF_DOT_S           \\n\\\\char ECB2 THINF_DOT_L           \\n\\\\char ECB3 THINF_DOT_XL\\n\\\\char ECBF LAMBE_MARK_DOT  \\n\\n\\\\char ECC0 THINF_CURL_XS          \\n\\\\char ECC1 THINF_CURL_S           \\n\\\\char ECC2 THINF_CURL_L           \\n\\\\char ECC3 THINF_CURL_XL     \\n \\n\\\\char ECD0 THINF_CURL_INV_XS                                \\n\\\\char ECD1 THINF_CURL_INV_S                                                            \\n\\\\char ECD2 THINF_CURL_INV_L                                \\n\\\\char ECD3 THINF_CURL_INV_XL \\n\\n\\\\** Double tehtar **\\\\\\n\\n\\\\char ECE0 A_TEHTA_DOUBLE_XS\\n\\\\char ECE1 A_TEHTA_DOUBLE_S \\n\\\\char ECE2 A_TEHTA_DOUBLE_L \\n\\\\char ECE3 A_TEHTA_DOUBLE_XL\\n\\n\\\\char ECF0 E_TEHTA_DOUBLE_XS\\n\\\\char ECF1 E_TEHTA_DOUBLE_S \\n\\\\char ECF2 E_TEHTA_DOUBLE_L \\n\\\\char ECF3 E_TEHTA_DOUBLE_XL\\n\\n\\\\char ED00 THSUP_DDOT_XS    Y_TEHTA_XS    I_TEHTA_DOUBLE_XS         \\n\\\\char ED01 THSUP_DDOT_S     Y_TEHTA_S     I_TEHTA_DOUBLE_S       \\n\\\\char ED02 THSUP_DDOT_L     Y_TEHTA_L     I_TEHTA_DOUBLE_L          \\n\\\\char ED03 THSUP_DDOT_XL    Y_TEHTA_XL    I_TEHTA_DOUBLE_XL     \\n\\n\\\\char ED10 O_TEHTA_DOUBLE_XS\\n\\\\char ED11 O_TEHTA_DOUBLE_S \\n\\\\char ED12 O_TEHTA_DOUBLE_L \\n\\\\char ED13 O_TEHTA_DOUBLE_XL \\n\\n\\\\char ED20 U_TEHTA_DOUBLE_XS\\n\\\\char ED21 U_TEHTA_DOUBLE_S \\n\\\\char ED22 U_TEHTA_DOUBLE_L \\n\\\\char ED23 U_TEHTA_DOUBLE_XL\\n\\n\\\\** Double inf tehtar **\\\\\\n\\n\\\\char ED30 THINF_DSTROKE_XS                               \\n\\\\char ED31 THINF_DSTROKE_S       \\n\\\\char ED32 THINF_DSTROKE_L                         \\n\\\\char ED33 THINF_DSTROKE_XL \\n\\\\char ED3F LAMBE_MARK_DSTROKE \\n\\n\\\\char ED40 THINF_DDOT_XS          \\n\\\\char ED41 THINF_DDOT_S           \\n\\\\char ED42 THINF_DDOT_L           \\n\\\\char ED43 THINF_DDOT_XL \\n\\\\char ED4F LAMBE_MARK_DDOT    \\n\\n\\\\** Labializer **\\\\\\n\\n\\\\char ED50 WA_TEHTA_XS           \\n\\\\char ED51 WA_TEHTA_S           \\n\\\\char ED52 WA_TEHTA_L           \\n\\\\char ED53 WA_TEHTA_XL  \\n\\n\\\\** Thinnas **\\\\\\n\\n\\\\char ED60 THINF_STROKE_XS                                 \\n\\\\char ED61 THINF_STROKE_S                                 \\n\\\\char ED62 THINF_STROKE_L                                 \\n\\\\char ED63 THINF_STROKE_XL    \\n\\n\\\\** MSB Marker **\\\\\\n\\n\\\\char ED70 TH_SUB_CIRC_XS         \\n\\\\char ED71 TH_SUB_CIRC_S           \\n\\\\char ED72 TH_SUB_CIRC_L                                  \\n\\\\char ED73 TH_SUB_CIRC_XL  \\n\\n\\\\** Other UP Tehtar **\\\\\\n\\n\\\\char ED80 A_TEHTA_INV_XS \\n\\\\char ED81 A_TEHTA_INV_S         \\n\\\\char ED82 A_TEHTA_INV_L         \\n\\\\char ED83 A_TEHTA_INV_XL    \\n\\n\\\\char ED90 THSUP_TICK_INV_XS    A_TEHTA_CIRCUM_XS       \\n\\\\char ED91 THSUP_TICK_INV_S     A_TEHTA_CIRCUM_S        \\n\\\\char ED92 THSUP_TICK_INV_L     A_TEHTA_CIRCUM_L         \\n\\\\char ED93 THSUP_TICK_INV_XL    A_TEHTA_CIRCUM_XL   \\n\\n\\\\char EDA0 THSUP_TICK_XS          \\n\\\\char EDA1 THSUP_TICK_S           \\n\\\\char EDA2 THSUP_TICK_L           \\n\\\\char EDA3 THSUP_TICK_XL     \\n                                                          \\n\\\\char EDB0 THSUP_LAMBDA_XS         \\n\\\\char EDB1 THSUP_LAMBDA_S          \\n\\\\char EDB2 THSUP_LAMBDA_L          \\n\\\\char EDB3 THSUP_LAMBDA_XL  \\n\\n\\\\char EDC0 E_TEHTA_GRAVE_XS\\n\\\\char EDC1 E_TEHTA_GRAVE_S \\n\\\\char EDC2 E_TEHTA_GRAVE_L \\n\\\\char EDC3 E_TEHTA_GRAVE_XL \\n\\n\\\\char EDD0 BREVE_TEHTA_XS\\n\\\\char EDD1 BREVE_TEHTA_S\\n\\\\char EDD2 BREVE_TEHTA_L\\n\\\\char EDD3 BREVE_TEHTA_XL\\n\\n\\\\char EDE0 E_TEHTA_GRAVE_INF_XS\\n\\\\char EDE1 E_TEHTA_GRAVE_INF_S\\n\\\\char EDE2 E_TEHTA_GRAVE_INF_L\\n\\\\char EDE3 E_TEHTA_GRAVE_INF_XL\\n\\n\\n\\\\** Ligatured results are mapped here **\\\\\\n\\\\char e800 AHA_TINCO\\n\\\\char e801 HWESTA_TINCO\\n\\\\char e802 ANCA_CLOSED SILME_AHA\\n\\\\char e900 LAMBE_LIG\\n\\n\\n\\n\\n\\\\** The following virtual chars are used to handle tehtar (& the like) multiple version chosing **\\\\\\n\\\\** It could be avoided with modern fonts with gsub/gpos tables for ligatures and diacritics **\\\\\\n\\\\** placement **\\\\\\n\\n\\\\** DUMPED FROM THE VIRTUAL CHARS TOOL **\\\\\\n\\n\\\\beg virtual A_TEHTA\\n  \\\\class A_TEHTA_XS TELCO ARA HALLA HYARMEN HARP_SHAPED NUM_10 NUM_11\\n  \\\\class A_TEHTA_S SULE FORMEN TW_EXT_11 TW_EXT_12 SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA YANTA OSSE AHA_TINCO HWESTA_TINCO NUM_0 NUM_4 NUM_8\\n  \\\\class A_TEHTA_L TINCO PARMA CALMA QUESSE ORE VALA ANNA VILYA ROMEN ARDA LAMBE URE VAIA VALA_W_HOOK NUM_1\\n  \\\\class A_TEHTA_XL ANDO UMBAR ANGA UNGWE AHA HWESTA ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_13 TW_EXT_14 TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 ALDA SILME ESSE HWESTA_SINDARINWA MALTA_W_HOOK SHOOK_BEAUTIFUL ANCA_CLOSED NUM_2 NUM_3 NUM_5 NUM_6 NUM_7 NUM_9\\n\\\\end\\n\\n\\\\beg virtual A_TEHTA_CIRCUM\\n  \\\\class A_TEHTA_CIRCUM_XS TELCO ARA HALLA HYARMEN HARP_SHAPED NUM_10 NUM_11\\n  \\\\class A_TEHTA_CIRCUM_S SULE FORMEN TW_EXT_11 TW_EXT_12 SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA YANTA OSSE AHA_TINCO HWESTA_TINCO NUM_0 NUM_4 NUM_8\\n  \\\\class A_TEHTA_CIRCUM_L TINCO PARMA CALMA QUESSE ORE VALA ANNA VILYA ROMEN ARDA LAMBE URE VAIA VALA_W_HOOK NUM_1\\n  \\\\class A_TEHTA_CIRCUM_XL ANDO UMBAR ANGA UNGWE AHA HWESTA ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_13 TW_EXT_14 TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 ALDA SILME ESSE HWESTA_SINDARINWA MALTA_W_HOOK SHOOK_BEAUTIFUL ANCA_CLOSED NUM_2 NUM_3 NUM_5 NUM_6 NUM_7 NUM_9\\n\\\\end\\n\\n\\\\beg virtual A_TEHTA_REVERSED\\n  \\\\class A_TEHTA_INV_XS TELCO ARA HALLA HYARMEN HARP_SHAPED NUM_10 NUM_11\\n  \\\\class A_TEHTA_INV_S SULE FORMEN TW_EXT_11 TW_EXT_12 SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA YANTA OSSE AHA_TINCO HWESTA_TINCO NUM_0 NUM_4 NUM_8\\n  \\\\class A_TEHTA_INV_L TINCO PARMA CALMA QUESSE ORE VALA ANNA VILYA ROMEN ARDA LAMBE URE VAIA VALA_W_HOOK NUM_1\\n  \\\\class A_TEHTA_INV_XL ANDO UMBAR ANGA UNGWE AHA HWESTA ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_13 TW_EXT_14 TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 ALDA SILME ESSE HWESTA_SINDARINWA MALTA_W_HOOK SHOOK_BEAUTIFUL ANCA_CLOSED NUM_2 NUM_3 NUM_5 NUM_6 NUM_7 NUM_9\\n\\\\end\\n\\n\\\\beg virtual A_TEHTA_CIRCUM_REVERSED TEHTA_BREVE\\n  \\\\class THSUP_TICK_XS TELCO ARA HALLA HYARMEN HARP_SHAPED NUM_10 NUM_11\\n  \\\\class THSUP_TICK_S SULE FORMEN TW_EXT_11 TW_EXT_12 SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA YANTA OSSE AHA_TINCO HWESTA_TINCO NUM_0 NUM_4 NUM_8\\n  \\\\class THSUP_TICK_L TINCO PARMA CALMA QUESSE ORE VALA ANNA VILYA ROMEN ARDA LAMBE URE VAIA VALA_W_HOOK NUM_1\\n  \\\\class THSUP_TICK_XL ANDO UMBAR ANGA UNGWE AHA HWESTA ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_13 TW_EXT_14 TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 ALDA SILME ESSE HWESTA_SINDARINWA MALTA_W_HOOK SHOOK_BEAUTIFUL ANCA_CLOSED NUM_2 NUM_3 NUM_5 NUM_6 NUM_7 NUM_9\\n\\\\end\\n\\n\\\\beg virtual E_TEHTA\\n  \\\\class E_TEHTA_XS TELCO ARA HALLA HYARMEN HARP_SHAPED NUM_10 NUM_11\\n  \\\\class E_TEHTA_S SULE FORMEN TW_EXT_11 TW_EXT_12 SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA YANTA OSSE AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_8\\n  \\\\class E_TEHTA_L TINCO PARMA CALMA QUESSE ORE VALA ANNA VILYA ROMEN ARDA LAMBE URE VAIA NUM_4\\n  \\\\class E_TEHTA_XL ANDO UMBAR ANGA UNGWE AHA HWESTA ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_13 TW_EXT_14 TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 ALDA SILME ESSE HWESTA_SINDARINWA MALTA_W_HOOK VALA_W_HOOK SHOOK_BEAUTIFUL ANCA_CLOSED NUM_2 NUM_3 NUM_5 NUM_6 NUM_7 NUM_9\\n\\\\end\\n\\n\\\\beg virtual E_TEHTA_GRAVE\\n  \\\\class E_TEHTA_GRAVE_XS TELCO ARA HALLA AHA HWESTA ORE VALA ANNA VILYA TW_EXT_11 TW_EXT_12 TW_EXT_13 TW_EXT_14 ROMEN ARDA SILME ESSE HWESTA_SINDARINWA YANTA URE OSSE VAIA HARP_SHAPED NUM_5 NUM_7 NUM_10 NUM_11\\n  \\\\class E_TEHTA_GRAVE_S SULE FORMEN SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA HYARMEN AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_4 NUM_8\\n  \\\\class E_TEHTA_GRAVE_L TINCO PARMA CALMA QUESSE ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 LAMBE ALDA MALTA_W_HOOK VALA_W_HOOK SHOOK_BEAUTIFUL ANCA_CLOSED NUM_2 NUM_6 NUM_9\\n  \\\\class E_TEHTA_GRAVE_XL NUM_3\\n\\\\end\\n\\n\\\\beg virtual I_TEHTA\\n  \\\\class I_TEHTA_XS TELCO ARA HALLA HYARMEN HARP_SHAPED NUM_10 NUM_11\\n  \\\\class I_TEHTA_S SULE FORMEN TW_EXT_11 TW_EXT_12 SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA YANTA OSSE AHA_TINCO HWESTA_TINCO NUM_0\\n  \\\\class I_TEHTA_L TINCO PARMA CALMA QUESSE ORE VALA ANNA VILYA ROMEN ARDA LAMBE URE VAIA VALA_W_HOOK NUM_1 NUM_4 NUM_7 NUM_8\\n  \\\\class I_TEHTA_XL ANDO UMBAR ANGA UNGWE AHA HWESTA ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_13 TW_EXT_14 TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 ALDA SILME ESSE HWESTA_SINDARINWA MALTA_W_HOOK SHOOK_BEAUTIFUL ANCA_CLOSED NUM_2 NUM_3 NUM_5 NUM_6 NUM_9\\n\\\\end\\n\\n\\\\beg virtual O_TEHTA\\n  \\\\class O_TEHTA_XS TELCO ARA HALLA HYARMEN HARP_SHAPED NUM_10 NUM_11\\n  \\\\class O_TEHTA_S SULE FORMEN TW_EXT_11 TW_EXT_12 SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA YANTA OSSE AHA_TINCO HWESTA_TINCO NUM_0\\n  \\\\class O_TEHTA_L TINCO PARMA CALMA QUESSE ORE VALA ANNA VILYA ROMEN ARDA LAMBE URE VAIA NUM_4\\n  \\\\class O_TEHTA_XL ANDO UMBAR ANGA UNGWE AHA HWESTA ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_13 TW_EXT_14 TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 ALDA SILME ESSE HWESTA_SINDARINWA MALTA_W_HOOK VALA_W_HOOK SHOOK_BEAUTIFUL ANCA_CLOSED NUM_1 NUM_2 NUM_3 NUM_5 NUM_6 NUM_7 NUM_8 NUM_9\\n\\\\end\\n\\n\\\\beg virtual U_TEHTA\\n  \\\\class U_TEHTA_XS TELCO ARA HALLA HYARMEN HARP_SHAPED NUM_10 NUM_11\\n  \\\\class U_TEHTA_S SULE FORMEN TW_EXT_11 TW_EXT_12 SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA YANTA OSSE AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_8\\n  \\\\class U_TEHTA_L TINCO PARMA CALMA QUESSE ORE VALA ANNA VILYA ROMEN ARDA LAMBE URE VAIA VALA_W_HOOK NUM_4\\n  \\\\class U_TEHTA_XL ANDO UMBAR ANGA UNGWE AHA HWESTA ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_13 TW_EXT_14 TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 ALDA SILME ESSE HWESTA_SINDARINWA MALTA_W_HOOK SHOOK_BEAUTIFUL ANCA_CLOSED NUM_2 NUM_3 NUM_5 NUM_6 NUM_7 NUM_9\\n\\\\end\\n\\n\\\\beg virtual WA_TEHTA SEV_TEHTA\\n  \\\\class WA_TEHTA_XS TELCO ARA HALLA HYARMEN HARP_SHAPED NUM_4 NUM_10 NUM_11\\n  \\\\class WA_TEHTA_S SULE FORMEN TW_EXT_11 TW_EXT_12 SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA YANTA OSSE VAIA AHA_TINCO HWESTA_TINCO NUM_0 NUM_8\\n  \\\\class WA_TEHTA_L TINCO PARMA CALMA QUESSE ORE VALA ANNA VILYA ROMEN ARDA LAMBE URE VALA_W_HOOK NUM_1 NUM_5 NUM_7\\n  \\\\class WA_TEHTA_XL ANDO UMBAR ANGA UNGWE AHA HWESTA ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_13 TW_EXT_14 TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 ALDA SILME ESSE HWESTA_SINDARINWA MALTA_W_HOOK SHOOK_BEAUTIFUL ANCA_CLOSED NUM_2 NUM_3 NUM_6 NUM_9\\n\\\\end\\n\\n\\\\beg virtual A_TEHTA_DOUBLE\\n  \\\\class A_TEHTA_DOUBLE_XS TELCO ARA HALLA HYARMEN HARP_SHAPED NUM_10 NUM_11\\n  \\\\class A_TEHTA_DOUBLE_S SULE FORMEN TW_EXT_11 TW_EXT_12 SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA YANTA OSSE AHA_TINCO HWESTA_TINCO NUM_0 NUM_4 NUM_8\\n  \\\\class A_TEHTA_DOUBLE_L TINCO PARMA CALMA QUESSE ORE VALA ANNA VILYA ROMEN ARDA LAMBE URE VAIA NUM_1\\n  \\\\class A_TEHTA_DOUBLE_XL ANDO UMBAR ANGA UNGWE AHA HWESTA ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_13 TW_EXT_14 TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 ALDA SILME ESSE HWESTA_SINDARINWA MALTA_W_HOOK VALA_W_HOOK SHOOK_BEAUTIFUL ANCA_CLOSED NUM_2 NUM_3 NUM_5 NUM_6 NUM_7 NUM_9\\n\\\\end\\n\\n\\\\beg virtual E_TEHTA_DOUBLE\\n  \\\\class E_TEHTA_DOUBLE_XS TELCO ARA HALLA HYARMEN HARP_SHAPED NUM_10 NUM_11\\n  \\\\class E_TEHTA_DOUBLE_S SULE FORMEN TW_EXT_11 TW_EXT_12 SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA YANTA OSSE AHA_TINCO HWESTA_TINCO\\n  \\\\class E_TEHTA_DOUBLE_L TINCO PARMA CALMA QUESSE ORE VALA ANNA VILYA ROMEN ARDA LAMBE URE VAIA NUM_0\\n  \\\\class E_TEHTA_DOUBLE_XL ANDO UMBAR ANGA UNGWE AHA HWESTA ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_13 TW_EXT_14 TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 ALDA SILME ESSE HWESTA_SINDARINWA MALTA_W_HOOK VALA_W_HOOK SHOOK_BEAUTIFUL ANCA_CLOSED NUM_1 NUM_2 NUM_3 NUM_4 NUM_5 NUM_6 NUM_7 NUM_8 NUM_9\\n\\\\end\\n\\n\\\\beg virtual I_TEHTA_DOUBLE Y_TEHTA\\n  \\\\class I_TEHTA_DOUBLE_XS TELCO ARA HALLA HYARMEN HARP_SHAPED NUM_10 NUM_11\\n  \\\\class I_TEHTA_DOUBLE_S SULE FORMEN TW_EXT_11 TW_EXT_12 SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA YANTA OSSE VAIA AHA_TINCO HWESTA_TINCO NUM_0 NUM_4 NUM_8\\n  \\\\class I_TEHTA_DOUBLE_L TINCO PARMA CALMA QUESSE ORE VALA ANNA VILYA ROMEN ARDA LAMBE URE VALA_W_HOOK NUM_1\\n  \\\\class I_TEHTA_DOUBLE_XL ANDO UMBAR ANGA UNGWE AHA HWESTA ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_13 TW_EXT_14 TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 ALDA SILME ESSE HWESTA_SINDARINWA MALTA_W_HOOK SHOOK_BEAUTIFUL ANCA_CLOSED NUM_2 NUM_3 NUM_5 NUM_6 NUM_7 NUM_9\\n\\\\end\\n\\n\\\\beg virtual O_TEHTA_DOUBLE\\n  \\\\class O_TEHTA_DOUBLE_XS TELCO ARA HALLA HYARMEN HARP_SHAPED NUM_10 NUM_11\\n  \\\\class O_TEHTA_DOUBLE_S SULE FORMEN TW_EXT_11 TW_EXT_12 SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA YANTA OSSE VAIA AHA_TINCO HWESTA_TINCO\\n  \\\\class O_TEHTA_DOUBLE_L TINCO PARMA CALMA QUESSE ORE VALA ANNA VILYA ROMEN ARDA LAMBE URE NUM_0 NUM_4 NUM_8\\n  \\\\class O_TEHTA_DOUBLE_XL ANDO UMBAR ANGA UNGWE AHA HWESTA ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_13 TW_EXT_14 TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 ALDA SILME ESSE HWESTA_SINDARINWA MALTA_W_HOOK VALA_W_HOOK SHOOK_BEAUTIFUL ANCA_CLOSED NUM_1 NUM_2 NUM_3 NUM_5 NUM_6 NUM_7 NUM_9\\n\\\\end\\n\\n\\\\beg virtual U_TEHTA_DOUBLE\\n  \\\\class U_TEHTA_DOUBLE_XS TELCO ARA HALLA HYARMEN HARP_SHAPED NUM_10 NUM_11\\n  \\\\class U_TEHTA_DOUBLE_S SULE FORMEN TW_EXT_11 TW_EXT_12 SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA YANTA OSSE VAIA AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_8\\n  \\\\class U_TEHTA_DOUBLE_L TINCO PARMA CALMA QUESSE ORE VALA ANNA VILYA ROMEN ARDA LAMBE URE NUM_4\\n  \\\\class U_TEHTA_DOUBLE_XL ANDO UMBAR ANGA UNGWE AHA HWESTA ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_13 TW_EXT_14 TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 ALDA SILME ESSE HWESTA_SINDARINWA MALTA_W_HOOK VALA_W_HOOK SHOOK_BEAUTIFUL ANCA_CLOSED NUM_2 NUM_3 NUM_5 NUM_6 NUM_7 NUM_9\\n\\\\end\\n\\n\\\\beg virtual A_TEHTA_INF\\n  \\\\class THINF_TDOT_XS TELCO ARA HALLA ROMEN ARDA SILME_NUQUERNA SILME_NUQUERNA_ALT HARP_SHAPED\\n  \\\\class THINF_TDOT_S TINCO PARMA TW_EXT_11 TW_EXT_12 SILME YANTA OSSE AHA_TINCO HWESTA_TINCO NUM_5 NUM_7\\n  \\\\class THINF_TDOT_L SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA URE VAIA NUM_0 NUM_1 NUM_4 NUM_8 NUM_10 NUM_11\\n  \\\\class THINF_TDOT_XL CALMA QUESSE ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_13 TW_EXT_14 TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 LAMBE ALDA MALTA_W_HOOK VALA_W_HOOK SHOOK_BEAUTIFUL ANCA_CLOSED NUM_2 NUM_3 NUM_6 NUM_9\\n\\\\end\\n\\n\\\\beg virtual E_TEHTA_INF\\n  \\\\class THINF_ACCENT_XS TELCO ARA HALLA ROMEN ARDA SILME_NUQUERNA SILME_NUQUERNA_ALT VAIA HARP_SHAPED NUM_0 NUM_1 NUM_4 NUM_5 NUM_7 NUM_8 NUM_10 NUM_11\\n  \\\\class THINF_ACCENT_S TINCO PARMA TW_EXT_11 TW_EXT_12 SILME YANTA OSSE VALA_W_HOOK AHA_TINCO HWESTA_TINCO\\n  \\\\class THINF_ACCENT_L SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA URE NUM_2 NUM_3 NUM_6 NUM_9\\n  \\\\class THINF_ACCENT_XL CALMA QUESSE ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_13 TW_EXT_14 TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 LAMBE ALDA MALTA_W_HOOK SHOOK_BEAUTIFUL ANCA_CLOSED\\n\\\\end\\n\\n\\\\beg virtual E_TEHTA_GRAVE_INF\\n  \\\\class E_TEHTA_GRAVE_INF_XS TELCO ARA HALLA HARP_SHAPED\\n  \\\\class E_TEHTA_GRAVE_INF_S CALMA QUESSE LAMBE ALDA SHOOK_BEAUTIFUL NUM_2 NUM_5\\n  \\\\class E_TEHTA_GRAVE_INF_L TINCO PARMA SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA TW_EXT_11 TW_EXT_12 TW_EXT_13 TW_EXT_14 ROMEN ARDA SILME SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA YANTA URE OSSE VAIA VALA_W_HOOK AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_4 NUM_7 NUM_8 NUM_10 NUM_11\\n  \\\\class E_TEHTA_GRAVE_INF_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 MALTA_W_HOOK ANCA_CLOSED NUM_3 NUM_6 NUM_9\\n\\\\end\\n\\n\\\\beg virtual CIRC_TEHTA_INF\\n  \\\\class TH_SUB_CIRC_XS TELCO ARA HALLA ROMEN ARDA SILME_NUQUERNA SILME_NUQUERNA_ALT HARP_SHAPED\\n  \\\\class TH_SUB_CIRC_S TINCO PARMA TW_EXT_11 TW_EXT_12 SILME YANTA OSSE VAIA AHA_TINCO HWESTA_TINCO NUM_0 NUM_7 NUM_10 NUM_11\\n  \\\\class TH_SUB_CIRC_L SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA URE VALA_W_HOOK NUM_1 NUM_2 NUM_4 NUM_5 NUM_8\\n  \\\\class TH_SUB_CIRC_XL CALMA QUESSE ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_13 TW_EXT_14 TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 LAMBE ALDA MALTA_W_HOOK SHOOK_BEAUTIFUL ANCA_CLOSED NUM_3 NUM_6 NUM_9\\n\\\\end\\n\\n\\\\beg virtual THINNAS  THINF_STROKE\\n  \\\\class THINF_STROKE_XS TELCO ARA HALLA ROMEN ARDA SILME_NUQUERNA SILME_NUQUERNA_ALT HARP_SHAPED\\n  \\\\class THINF_STROKE_S TINCO PARMA TW_EXT_11 TW_EXT_12 SILME YANTA OSSE AHA_TINCO HWESTA_TINCO NUM_5\\n  \\\\class THINF_STROKE_L SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA URE VAIA VALA_W_HOOK NUM_0 NUM_1 NUM_4 NUM_7 NUM_8 NUM_10 NUM_11\\n  \\\\class THINF_STROKE_XL CALMA QUESSE ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_13 TW_EXT_14 TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 LAMBE ALDA MALTA_W_HOOK SHOOK_BEAUTIFUL ANCA_CLOSED NUM_2 NUM_3 NUM_6 NUM_9\\n\\\\end\\n\\n\\\\beg virtual O_TEHTA_INF\\n  \\\\class THINF_CURL_XS TELCO ARA HALLA ROMEN ARDA SILME_NUQUERNA SILME_NUQUERNA_ALT HARP_SHAPED NUM_10 NUM_11\\n  \\\\class THINF_CURL_S TINCO PARMA TW_EXT_11 TW_EXT_12 SILME YANTA OSSE AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_2 NUM_3 NUM_4 NUM_5 NUM_6 NUM_7 NUM_8 NUM_9\\n  \\\\class THINF_CURL_L SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA URE VAIA VALA_W_HOOK\\n  \\\\class THINF_CURL_XL CALMA QUESSE ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_13 TW_EXT_14 TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 LAMBE ALDA MALTA_W_HOOK SHOOK_BEAUTIFUL ANCA_CLOSED\\n\\\\end\\n\\n\\\\beg virtual U_TEHTA_INF\\n  \\\\class THINF_CURL_INV_XS TELCO ARA HALLA ROMEN ARDA SILME_NUQUERNA SILME_NUQUERNA_ALT HARP_SHAPED NUM_4 NUM_7 NUM_10 NUM_11\\n  \\\\class THINF_CURL_INV_S TINCO PARMA TW_EXT_11 TW_EXT_12 SILME YANTA OSSE AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_2 NUM_5 NUM_8 NUM_9\\n  \\\\class THINF_CURL_INV_L SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA URE VAIA VALA_W_HOOK NUM_6\\n  \\\\class THINF_CURL_INV_XL CALMA QUESSE ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_13 TW_EXT_14 TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 LAMBE ALDA MALTA_W_HOOK SHOOK_BEAUTIFUL ANCA_CLOSED NUM_3\\n\\\\end\\n\\n\\\\beg virtual PALATAL_SIGN I_TEHTA_DOUBLE_INF Y_TEHTA_INF\\n  \\\\class THINF_DDOT_XS TELCO ARA HALLA ROMEN ARDA SILME_NUQUERNA SILME_NUQUERNA_ALT HARP_SHAPED\\n  \\\\class THINF_DDOT_S TINCO PARMA TW_EXT_11 TW_EXT_12 SILME YANTA OSSE VAIA AHA_TINCO HWESTA_TINCO NUM_0 NUM_4 NUM_5 NUM_7 NUM_10 NUM_11\\n  \\\\class THINF_DDOT_L SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA URE VALA_W_HOOK NUM_1 NUM_8\\n  \\\\class THINF_DDOT_XL CALMA QUESSE ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_13 TW_EXT_14 TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 MALTA_W_HOOK SHOOK_BEAUTIFUL ANCA_CLOSED NUM_2 NUM_3 NUM_6 NUM_9\\n  \\\\class LAMBE_MARK_DDOT LAMBE ALDA\\n\\\\end\\n\\n\\\\beg virtual E_TEHTA_DOUBLE_INF GEMINATE_DOUBLE\\n  \\\\class THINF_DSTROKE_XS TELCO ARA HALLA ROMEN ARDA SILME_NUQUERNA SILME_NUQUERNA_ALT HARP_SHAPED\\n  \\\\class THINF_DSTROKE_S TINCO PARMA TW_EXT_11 TW_EXT_12 SILME YANTA OSSE VAIA AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_4 NUM_5 NUM_7 NUM_10 NUM_11\\n  \\\\class THINF_DSTROKE_L SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA URE VALA_W_HOOK NUM_2 NUM_3 NUM_6 NUM_8\\n  \\\\class THINF_DSTROKE_XL CALMA QUESSE ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_13 TW_EXT_14 TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 MALTA_W_HOOK SHOOK_BEAUTIFUL ANCA_CLOSED NUM_9\\n  \\\\class LAMBE_MARK_DSTROKE LAMBE ALDA\\n\\\\end\\n\\n\\\\beg virtual UNUTIXE I_TEHTA_INF NO_VOWEL_DOT\\n  \\\\class THINF_DOT_XS TELCO ARA HALLA ROMEN ARDA SILME_NUQUERNA SILME_NUQUERNA_ALT HARP_SHAPED\\n  \\\\class THINF_DOT_S TINCO PARMA TW_EXT_11 TW_EXT_12 SILME YANTA OSSE VAIA AHA_TINCO HWESTA_TINCO NUM_0 NUM_10 NUM_11\\n  \\\\class THINF_DOT_L SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA URE NUM_1 NUM_4 NUM_5 NUM_7 NUM_8\\n  \\\\class THINF_DOT_XL CALMA QUESSE ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_13 TW_EXT_14 TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 MALTA_W_HOOK VALA_W_HOOK SHOOK_BEAUTIFUL ANCA_CLOSED NUM_2 NUM_3 NUM_6 NUM_9\\n  \\\\class LAMBE_MARK_DOT LAMBE ALDA\\n\\\\end\\n\\n\\\\beg virtual GEMINATE_SIGN\\n  \\\\class DASH_INF_XS TELCO ARA HALLA\\n  \\\\class DASH_INF_S TINCO PARMA CALMA QUESSE SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA TW_EXT_11 TW_EXT_12 TW_EXT_13 TW_EXT_14 ROMEN ARDA SILME SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA YANTA URE OSSE VAIA VALA_W_HOOK SHOOK_BEAUTIFUL HARP_SHAPED AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_4 NUM_5 NUM_6 NUM_7 NUM_8 NUM_10 NUM_11\\n  \\\\class DASH_INF_L ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_9\\n  \\\\class LAMBE_MARK_DASH LAMBE ALDA\\n\\\\end\\n\\n\\\\beg virtual GEMINATE_SIGN_TILD\\n  \\\\class TILD_INF_XS TELCO ARA HALLA\\n  \\\\class TILD_INF_S TINCO PARMA CALMA QUESSE SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA TW_EXT_11 TW_EXT_12 TW_EXT_13 TW_EXT_14 ROMEN ARDA SILME SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA YANTA URE OSSE VAIA VALA_W_HOOK SHOOK_BEAUTIFUL HARP_SHAPED AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_4 NUM_5 NUM_6 NUM_7 NUM_8 NUM_10 NUM_11\\n  \\\\class TILD_INF_L ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_9\\n  \\\\class LAMBE_MARK_TILD LAMBE ALDA\\n\\\\end\\n\\n\\\\beg virtual NASALIZE_SIGN\\n  \\\\class DASH_SUP_XS TELCO ARA HALLA\\n  \\\\class DASH_SUP_S TINCO PARMA CALMA QUESSE SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA TW_EXT_11 TW_EXT_12 TW_EXT_13 TW_EXT_14 ROMEN ARDA LAMBE ALDA SILME SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA YANTA URE OSSE VAIA VALA_W_HOOK SHOOK_BEAUTIFUL HARP_SHAPED AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_4 NUM_5 NUM_6 NUM_7 NUM_8 NUM_10 NUM_11\\n  \\\\class DASH_SUP_L ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_9\\n\\\\end\\n\\n\\\\beg virtual NASALIZE_SIGN_TILD\\n  \\\\class TILD_SUP_XS TELCO ARA HALLA\\n  \\\\class TILD_SUP_S TINCO PARMA CALMA QUESSE SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA TW_EXT_11 TW_EXT_12 TW_EXT_13 TW_EXT_14 ROMEN ARDA LAMBE ALDA SILME SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA YANTA URE OSSE VAIA VALA_W_HOOK SHOOK_BEAUTIFUL HARP_SHAPED AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_4 NUM_5 NUM_6 NUM_7 NUM_8 NUM_10 NUM_11\\n  \\\\class TILD_SUP_L ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_9\\n\\\\end\\n\\n\\\\beg virtual SARINCE\\n  \\\\class SHOOK_LEFT_L CALMA QUESSE ANGA UNGWE TW_EXT_13 TW_EXT_14 TW_EXT_23 TW_EXT_24 HWESTA_SINDARINWA\\n  \\\\class SHOOK_RIGHT_L TELCO ARA HALLA TINCO PARMA ANDO UMBAR SULE FORMEN AHA HWESTA ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME ORE VALA ANNA VILYA TW_EXT_11 TW_EXT_12 TW_EXT_21 TW_EXT_22 ROMEN ARDA LAMBE ALDA SILME SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE ESSE_NUQUERNA HYARMEN YANTA URE OSSE VAIA MALTA_W_HOOK VALA_W_HOOK SHOOK_BEAUTIFUL ANCA_CLOSED HARP_SHAPED AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_2 NUM_3 NUM_4 NUM_5 NUM_6 NUM_7 NUM_8 NUM_9 NUM_10 NUM_11\\n\\\\end\\n\"\nGlaemscribe.resource_manager.raw_charsets[\"tengwar_guni_elfica\"] = \"\\\\**\\n\\nGlǽmscribe (also written Glaemscribe) is a software dedicated to\\nthe transcription of texts between writing systems, and more \\nspecifically dedicated to the transcription of J.R.R. Tolkien\\'s \\ninvented languages to some of his devised writing systems.\\n\\nCopyright (C) 2015 Benjamin Babut (Talagan).\\n\\nThis program is free software: you can redistribute it and/or modify\\nit under the terms of the GNU Affero General Public License as published by\\nthe Free Software Foundation, either version 3 of the License, or\\nany later version.\\n\\nThis program is distributed in the hope that it will be useful,\\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\nGNU Affero General Public License for more details.\\n\\nYou should have received a copy of the GNU Affero General Public License\\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\\n\\n**\\\\\\n\\n\\\\** Charset specially customized for Tengwar Elfica (Glaemscrafu patched version) **\\\\ \\n\\n\\\\version 0.1.0\\n\\n\\\\beg changelog\\n  \\\\** Changes done to the original font and inherited. **\\\\\\n  \\\\entry \\\"0.0.0\\\" \\\"Added VALA_W_HOOK, VAIYA.\\\"\\n  \\\\entry \\\"0.0.0\\\" \\\"Superior and inferior dash and tild consonant modification signs have been added for halla, telco and ara. / Added pustar combinations (4/4-halfed/4-squared/5)\\\"\\n  \\\\entry \\\"0.0.0\\\" \\\"Fixed missing tinco_ext / sule_ext\\\"\\n  \\\\entry \\\"0.0.0\\\" \\\"Added NBSP\\\"\\n  \\n  \\\\entry \\\"0.1.0\\\" \\\"First version of the unicode layout\\\"\\n\\\\end\\n\\n\\n\\\\char 20 SPACE\\n\\\\char a0 NBSP\\n\\n\\\\char 2018 SQUOT_OPEN\\n\\\\char 2019 SQUOT_CLOSE\\n\\n\\\\char 28 PUNCT_PAREN_L \\n\\\\char 29 PUNCT_PAREN_R \\n\\\\char 5B PUNCT_PAREN_L_ALT \\n\\\\char 5D PUNCT_PAREN_R_ALT \\n\\n\\\\** PUSTAR, take them in unicode not in personnal use (deprecation) **\\\\\\n\\\\char 2e31 PUNCT_DOT\\n\\\\char   3a PUNCT_DDOT\\n\\\\char 205D PUNCT_TDOT PUSTA_3\\n\\\\char 2058 PUSTA_4\\n\\\\char 10FB PUSTA_4_HALFED\\n\\\\char 2E2C PUSTA_4_SQUARED\\n\\\\char 2E2D PUSTA_5\\n\\n\\n\\n\\\\char e000  TW_11 TINCO     \\n\\\\char e001  TW_12 PARMA\\n\\\\char e002  TW_13 CALMA\\n\\\\char e003  TW_14 QUESSE\\n\\\\char e004  TW_21 ANDO  \\n\\\\char e005  TW_22 UMBAR\\n\\\\char e006  TW_23 ANGA  \\n\\\\char e007  TW_24 UNGWE   \\n\\\\char e008  TW_31 SULE THULE\\n\\\\char e009  TW_32 FORMEN\\n\\\\char e00A  TW_33 AHA  \\n\\\\char e00B  TW_34 HWESTA\\n\\\\char e00C  TW_41 ANTO\\n\\\\char e00D  TW_42 AMPA\\n\\\\char e00E  TW_43 ANCA\\n\\\\char e00F  TW_44 UNQUE\\n\\n\\\\char e010  TW_51 NUMEN \\n\\\\char e011  TW_52 MALTA\\n\\\\char e012  TW_53 NOLDO\\n\\\\char e013  TW_54 NWALME\\n\\\\char e014  TW_61 ORE\\n\\\\char e015  TW_62 VALA\\n\\\\char e016  TW_63 ANNA\\n\\\\char e017  TW_64 VILYA\\n\\\\char e018  TW_EXT_11 TINCO_EXT SULE_EXT THULE_EXT\\n\\\\char e019  TW_EXT_12 PARMA_EXT FORMEN_EXT \\n\\\\char e01A  TW_EXT_13 CALMA_EXT AHA_EXT\\n\\\\char e01B  TW_EXT_14 QUESSE_EXT HWESTA_EXT   \\n\\\\char e01C  TW_EXT_21 ANDO_EXT ANTO_EXT \\n\\\\char e01D  TW_EXT_22 UMBAR_EXT AMPA_EXT\\n\\\\char e01E  TW_EXT_23 ANGA_EXT ANCA_EXT\\n\\\\char e01F  TW_EXT_24 UNGWE_EXT UNQUE_EXT\\n\\n\\\\char e020  TW_71 ROMEN\\n\\\\char e021  TW_72 ARDA\\n\\\\char e022  TW_73 LAMBE LAMBE_NO_LIG\\n\\\\char e023  TW_74 ALDA \\n\\\\char e024  TW_81 SILME \\n\\\\char e025  TW_82 SILME_NUQUERNA \\n\\\\char e026  TW_83 ESSE\\n\\\\char e027  TW_84 ESSE_NUQUERNA\\n\\\\char e028  TW_91 HYARMEN \\n\\\\char e029  TW_92 HWESTA_SINDARINWA \\n\\\\char e02A  TW_93 YANTA\\n\\\\char e02B  TW_94 URE\\n\\\\char e02C  ARA\\n\\\\char e02D  HALLA\\n\\\\char e02E  TELCO\\n\\\\**.....**\\\\    \\n\\n\\\\char e030  REVERSED_OSSE\\n\\\\char e031  BOMBADIL_W \\n\\\\char e032  OSSE\\n\\\\**.....**\\\\ \\n\\\\char e034  LIGATING_SHORT_CARRIER\\n\\\\**..D..**\\\\ \\n\\\\char e036  ANNA_OPEN\\n\\\\char e037  CHRISTOPHER_QU\\n\\\\**..D..**\\\\ \\n\\\\char e039  BOMBADIL_HW\\n\\\\char e03A  TW_MH MALTA_W_HOOK \\n\\\\char e03B  TW_MH_BELERIANDIC VALA_W_HOOK \\n\\\\char e03C  TW_HW_LOWDHAM HARP_SHAPED\\n\\\\char e03D  VAIA WAIA VAIYA\\n\\\\**..X..**\\\\ \\n\\\\**..X..**\\\\ \\n \\n\\\\char e040  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e041  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e042  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e043  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e044  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e045  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e046  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e047  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e048  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e049  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e04A  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e04B  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e04C  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e04D  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e04E  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e04F  ? \\\\** LEGACY FONT **\\\\\\n\\n\\\\char e050  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e051  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e052  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e053  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e054  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e055  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e056  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e057  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e058  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e059  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e05A  ? \\\\** LEGACY FONT **\\\\\\n\\\\**.....**\\\\ \\n\\\\**.....**\\\\ \\n\\\\**.....**\\\\ \\n\\\\**.....**\\\\ \\n\\\\**.....**\\\\ \\n\\n\\\\**..D..**\\\\ \\n\\\\**..D..**\\\\ \\n\\\\**..D..**\\\\ \\n\\\\**..D..**\\\\ \\n\\\\**..D..**\\\\ \\n\\\\char e065  PUNCT_EXCLAM\\n\\\\char e066  PUNCT_INTERR\\n\\\\char e067  ELVISH_PAREN BOOKMARK_SIGN\\n\\\\char e068  PUNCT_TILD \\n\\\\char e069  PUNCT_DTILD\\n\\\\char e06A  DQUOT_OPEN\\n\\\\char e06B  DQUOT_CLOSE\\n\\\\char e06C  THORIN_EXCLAMATION\\n\\\\**.....**\\\\ \\n\\\\**..X..**\\\\ \\n\\\\**..X..**\\\\ \\n\\n\\n\\\\char e070 NUM_0 \\n\\\\char e071 NUM_1 \\n\\\\char e072 NUM_2 \\n\\\\char e073 NUM_3 \\n\\\\char e074 NUM_4 \\n\\\\char e075 NUM_5 \\n\\\\char e076 NUM_6 \\n\\\\char e077 NUM_7 \\n\\\\char e078 NUM_8 \\n\\\\char e079 NUM_9 \\n\\\\char e07A NUM_10\\n\\\\char e07B NUM_11\\n\\\\char e07C NUM_12\\n\\n\\\\** MISSING in the norm**\\\\\\n\\\\char 204A OLD_ENGLISH_AND\\n\\n\\\\char e03e SILME_NUQUERNA_ALT\\n\\\\char e06e RING_MARK_L \\n\\\\char e06f RING_MARK_R\\n\\n\\\\** LEGACY SARINCE **\\\\\\n\\n\\\\char EBD0 SARINCE_LEFT_V1 SHOOK_LEFT_L \\n\\\\char EBD1 SARINCE_LEFT_V2 SHOOK_LEFT_S \\n\\n\\\\char EBD8 SARINCE_RIGHT_V1 SHOOK_RIGHT_L\\n\\\\char EBD9 SARINCE_RIGHT_V2 SHOOK_RIGHT_S\\n\\\\char EBDA SARINCE_RIGHT_V3\\n\\n\\\\char EBE0 SARINCE_SEMI_ASCENDING_V1\\n\\n\\\\char EBE8 SARINCE_ASCENDING_V1\\n\\\\** .. **\\\\\\n\\\\char EBEA SARINCE_ASCENDING_V3\\n\\n\\\\char EBF0 SARINCE_DESCENDING_V1\\n\\n\\\\char EBF8 SARINCE_FLOURISHED_V1  SARINCE_FLOURISHED SHOOK_BEAUTIFUL\\n\\\\char EBF9 SARINCE_FLOURISHED_V2\\n\\n\\\\** Consonant modifiers **\\\\\\n\\n\\\\char EC00 DASH_INF_XS\\n\\\\char EC01 DASH_INF_S   \\n\\\\char EC02 DASH_INF_L    \\n\\\\char EC0F LAMBE_MARK_DASH \\n\\n\\\\char EC10 TILD_INF_XS\\n\\\\char EC11 TILD_INF_S   \\n\\\\char EC12 TILD_INF_L            \\n\\\\char EC1F LAMBE_MARK_TILD   \\n\\n\\\\char EC20 DASH_SUP_XS\\n\\\\char EC21 DASH_SUP_S                      \\n\\\\char EC22 DASH_SUP_L  \\n\\n\\\\char EC30 TILD_SUP_XS\\n\\\\char EC31 TILD_SUP_S  \\n\\\\char EC32 TILD_SUP_L                       \\n\\n\\\\** Base tehtar **\\\\\\n\\n\\\\char EC40 A_TEHTA_XS  \\n\\\\char EC41 A_TEHTA_S \\n\\\\char EC42 A_TEHTA_L \\n\\\\char EC43 A_TEHTA_XL       \\n\\n\\\\char EC50 E_TEHTA_XS         \\n\\\\char EC51 E_TEHTA_S\\n\\\\char EC52 E_TEHTA_L \\n\\\\char EC53 E_TEHTA_XL  \\n\\n\\\\char EC60 I_TEHTA_XS   \\n\\\\char EC61 I_TEHTA_S  \\n\\\\char EC62 I_TEHTA_L   \\n\\\\char EC63 I_TEHTA_XL   \\n      \\n\\\\char EC70 O_TEHTA_XS              \\n\\\\char EC71 O_TEHTA_S    \\n\\\\char EC72 O_TEHTA_L   \\n\\\\char EC73 O_TEHTA_XL \\n      \\n\\\\char EC80 U_TEHTA_XS \\n\\\\char EC81 U_TEHTA_S \\n\\\\char EC82 U_TEHTA_L    \\n\\\\char EC83 U_TEHTA_XL  \\n\\n\\\\** Inf tehtar **\\\\\\n\\n\\\\char EC90 THINF_TDOT_XS       \\n\\\\char EC91 THINF_TDOT_L           \\n\\\\char EC92 THINF_TDOT_S           \\n\\\\char EC93 THINF_TDOT_XL\\n\\n\\\\char ECA0 THINF_ACCENT_XS    \\n\\\\char ECA1 THINF_ACCENT_S       \\n\\\\char ECA2 THINF_ACCENT_L                                                         \\n\\\\char ECA3 THINF_ACCENT_XL \\n\\n\\\\char ECB0 THINF_DOT_XS        \\n\\\\char ECB1 THINF_DOT_S           \\n\\\\char ECB2 THINF_DOT_L           \\n\\\\char ECB3 THINF_DOT_XL\\n\\\\char ECBF LAMBE_MARK_DOT  \\n\\n\\\\char ECC0 THINF_CURL_XS          \\n\\\\char ECC1 THINF_CURL_S           \\n\\\\char ECC2 THINF_CURL_L           \\n\\\\char ECC3 THINF_CURL_XL     \\n \\n\\\\char ECD0 THINF_CURL_INV_XS                                \\n\\\\char ECD1 THINF_CURL_INV_S                                                            \\n\\\\char ECD2 THINF_CURL_INV_L                                \\n\\\\char ECD3 THINF_CURL_INV_XL \\n\\n\\\\** Double tehtar **\\\\\\n\\n\\\\char ECE0 A_TEHTA_DOUBLE_XS\\n\\\\char ECE1 A_TEHTA_DOUBLE_S \\n\\\\char ECE2 A_TEHTA_DOUBLE_L \\n\\\\char ECE3 A_TEHTA_DOUBLE_XL\\n\\n\\\\char ECF0 E_TEHTA_DOUBLE_XS\\n\\\\char ECF1 E_TEHTA_DOUBLE_S \\n\\\\char ECF2 E_TEHTA_DOUBLE_L \\n\\\\char ECF3 E_TEHTA_DOUBLE_XL\\n\\n\\\\char ED00 THSUP_DDOT_XS    Y_TEHTA_XS    I_TEHTA_DOUBLE_XS         \\n\\\\char ED01 THSUP_DDOT_S     Y_TEHTA_S     I_TEHTA_DOUBLE_S       \\n\\\\char ED02 THSUP_DDOT_L     Y_TEHTA_L     I_TEHTA_DOUBLE_L          \\n\\\\char ED03 THSUP_DDOT_XL    Y_TEHTA_XL    I_TEHTA_DOUBLE_XL     \\n\\n\\\\char ED10 O_TEHTA_DOUBLE_XS\\n\\\\char ED11 O_TEHTA_DOUBLE_S \\n\\\\char ED12 O_TEHTA_DOUBLE_L \\n\\\\char ED13 O_TEHTA_DOUBLE_XL \\n\\n\\\\char ED20 U_TEHTA_DOUBLE_XS\\n\\\\char ED21 U_TEHTA_DOUBLE_S \\n\\\\char ED22 U_TEHTA_DOUBLE_L \\n\\\\char ED23 U_TEHTA_DOUBLE_XL\\n\\n\\\\** Double inf tehtar **\\\\\\n\\n\\\\char ED30 THINF_DSTROKE_XS                               \\n\\\\char ED31 THINF_DSTROKE_S       \\n\\\\char ED32 THINF_DSTROKE_L                         \\n\\\\char ED33 THINF_DSTROKE_XL \\n\\\\char ED3F LAMBE_MARK_DSTROKE \\n\\n\\\\char ED40 THINF_DDOT_XS          \\n\\\\char ED41 THINF_DDOT_S           \\n\\\\char ED42 THINF_DDOT_L           \\n\\\\char ED43 THINF_DDOT_XL \\n\\\\char ED4F LAMBE_MARK_DDOT    \\n\\n\\\\** Labializer **\\\\\\n\\n\\\\char ED50 WA_TEHTA_XS           \\n\\\\char ED51 WA_TEHTA_S           \\n\\\\char ED52 WA_TEHTA_L           \\n\\\\char ED53 WA_TEHTA_XL  \\n\\n\\\\** Thinnas **\\\\\\n\\n\\\\char ED60 THINF_STROKE_XS                                 \\n\\\\char ED61 THINF_STROKE_S                                 \\n\\\\char ED62 THINF_STROKE_L                                 \\n\\\\char ED63 THINF_STROKE_XL    \\n\\n\\\\** MSB Marker **\\\\\\n\\n\\\\char ED70 TH_SUB_CIRC_XS         \\n\\\\char ED71 TH_SUB_CIRC_S           \\n\\\\char ED72 TH_SUB_CIRC_L                                  \\n\\\\char ED73 TH_SUB_CIRC_XL  \\n\\n\\\\** Other UP Tehtar **\\\\\\n\\n\\\\char ED80 A_TEHTA_INV_XS \\n\\\\char ED81 A_TEHTA_INV_S         \\n\\\\char ED82 A_TEHTA_INV_L         \\n\\\\char ED83 A_TEHTA_INV_XL    \\n\\n\\\\char ED90 THSUP_TICK_INV_XS    A_TEHTA_CIRCUM_XS       \\n\\\\char ED91 THSUP_TICK_INV_S     A_TEHTA_CIRCUM_S        \\n\\\\char ED92 THSUP_TICK_INV_L     A_TEHTA_CIRCUM_L         \\n\\\\char ED93 THSUP_TICK_INV_XL    A_TEHTA_CIRCUM_XL   \\n\\n\\\\char EDA0 THSUP_TICK_XS          \\n\\\\char EDA1 THSUP_TICK_S           \\n\\\\char EDA2 THSUP_TICK_L           \\n\\\\char EDA3 THSUP_TICK_XL     \\n                                                          \\n\\\\char EDB0 THSUP_LAMBDA_XS         \\n\\\\char EDB1 THSUP_LAMBDA_S          \\n\\\\char EDB2 THSUP_LAMBDA_L          \\n\\\\char EDB3 THSUP_LAMBDA_XL  \\n\\n\\\\char EDC0 E_TEHTA_GRAVE_XS\\n\\\\char EDC1 E_TEHTA_GRAVE_S \\n\\\\char EDC2 E_TEHTA_GRAVE_L \\n\\\\char EDC3 E_TEHTA_GRAVE_XL \\n\\n\\\\char EDD0 BREVE_TEHTA_XS\\n\\\\char EDD1 BREVE_TEHTA_S\\n\\\\char EDD2 BREVE_TEHTA_L\\n\\\\char EDD3 BREVE_TEHTA_XL\\n\\n\\\\char EDE0 E_TEHTA_GRAVE_INF_XS\\n\\\\char EDE1 E_TEHTA_GRAVE_INF_S\\n\\\\char EDE2 E_TEHTA_GRAVE_INF_L\\n\\\\char EDE3 E_TEHTA_GRAVE_INF_XL\\n\\n\\n\\\\** Ligatured results are mapped here **\\\\\\n\\\\char e800 AHA_TINCO\\n\\\\char e801 HWESTA_TINCO\\n\\\\char e802 ANCA_CLOSED SILME_AHA\\n\\\\char e900 LAMBE_LIG\\n\\n\\n\\\\** The following virtual chars are used to handle tehtar (& the like) multiple version chosing **\\\\\\n\\\\** It could be avoided with modern fonts with gsub/gpos tables for ligatures and diacritics **\\\\\\n\\\\** placement **\\\\\\n\\n\\\\** DUMPED FROM THE VIRTUAL CHARS TOOL **\\\\\\n\\n\\n\\\\beg virtual A_TEHTA\\n  \\\\class A_TEHTA_XS TELCO ARA HALLA HYARMEN HARP_SHAPED NUM_10 NUM_11\\n  \\\\class A_TEHTA_S TINCO CALMA QUESSE SULE FORMEN ORE ANNA VILYA TW_EXT_11 TW_EXT_12 ROMEN ARDA SILME_NUQUERNA URE OSSE SHOOK_BEAUTIFUL AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_4 NUM_5 NUM_8\\n  \\\\class A_TEHTA_L PARMA AHA HWESTA VALA TW_EXT_13 TW_EXT_14 LAMBE ALDA SILME_NUQUERNA_ALT ESSE_NUQUERNA YANTA VALA_W_HOOK NUM_2 NUM_6 NUM_7\\n  \\\\class A_TEHTA_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 SILME ESSE HWESTA_SINDARINWA VAIA MALTA_W_HOOK ANCA_CLOSED NUM_3 NUM_9\\n\\\\end\\n\\n\\\\beg virtual A_TEHTA_CIRCUM\\n  \\\\class A_TEHTA_CIRCUM_XS TELCO ARA HALLA HYARMEN HARP_SHAPED NUM_10 NUM_11\\n  \\\\class A_TEHTA_CIRCUM_S TINCO CALMA QUESSE SULE FORMEN ORE ANNA VILYA TW_EXT_11 TW_EXT_12 ROMEN ARDA SILME_NUQUERNA URE OSSE SHOOK_BEAUTIFUL AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_4 NUM_5 NUM_8\\n  \\\\class A_TEHTA_CIRCUM_L PARMA AHA HWESTA VALA TW_EXT_13 TW_EXT_14 LAMBE ALDA SILME_NUQUERNA_ALT ESSE_NUQUERNA YANTA VALA_W_HOOK NUM_2 NUM_6 NUM_7\\n  \\\\class A_TEHTA_CIRCUM_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 SILME ESSE HWESTA_SINDARINWA VAIA MALTA_W_HOOK ANCA_CLOSED NUM_3 NUM_9\\n\\\\end\\n\\n\\\\beg virtual A_TEHTA_REVERSED\\n  \\\\class A_TEHTA_INV_XS TELCO ARA HALLA HYARMEN HARP_SHAPED NUM_10 NUM_11\\n  \\\\class A_TEHTA_INV_S TINCO CALMA QUESSE SULE FORMEN ORE ANNA VILYA TW_EXT_11 TW_EXT_12 ROMEN ARDA SILME_NUQUERNA URE OSSE SHOOK_BEAUTIFUL AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_4 NUM_5 NUM_8\\n  \\\\class A_TEHTA_INV_L PARMA AHA HWESTA VALA TW_EXT_13 TW_EXT_14 LAMBE ALDA SILME_NUQUERNA_ALT ESSE_NUQUERNA YANTA VALA_W_HOOK NUM_2 NUM_6 NUM_7\\n  \\\\class A_TEHTA_INV_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 SILME ESSE HWESTA_SINDARINWA VAIA MALTA_W_HOOK ANCA_CLOSED NUM_3 NUM_9\\n\\\\end\\n\\n\\\\beg virtual A_TEHTA_CIRCUM_REVERSED TEHTA_BREVE\\n  \\\\class THSUP_TICK_XS TELCO ARA HALLA HYARMEN HARP_SHAPED NUM_10 NUM_11\\n  \\\\class THSUP_TICK_S TINCO CALMA QUESSE SULE FORMEN ORE ANNA VILYA TW_EXT_11 TW_EXT_12 ROMEN ARDA SILME_NUQUERNA URE OSSE SHOOK_BEAUTIFUL AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_4 NUM_5 NUM_8\\n  \\\\class THSUP_TICK_L PARMA AHA HWESTA VALA TW_EXT_13 TW_EXT_14 LAMBE ALDA SILME_NUQUERNA_ALT ESSE_NUQUERNA YANTA VALA_W_HOOK NUM_2 NUM_6 NUM_7\\n  \\\\class THSUP_TICK_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 SILME ESSE HWESTA_SINDARINWA VAIA MALTA_W_HOOK ANCA_CLOSED NUM_3 NUM_9\\n\\\\end\\n\\n\\\\beg virtual E_TEHTA\\n  \\\\class E_TEHTA_XS TELCO ARA HALLA HYARMEN HARP_SHAPED NUM_10 NUM_11\\n  \\\\class E_TEHTA_S TINCO CALMA QUESSE SULE FORMEN ORE ANNA VILYA TW_EXT_11 TW_EXT_12 ROMEN ARDA SILME_NUQUERNA ESSE_NUQUERNA URE OSSE SHOOK_BEAUTIFUL AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_4 NUM_5 NUM_8\\n  \\\\class E_TEHTA_L PARMA AHA HWESTA VALA TW_EXT_13 TW_EXT_14 LAMBE ALDA SILME_NUQUERNA_ALT YANTA VALA_W_HOOK NUM_2 NUM_6 NUM_7\\n  \\\\class E_TEHTA_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 SILME ESSE HWESTA_SINDARINWA VAIA MALTA_W_HOOK ANCA_CLOSED NUM_3 NUM_9\\n\\\\end\\n\\n\\\\beg virtual E_TEHTA_GRAVE\\n  \\\\class E_TEHTA_GRAVE_XS TELCO ARA HALLA HYARMEN HARP_SHAPED AHA_TINCO HWESTA_TINCO NUM_4 NUM_10 NUM_11\\n  \\\\class E_TEHTA_GRAVE_S TINCO CALMA QUESSE SULE FORMEN ORE ANNA VILYA TW_EXT_11 TW_EXT_12 ROMEN ARDA SILME_NUQUERNA ESSE_NUQUERNA URE OSSE SHOOK_BEAUTIFUL NUM_0 NUM_1 NUM_5 NUM_8\\n  \\\\class E_TEHTA_GRAVE_L PARMA AHA HWESTA VALA TW_EXT_13 TW_EXT_14 LAMBE ALDA SILME_NUQUERNA_ALT YANTA VALA_W_HOOK NUM_2 NUM_7\\n  \\\\class E_TEHTA_GRAVE_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 SILME ESSE HWESTA_SINDARINWA VAIA MALTA_W_HOOK ANCA_CLOSED NUM_3 NUM_6 NUM_9\\n\\\\end\\n\\n\\\\beg virtual I_TEHTA\\n  \\\\class I_TEHTA_XS TELCO ARA HALLA HYARMEN HARP_SHAPED NUM_10 NUM_11\\n  \\\\class I_TEHTA_S TINCO CALMA QUESSE SULE FORMEN ORE ANNA VILYA TW_EXT_11 TW_EXT_12 ROMEN ARDA SILME_NUQUERNA ESSE_NUQUERNA URE OSSE SHOOK_BEAUTIFUL AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_4 NUM_5 NUM_8\\n  \\\\class I_TEHTA_L PARMA AHA HWESTA VALA TW_EXT_13 TW_EXT_14 LAMBE ALDA SILME_NUQUERNA_ALT YANTA VALA_W_HOOK NUM_2 NUM_6 NUM_7\\n  \\\\class I_TEHTA_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 SILME ESSE HWESTA_SINDARINWA VAIA MALTA_W_HOOK ANCA_CLOSED NUM_3 NUM_9\\n\\\\end\\n\\n\\\\beg virtual O_TEHTA\\n  \\\\class O_TEHTA_XS TELCO ARA HALLA HYARMEN HARP_SHAPED NUM_0 NUM_1 NUM_10 NUM_11\\n  \\\\class O_TEHTA_S TINCO PARMA CALMA QUESSE SULE FORMEN ORE VALA ANNA VILYA TW_EXT_11 TW_EXT_12 ROMEN ARDA SILME_NUQUERNA ESSE_NUQUERNA YANTA URE OSSE VALA_W_HOOK SHOOK_BEAUTIFUL AHA_TINCO HWESTA_TINCO NUM_2 NUM_4 NUM_5 NUM_8\\n  \\\\class O_TEHTA_L AHA HWESTA TW_EXT_13 TW_EXT_14 LAMBE ALDA SILME_NUQUERNA_ALT VAIA NUM_3 NUM_6 NUM_7\\n  \\\\class O_TEHTA_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 SILME ESSE HWESTA_SINDARINWA MALTA_W_HOOK ANCA_CLOSED NUM_9\\n\\\\end\\n\\n\\\\beg virtual U_TEHTA\\n  \\\\class U_TEHTA_XS TELCO ARA HALLA HYARMEN HARP_SHAPED NUM_0 NUM_1 NUM_10 NUM_11\\n  \\\\class U_TEHTA_S TINCO PARMA CALMA QUESSE SULE FORMEN ORE VALA ANNA VILYA TW_EXT_11 TW_EXT_12 ROMEN ARDA SILME_NUQUERNA ESSE_NUQUERNA YANTA URE OSSE VALA_W_HOOK SHOOK_BEAUTIFUL AHA_TINCO HWESTA_TINCO NUM_2 NUM_4 NUM_5 NUM_8\\n  \\\\class U_TEHTA_L AHA HWESTA TW_EXT_13 TW_EXT_14 LAMBE ALDA SILME_NUQUERNA_ALT VAIA NUM_6 NUM_7\\n  \\\\class U_TEHTA_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 SILME ESSE HWESTA_SINDARINWA MALTA_W_HOOK ANCA_CLOSED NUM_3 NUM_9\\n\\\\end\\n\\n\\\\beg virtual WA_TEHTA SEV_TEHTA\\n  \\\\class WA_TEHTA_XS TELCO ARA HALLA HYARMEN HARP_SHAPED NUM_10 NUM_11\\n  \\\\class WA_TEHTA_S SULE FORMEN ORE ANNA TW_EXT_11 TW_EXT_12 ROMEN ARDA URE OSSE SHOOK_BEAUTIFUL AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_4 NUM_8\\n  \\\\class WA_TEHTA_L TINCO PARMA CALMA QUESSE AHA HWESTA VALA VILYA TW_EXT_13 TW_EXT_14 LAMBE ALDA SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA YANTA VALA_W_HOOK NUM_2 NUM_5\\n  \\\\class WA_TEHTA_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 SILME ESSE HWESTA_SINDARINWA VAIA MALTA_W_HOOK ANCA_CLOSED NUM_3 NUM_6 NUM_7 NUM_9\\n\\\\end\\n\\n\\\\beg virtual A_TEHTA_DOUBLE\\n  \\\\class A_TEHTA_DOUBLE_XS TELCO ARA HALLA HYARMEN HARP_SHAPED NUM_10 NUM_11\\n  \\\\class A_TEHTA_DOUBLE_S TINCO PARMA CALMA QUESSE SULE FORMEN ORE ANNA TW_EXT_11 TW_EXT_12 ROMEN ARDA SILME_NUQUERNA SILME_NUQUERNA_ALT URE OSSE SHOOK_BEAUTIFUL AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_4 NUM_5 NUM_8\\n  \\\\class A_TEHTA_DOUBLE_L AHA HWESTA VALA VILYA TW_EXT_13 TW_EXT_14 LAMBE ALDA ESSE_NUQUERNA YANTA VALA_W_HOOK NUM_2 NUM_6 NUM_7\\n  \\\\class A_TEHTA_DOUBLE_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 SILME ESSE HWESTA_SINDARINWA VAIA MALTA_W_HOOK ANCA_CLOSED NUM_3 NUM_9\\n\\\\end\\n\\n\\\\beg virtual E_TEHTA_DOUBLE\\n  \\\\class E_TEHTA_DOUBLE_XS TELCO ARA HALLA HYARMEN HARP_SHAPED NUM_10 NUM_11\\n  \\\\class E_TEHTA_DOUBLE_S TINCO PARMA CALMA QUESSE SULE FORMEN ORE ANNA TW_EXT_11 TW_EXT_12 ROMEN ARDA SILME_NUQUERNA SILME_NUQUERNA_ALT URE OSSE VALA_W_HOOK SHOOK_BEAUTIFUL AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_4 NUM_5 NUM_8\\n  \\\\class E_TEHTA_DOUBLE_L AHA HWESTA VALA VILYA TW_EXT_13 TW_EXT_14 LAMBE ALDA ESSE_NUQUERNA YANTA VAIA NUM_2 NUM_6 NUM_7\\n  \\\\class E_TEHTA_DOUBLE_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 SILME ESSE HWESTA_SINDARINWA MALTA_W_HOOK ANCA_CLOSED NUM_3 NUM_9\\n\\\\end\\n\\n\\\\beg virtual I_TEHTA_DOUBLE Y_TEHTA\\n  \\\\class I_TEHTA_DOUBLE_XS TELCO ARA HALLA HYARMEN HARP_SHAPED NUM_4 NUM_10 NUM_11\\n  \\\\class I_TEHTA_DOUBLE_S TINCO PARMA CALMA QUESSE SULE FORMEN ORE ANNA TW_EXT_11 TW_EXT_12 ROMEN ARDA SILME_NUQUERNA SILME_NUQUERNA_ALT URE OSSE SHOOK_BEAUTIFUL AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_5 NUM_8\\n  \\\\class I_TEHTA_DOUBLE_L AHA HWESTA VALA VILYA TW_EXT_13 TW_EXT_14 LAMBE ALDA ESSE_NUQUERNA YANTA VALA_W_HOOK NUM_2 NUM_6 NUM_7\\n  \\\\class I_TEHTA_DOUBLE_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 SILME ESSE HWESTA_SINDARINWA VAIA MALTA_W_HOOK ANCA_CLOSED NUM_3 NUM_9\\n\\\\end\\n\\n\\\\beg virtual O_TEHTA_DOUBLE\\n  \\\\class O_TEHTA_DOUBLE_XS TELCO ARA HALLA HYARMEN HARP_SHAPED NUM_0 NUM_1 NUM_4 NUM_10 NUM_11\\n  \\\\class O_TEHTA_DOUBLE_S TINCO PARMA CALMA QUESSE SULE FORMEN ORE ANNA TW_EXT_11 TW_EXT_12 ROMEN ARDA SILME_NUQUERNA SILME_NUQUERNA_ALT URE OSSE VALA_W_HOOK SHOOK_BEAUTIFUL AHA_TINCO HWESTA_TINCO NUM_5 NUM_8\\n  \\\\class O_TEHTA_DOUBLE_L AHA HWESTA VALA VILYA TW_EXT_13 TW_EXT_14 LAMBE ALDA ESSE_NUQUERNA YANTA VAIA NUM_2 NUM_6 NUM_7\\n  \\\\class O_TEHTA_DOUBLE_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 SILME ESSE HWESTA_SINDARINWA MALTA_W_HOOK ANCA_CLOSED NUM_3 NUM_9\\n\\\\end\\n\\n\\\\beg virtual U_TEHTA_DOUBLE\\n  \\\\class U_TEHTA_DOUBLE_XS TELCO ARA HALLA HYARMEN HARP_SHAPED NUM_0 NUM_1 NUM_4 NUM_10 NUM_11\\n  \\\\class U_TEHTA_DOUBLE_S TINCO PARMA CALMA QUESSE SULE FORMEN ORE ANNA TW_EXT_11 TW_EXT_12 ROMEN ARDA SILME SILME_NUQUERNA SILME_NUQUERNA_ALT URE OSSE VALA_W_HOOK SHOOK_BEAUTIFUL AHA_TINCO HWESTA_TINCO NUM_5 NUM_8\\n  \\\\class U_TEHTA_DOUBLE_L AHA HWESTA VALA VILYA TW_EXT_13 TW_EXT_14 LAMBE ALDA ESSE_NUQUERNA YANTA VAIA NUM_2 NUM_6 NUM_7\\n  \\\\class U_TEHTA_DOUBLE_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 ESSE HWESTA_SINDARINWA MALTA_W_HOOK ANCA_CLOSED NUM_3 NUM_9\\n\\\\end\\n\\n\\\\beg virtual A_TEHTA_INF\\n  \\\\class THINF_TDOT_XS TELCO ARA HALLA ROMEN ARDA SILME_NUQUERNA SILME_NUQUERNA_ALT HARP_SHAPED\\n  \\\\class THINF_TDOT_S TINCO PARMA TW_EXT_11 TW_EXT_12 SILME URE OSSE SHOOK_BEAUTIFUL AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_4 NUM_8 NUM_10 NUM_11\\n  \\\\class THINF_TDOT_L CALMA QUESSE SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA TW_EXT_13 TW_EXT_14 LAMBE ALDA ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA YANTA VAIA VALA_W_HOOK NUM_2 NUM_5 NUM_7\\n  \\\\class THINF_TDOT_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 MALTA_W_HOOK ANCA_CLOSED NUM_3 NUM_6 NUM_9\\n\\\\end\\n\\n\\\\beg virtual E_TEHTA_INF\\n  \\\\class THINF_ACCENT_XS TELCO ARA HALLA ROMEN ARDA SILME_NUQUERNA SILME_NUQUERNA_ALT HARP_SHAPED\\n  \\\\class THINF_ACCENT_S TINCO PARMA TW_EXT_11 TW_EXT_12 SILME URE OSSE SHOOK_BEAUTIFUL AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_4 NUM_8 NUM_11\\n  \\\\class THINF_ACCENT_L CALMA QUESSE SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA TW_EXT_13 TW_EXT_14 LAMBE ALDA ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA YANTA VAIA VALA_W_HOOK NUM_2 NUM_7 NUM_10\\n  \\\\class THINF_ACCENT_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 MALTA_W_HOOK ANCA_CLOSED NUM_3 NUM_5 NUM_6 NUM_9\\n\\\\end\\n\\n\\\\beg virtual E_TEHTA_GRAVE_INF\\n  \\\\class E_TEHTA_GRAVE_INF_XS TELCO ARA HALLA ROMEN ARDA SILME_NUQUERNA SILME_NUQUERNA_ALT SHOOK_BEAUTIFUL HARP_SHAPED AHA_TINCO HWESTA_TINCO\\n  \\\\class E_TEHTA_GRAVE_INF_S SULE FORMEN AHA HWESTA ORE VALA TW_EXT_13 TW_EXT_14 HYARMEN HWESTA_SINDARINWA YANTA URE VAIA NUM_2 NUM_4 NUM_11\\n  \\\\class E_TEHTA_GRAVE_INF_L TINCO PARMA ANNA VILYA TW_EXT_11 TW_EXT_12 LAMBE ALDA SILME ESSE ESSE_NUQUERNA OSSE NUM_0 NUM_1 NUM_7 NUM_8 NUM_10\\n  \\\\class E_TEHTA_GRAVE_INF_XL CALMA QUESSE ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 MALTA_W_HOOK VALA_W_HOOK ANCA_CLOSED NUM_3 NUM_5 NUM_6 NUM_9\\n\\\\end\\n\\n\\\\beg virtual CIRC_TEHTA_INF\\n  \\\\class TH_SUB_CIRC_XS TELCO ARA HALLA TINCO PARMA SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA TW_EXT_11 TW_EXT_12 ROMEN ARDA SILME SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA YANTA URE OSSE SHOOK_BEAUTIFUL HARP_SHAPED AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_4 NUM_7 NUM_8 NUM_10 NUM_11\\n  \\\\class TH_SUB_CIRC_S CALMA QUESSE TW_EXT_13 TW_EXT_14 LAMBE ALDA VAIA NUM_2 NUM_5\\n  \\\\class TH_SUB_CIRC_L VALA_W_HOOK NUM_3\\n  \\\\class TH_SUB_CIRC_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 MALTA_W_HOOK ANCA_CLOSED NUM_6 NUM_9\\n\\\\end\\n\\n\\\\beg virtual THINNAS  THINF_STROKE\\n  \\\\class THINF_STROKE_XS TELCO ARA HALLA SILME_NUQUERNA SILME_NUQUERNA_ALT SHOOK_BEAUTIFUL\\n  \\\\class THINF_STROKE_S TINCO PARMA TW_EXT_11 TW_EXT_12 ROMEN ARDA SILME ESSE URE OSSE HARP_SHAPED AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_4 NUM_7 NUM_10 NUM_11\\n  \\\\class THINF_STROKE_L CALMA QUESSE SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA TW_EXT_13 TW_EXT_14 LAMBE ALDA ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA YANTA VAIA VALA_W_HOOK NUM_2 NUM_5 NUM_8\\n  \\\\class THINF_STROKE_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 MALTA_W_HOOK ANCA_CLOSED NUM_3 NUM_6 NUM_9\\n\\\\end\\n\\n\\\\beg virtual O_TEHTA_INF\\n  \\\\class THINF_CURL_XS TELCO ARA HALLA ROMEN ARDA SILME_NUQUERNA SILME_NUQUERNA_ALT SHOOK_BEAUTIFUL\\n  \\\\class THINF_CURL_S TINCO PARMA TW_EXT_11 TW_EXT_12 SILME ESSE ESSE_NUQUERNA URE OSSE HARP_SHAPED AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_4 NUM_7 NUM_8 NUM_10 NUM_11\\n  \\\\class THINF_CURL_L CALMA QUESSE SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA TW_EXT_13 TW_EXT_14 LAMBE ALDA HYARMEN HWESTA_SINDARINWA YANTA VALA_W_HOOK NUM_2 NUM_5\\n  \\\\class THINF_CURL_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 VAIA MALTA_W_HOOK ANCA_CLOSED NUM_3 NUM_6 NUM_9\\n\\\\end\\n\\n\\\\beg virtual U_TEHTA_INF\\n  \\\\class THINF_CURL_INV_XS TELCO ARA HALLA ROMEN ARDA SILME_NUQUERNA SILME_NUQUERNA_ALT SHOOK_BEAUTIFUL HARP_SHAPED AHA_TINCO HWESTA_TINCO\\n  \\\\class THINF_CURL_INV_S TINCO PARMA TW_EXT_11 TW_EXT_12 SILME ESSE ESSE_NUQUERNA URE OSSE NUM_0 NUM_1 NUM_4 NUM_7 NUM_8 NUM_10 NUM_11\\n  \\\\class THINF_CURL_INV_L SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA LAMBE ALDA HYARMEN HWESTA_SINDARINWA YANTA VAIA VALA_W_HOOK NUM_2 NUM_5\\n  \\\\class THINF_CURL_INV_XL CALMA QUESSE ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_13 TW_EXT_14 TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 MALTA_W_HOOK ANCA_CLOSED NUM_3 NUM_6 NUM_9\\n\\\\end\\n\\n\\\\beg virtual PALATAL_SIGN I_TEHTA_DOUBLE_INF Y_TEHTA_INF\\n  \\\\class THINF_DDOT_XS TELCO ARA HALLA ROMEN ARDA SILME_NUQUERNA SHOOK_BEAUTIFUL HARP_SHAPED AHA_TINCO HWESTA_TINCO\\n  \\\\class THINF_DDOT_S TINCO PARMA SULE AHA TW_EXT_11 TW_EXT_12 SILME URE OSSE NUM_0 NUM_1 NUM_8 NUM_10 NUM_11\\n  \\\\class THINF_DDOT_L FORMEN HWESTA ORE VALA ANNA VILYA ESSE HYARMEN HWESTA_SINDARINWA YANTA VAIA VALA_W_HOOK NUM_2 NUM_4 NUM_5\\n  \\\\class THINF_DDOT_XL CALMA QUESSE ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_13 TW_EXT_14 TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 ALDA ESSE_NUQUERNA MALTA_W_HOOK ANCA_CLOSED NUM_3 NUM_6 NUM_9\\n  \\\\class LAMBE_MARK_DDOT LAMBE SILME_NUQUERNA_ALT NUM_7\\n\\\\end\\n\\n\\\\beg virtual E_TEHTA_DOUBLE_INF GEMINATE_DOUBLE\\n  \\\\class THINF_DSTROKE_XS TELCO ARA HALLA ROMEN ARDA SILME_NUQUERNA SHOOK_BEAUTIFUL HARP_SHAPED\\n  \\\\class THINF_DSTROKE_S TINCO PARMA SULE AHA TW_EXT_11 TW_EXT_12 SILME URE OSSE AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_4 NUM_8 NUM_10 NUM_11\\n  \\\\class THINF_DSTROKE_L FORMEN HWESTA ORE VALA ANNA VILYA ESSE HYARMEN HWESTA_SINDARINWA YANTA VAIA VALA_W_HOOK NUM_2 NUM_5 NUM_7\\n  \\\\class THINF_DSTROKE_XL CALMA QUESSE ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_13 TW_EXT_14 TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 ALDA ESSE_NUQUERNA MALTA_W_HOOK ANCA_CLOSED NUM_3 NUM_6 NUM_9\\n  \\\\class LAMBE_MARK_DSTROKE LAMBE SILME_NUQUERNA_ALT\\n\\\\end\\n\\n\\\\beg virtual UNUTIXE I_TEHTA_INF NO_VOWEL_DOT\\n  \\\\class THINF_DOT_XS TELCO ARA HALLA SILME_NUQUERNA SHOOK_BEAUTIFUL HARP_SHAPED\\n  \\\\class THINF_DOT_S TINCO PARMA TW_EXT_11 TW_EXT_12 ROMEN ARDA URE OSSE AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_4 NUM_7 NUM_8 NUM_10 NUM_11\\n  \\\\class THINF_DOT_L SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA TW_EXT_13 TW_EXT_14 SILME ESSE HYARMEN HWESTA_SINDARINWA YANTA VAIA VALA_W_HOOK NUM_2\\n  \\\\class THINF_DOT_XL CALMA QUESSE ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 ALDA ESSE_NUQUERNA MALTA_W_HOOK ANCA_CLOSED NUM_3 NUM_5 NUM_6 NUM_9\\n  \\\\class LAMBE_MARK_DOT LAMBE SILME_NUQUERNA_ALT\\n\\\\end\\n\\n\\\\beg virtual GEMINATE_SIGN\\n  \\\\class DASH_INF_XS TELCO ARA HALLA\\n  \\\\class DASH_INF_S TINCO PARMA CALMA QUESSE SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA TW_EXT_11 TW_EXT_12 TW_EXT_13 TW_EXT_14 ROMEN ARDA SILME SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA YANTA URE OSSE VAIA VALA_W_HOOK SHOOK_BEAUTIFUL HARP_SHAPED NUM_0 NUM_1 NUM_2 NUM_4 NUM_5 NUM_6 NUM_7 NUM_8 NUM_10 NUM_11\\n  \\\\class DASH_INF_L ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 MALTA_W_HOOK ANCA_CLOSED AHA_TINCO HWESTA_TINCO NUM_3 NUM_9\\n  \\\\class LAMBE_MARK_DASH LAMBE ALDA\\n\\\\end\\n\\n\\\\beg virtual GEMINATE_SIGN_TILD\\n  \\\\class TILD_INF_XS TELCO ARA HALLA\\n  \\\\class TILD_INF_S TINCO PARMA CALMA QUESSE SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA TW_EXT_11 TW_EXT_12 TW_EXT_13 TW_EXT_14 ROMEN ARDA SILME SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA YANTA URE OSSE VAIA VALA_W_HOOK SHOOK_BEAUTIFUL HARP_SHAPED NUM_0 NUM_1 NUM_2 NUM_4 NUM_5 NUM_6 NUM_7 NUM_8 NUM_10 NUM_11\\n  \\\\class TILD_INF_L ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 MALTA_W_HOOK ANCA_CLOSED AHA_TINCO HWESTA_TINCO NUM_3 NUM_9\\n  \\\\class LAMBE_MARK_TILD LAMBE ALDA\\n\\\\end\\n\\n\\\\beg virtual NASALIZE_SIGN\\n  \\\\class DASH_SUP_XS TELCO ARA HALLA\\n  \\\\class DASH_SUP_S TINCO PARMA CALMA QUESSE SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA TW_EXT_11 TW_EXT_12 TW_EXT_13 TW_EXT_14 ROMEN ARDA SILME SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA YANTA URE OSSE VAIA VALA_W_HOOK HARP_SHAPED NUM_0 NUM_1 NUM_2 NUM_4 NUM_5 NUM_6 NUM_7 NUM_8 NUM_10 NUM_11\\n  \\\\class DASH_SUP_L ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 LAMBE ALDA MALTA_W_HOOK SHOOK_BEAUTIFUL ANCA_CLOSED AHA_TINCO HWESTA_TINCO NUM_3 NUM_9\\n\\\\end\\n\\n\\\\beg virtual NASALIZE_SIGN_TILD\\n  \\\\class TILD_SUP_XS TELCO ARA HALLA\\n  \\\\class TILD_SUP_S TINCO PARMA CALMA QUESSE SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA TW_EXT_11 TW_EXT_12 TW_EXT_13 TW_EXT_14 ROMEN ARDA SILME SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA YANTA URE OSSE VAIA VALA_W_HOOK HARP_SHAPED NUM_0 NUM_1 NUM_2 NUM_4 NUM_5 NUM_6 NUM_7 NUM_8 NUM_10 NUM_11\\n  \\\\class TILD_SUP_L ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 LAMBE ALDA MALTA_W_HOOK SHOOK_BEAUTIFUL ANCA_CLOSED AHA_TINCO HWESTA_TINCO NUM_3 NUM_9\\n\\\\end\\n\\n\\\\beg virtual SARINCE\\n  \\\\class SHOOK_LEFT_L CALMA QUESSE ANGA UNGWE TW_EXT_13 TW_EXT_14 TW_EXT_23 TW_EXT_24 HWESTA_SINDARINWA VALA_W_HOOK\\n  \\\\class SHOOK_RIGHT_L TELCO ARA HALLA TINCO PARMA ANDO UMBAR SULE FORMEN AHA HWESTA ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME ORE VALA ANNA VILYA TW_EXT_11 TW_EXT_12 TW_EXT_21 TW_EXT_22 ROMEN ARDA LAMBE ALDA SILME SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE ESSE_NUQUERNA HYARMEN YANTA URE OSSE VAIA MALTA_W_HOOK SHOOK_BEAUTIFUL ANCA_CLOSED HARP_SHAPED AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_2 NUM_3 NUM_4 NUM_5 NUM_6 NUM_7 NUM_8 NUM_9 NUM_10 NUM_11\\n\\\\end\\n\\n\"\nGlaemscribe.resource_manager.raw_charsets[\"tengwar_guni_parmaite\"] = \"\\\\**\\n\\nGlǽmscribe (also written Glaemscribe) is a software dedicated to\\nthe transcription of texts between writing systems, and more \\nspecifically dedicated to the transcription of J.R.R. Tolkien\\'s \\ninvented languages to some of his devised writing systems.\\n\\nCopyright (C) 2015 Benjamin Babut (Talagan).\\n\\nThis program is free software: you can redistribute it and/or modify\\nit under the terms of the GNU Affero General Public License as published by\\nthe Free Software Foundation, either version 3 of the License, or\\nany later version.\\n\\nThis program is distributed in the hope that it will be useful,\\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\nGNU Affero General Public License for more details.\\n\\nYou should have received a copy of the GNU Affero General Public License\\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\\n\\n**\\\\\\n\\n\\\\** Charset specially customized for Tengwar Parmaite (Glaemscrafu patched version) **\\\\ \\n\\n\\\\version 0.1.0\\n\\n\\\\beg changelog\\n  \\\\** Changes done to the original font and inherited. **\\\\\\n  \\\\entry \\\"0.0.0\\\" \\\"Added VALA_W_HOOK, VAIYA.\\\"\\n  \\\\entry \\\"0.0.0\\\" \\\"Superior and inferior dash and tild consonant modification signs have been added for halla, telco and ara. / Added pustar combinations (4/4-halfed/4-squared/5)\\\"\\n  \\\\entry \\\"0.0.0\\\" \\\"Fixed missing tinco_ext / sule_ext\\\"\\n  \\\\entry \\\"0.0.0\\\" \\\"Added NBSP\\\"\\n  \\n  \\\\entry \\\"0.1.0\\\" \\\"First version of the unicode layout\\\"\\n\\\\end\\n\\n\\\\char 20 SPACE\\n\\\\char a0 NBSP\\n\\n\\\\char 2018 SQUOT_OPEN\\n\\\\char 2019 SQUOT_CLOSE\\n\\n\\\\char 28 PUNCT_PAREN_L \\n\\\\char 29 PUNCT_PAREN_R \\n\\\\char 5B PUNCT_PAREN_L_ALT \\n\\\\char 5D PUNCT_PAREN_R_ALT \\n\\n\\\\** PUSTAR, take them in unicode not in personnal use (deprecation) **\\\\\\n\\\\char 2e31 PUNCT_DOT\\n\\\\char   3a PUNCT_DDOT\\n\\\\char 205D PUNCT_TDOT PUSTA_3\\n\\\\char 2058 PUSTA_4\\n\\\\char 10FB PUSTA_4_HALFED\\n\\\\char 2E2C PUSTA_4_SQUARED\\n\\\\char 2E2D PUSTA_5\\n\\n\\n\\n\\\\char e000  TW_11 TINCO     \\n\\\\char e001  TW_12 PARMA\\n\\\\char e002  TW_13 CALMA\\n\\\\char e003  TW_14 QUESSE\\n\\\\char e004  TW_21 ANDO  \\n\\\\char e005  TW_22 UMBAR\\n\\\\char e006  TW_23 ANGA  \\n\\\\char e007  TW_24 UNGWE   \\n\\\\char e008  TW_31 SULE THULE\\n\\\\char e009  TW_32 FORMEN\\n\\\\char e00A  TW_33 AHA  \\n\\\\char e00B  TW_34 HWESTA\\n\\\\char e00C  TW_41 ANTO\\n\\\\char e00D  TW_42 AMPA\\n\\\\char e00E  TW_43 ANCA\\n\\\\char e00F  TW_44 UNQUE\\n\\n\\\\char e010  TW_51 NUMEN \\n\\\\char e011  TW_52 MALTA\\n\\\\char e012  TW_53 NOLDO\\n\\\\char e013  TW_54 NWALME\\n\\\\char e014  TW_61 ORE\\n\\\\char e015  TW_62 VALA\\n\\\\char e016  TW_63 ANNA\\n\\\\char e017  TW_64 VILYA\\n\\\\char e018  TW_EXT_11 TINCO_EXT SULE_EXT THULE_EXT\\n\\\\char e019  TW_EXT_12 PARMA_EXT FORMEN_EXT \\n\\\\char e01A  TW_EXT_13 CALMA_EXT AHA_EXT\\n\\\\char e01B  TW_EXT_14 QUESSE_EXT HWESTA_EXT   \\n\\\\char e01C  TW_EXT_21 ANDO_EXT ANTO_EXT \\n\\\\char e01D  TW_EXT_22 UMBAR_EXT AMPA_EXT\\n\\\\char e01E  TW_EXT_23 ANGA_EXT ANCA_EXT\\n\\\\char e01F  TW_EXT_24 UNGWE_EXT UNQUE_EXT\\n\\n\\\\char e020  TW_71 ROMEN\\n\\\\char e021  TW_72 ARDA\\n\\\\char e022  TW_73 LAMBE LAMBE_NO_LIG\\n\\\\char e023  TW_74 ALDA \\n\\\\char e024  TW_81 SILME \\n\\\\char e025  TW_82 SILME_NUQUERNA \\n\\\\char e026  TW_83 ESSE\\n\\\\char e027  TW_84 ESSE_NUQUERNA\\n\\\\char e028  TW_91 HYARMEN \\n\\\\char e029  TW_92 HWESTA_SINDARINWA \\n\\\\char e02A  TW_93 YANTA\\n\\\\char e02B  TW_94 URE\\n\\\\char e02C  ARA\\n\\\\char e02D  HALLA\\n\\\\char e02E  TELCO\\n\\\\**.....**\\\\    \\n\\n\\\\char e030  REVERSED_OSSE\\n\\\\char e031  BOMBADIL_W \\n\\\\char e032  OSSE\\n\\\\**.....**\\\\ \\n\\\\char e034  LIGATING_SHORT_CARRIER\\n\\\\**..D..**\\\\ \\n\\\\char e036  ANNA_OPEN\\n\\\\char e037  CHRISTOPHER_QU\\n\\\\**..D..**\\\\ \\n\\\\char e039  BOMBADIL_HW\\n\\\\char e03A  TW_MH MALTA_W_HOOK \\n\\\\char e03B  TW_MH_BELERIANDIC VALA_W_HOOK \\n\\\\char e03C  TW_HW_LOWDHAM HARP_SHAPED\\n\\\\char e03D  VAIA WAIA VAIYA\\n\\\\**..X..**\\\\ \\n\\\\**..X..**\\\\ \\n \\n\\\\char e040  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e041  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e042  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e043  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e044  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e045  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e046  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e047  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e048  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e049  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e04A  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e04B  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e04C  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e04D  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e04E  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e04F  ? \\\\** LEGACY FONT **\\\\\\n\\n\\\\char e050  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e051  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e052  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e053  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e054  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e055  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e056  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e057  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e058  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e059  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e05A  ? \\\\** LEGACY FONT **\\\\\\n\\\\**.....**\\\\ \\n\\\\**.....**\\\\ \\n\\\\**.....**\\\\ \\n\\\\**.....**\\\\ \\n\\\\**.....**\\\\ \\n\\n\\\\**..D..**\\\\ \\n\\\\**..D..**\\\\ \\n\\\\**..D..**\\\\ \\n\\\\**..D..**\\\\ \\n\\\\**..D..**\\\\ \\n\\\\char e065  PUNCT_EXCLAM\\n\\\\char e066  PUNCT_INTERR\\n\\\\char e067  ELVISH_PAREN BOOKMARK_SIGN\\n\\\\char e068  PUNCT_TILD \\n\\\\char e069  PUNCT_DTILD\\n\\\\char e06A  DQUOT_OPEN\\n\\\\char e06B  DQUOT_CLOSE\\n\\\\char e06C  THORIN_EXCLAMATION\\n\\\\**.....**\\\\ \\n\\\\**..X..**\\\\ \\n\\\\**..X..**\\\\ \\n\\n\\n\\\\char e070 NUM_0 \\n\\\\char e071 NUM_1 \\n\\\\char e072 NUM_2 \\n\\\\char e073 NUM_3 \\n\\\\char e074 NUM_4 \\n\\\\char e075 NUM_5 \\n\\\\char e076 NUM_6 \\n\\\\char e077 NUM_7 \\n\\\\char e078 NUM_8 \\n\\\\char e079 NUM_9 \\n\\\\char e07A NUM_10\\n\\\\char e07B NUM_11\\n\\\\char e07C NUM_12\\n\\n\\\\** MISSING in the norm**\\\\\\n\\\\char 204A OLD_ENGLISH_AND\\n\\n\\\\char e03e SILME_NUQUERNA_ALT\\n\\\\char e06e RING_MARK_L \\n\\\\char e06f RING_MARK_R\\n\\n\\\\** LEGACY SARINCE **\\\\\\n\\n\\\\char EBD0 SARINCE_LEFT_V1 SHOOK_LEFT_L\\n\\\\char EBD1 SARINCE_LEFT_V2 SHOOK_LEFT_S\\n\\n\\\\char EBD8 SARINCE_RIGHT_V1 SHOOK_RIGHT_L\\n\\\\char EBD9 SARINCE_RIGHT_V2 SHOOK_RIGHT_S\\n\\\\char EBDA SARINCE_RIGHT_V3\\n\\n\\\\char EBE0 SARINCE_SEMI_ASCENDING_V1\\n\\n\\\\char EBE8 SARINCE_ASCENDING_V1\\n\\\\** .. **\\\\\\n\\\\char EBEA SARINCE_ASCENDING_V3\\n\\n\\\\char EBF0 SARINCE_DESCENDING_V1\\n\\n\\\\char EBF8 SARINCE_FLOURISHED_V1  SARINCE_FLOURISHED SHOOK_BEAUTIFUL\\n\\\\char EBF9 SARINCE_FLOURISHED_V2\\n\\n\\\\** Consonant modifiers **\\\\\\n\\n\\\\char EC00 DASH_INF_XS\\n\\\\char EC01 DASH_INF_S   \\n\\\\char EC02 DASH_INF_L    \\n\\\\char EC0F LAMBE_MARK_DASH \\n\\n\\\\char EC10 TILD_INF_XS\\n\\\\char EC11 TILD_INF_S   \\n\\\\char EC12 TILD_INF_L            \\n\\\\char EC1F LAMBE_MARK_TILD   \\n\\n\\\\char EC20 DASH_SUP_XS\\n\\\\char EC21 DASH_SUP_S                      \\n\\\\char EC22 DASH_SUP_L  \\n\\n\\\\char EC30 TILD_SUP_XS\\n\\\\char EC31 TILD_SUP_S  \\n\\\\char EC32 TILD_SUP_L                       \\n\\n\\\\** Base tehtar **\\\\\\n\\n\\\\char EC40 A_TEHTA_XS  \\n\\\\char EC41 A_TEHTA_S \\n\\\\char EC42 A_TEHTA_L \\n\\\\char EC43 A_TEHTA_XL       \\n\\n\\\\char EC50 E_TEHTA_XS         \\n\\\\char EC51 E_TEHTA_S\\n\\\\char EC52 E_TEHTA_L \\n\\\\char EC53 E_TEHTA_XL  \\n\\n\\\\char EC60 I_TEHTA_XS   \\n\\\\char EC61 I_TEHTA_S  \\n\\\\char EC62 I_TEHTA_L   \\n\\\\char EC63 I_TEHTA_XL   \\n      \\n\\\\char EC70 O_TEHTA_XS              \\n\\\\char EC71 O_TEHTA_S    \\n\\\\char EC72 O_TEHTA_L   \\n\\\\char EC73 O_TEHTA_XL \\n      \\n\\\\char EC80 U_TEHTA_XS \\n\\\\char EC81 U_TEHTA_S \\n\\\\char EC82 U_TEHTA_L    \\n\\\\char EC83 U_TEHTA_XL  \\n\\n\\\\** Inf tehtar **\\\\\\n\\n\\\\char EC90 THINF_TDOT_XS       \\n\\\\char EC91 THINF_TDOT_L           \\n\\\\char EC92 THINF_TDOT_S           \\n\\\\char EC93 THINF_TDOT_XL\\n\\n\\\\char ECA0 THINF_ACCENT_XS    \\n\\\\char ECA1 THINF_ACCENT_S       \\n\\\\char ECA2 THINF_ACCENT_L                                                         \\n\\\\char ECA3 THINF_ACCENT_XL \\n\\n\\\\char ECB0 THINF_DOT_XS        \\n\\\\char ECB1 THINF_DOT_S           \\n\\\\char ECB2 THINF_DOT_L           \\n\\\\char ECB3 THINF_DOT_XL\\n\\\\char ECBF LAMBE_MARK_DOT  \\n\\n\\\\char ECC0 THINF_CURL_XS          \\n\\\\char ECC1 THINF_CURL_S           \\n\\\\char ECC2 THINF_CURL_L           \\n\\\\char ECC3 THINF_CURL_XL     \\n \\n\\\\char ECD0 THINF_CURL_INV_XS                                \\n\\\\char ECD1 THINF_CURL_INV_S                                                            \\n\\\\char ECD2 THINF_CURL_INV_L                                \\n\\\\char ECD3 THINF_CURL_INV_XL \\n\\n\\\\** Double tehtar **\\\\\\n\\n\\\\char ECE0 A_TEHTA_DOUBLE_XS\\n\\\\char ECE1 A_TEHTA_DOUBLE_S \\n\\\\char ECE2 A_TEHTA_DOUBLE_L \\n\\\\char ECE3 A_TEHTA_DOUBLE_XL\\n\\n\\\\char ECF0 E_TEHTA_DOUBLE_XS\\n\\\\char ECF1 E_TEHTA_DOUBLE_S \\n\\\\char ECF2 E_TEHTA_DOUBLE_L \\n\\\\char ECF3 E_TEHTA_DOUBLE_XL\\n\\n\\\\char ED00 THSUP_DDOT_XS    Y_TEHTA_XS    I_TEHTA_DOUBLE_XS         \\n\\\\char ED01 THSUP_DDOT_S     Y_TEHTA_S     I_TEHTA_DOUBLE_S       \\n\\\\char ED02 THSUP_DDOT_L     Y_TEHTA_L     I_TEHTA_DOUBLE_L          \\n\\\\char ED03 THSUP_DDOT_XL    Y_TEHTA_XL    I_TEHTA_DOUBLE_XL     \\n\\n\\\\char ED10 O_TEHTA_DOUBLE_XS\\n\\\\char ED11 O_TEHTA_DOUBLE_S \\n\\\\char ED12 O_TEHTA_DOUBLE_L \\n\\\\char ED13 O_TEHTA_DOUBLE_XL \\n\\n\\\\char ED20 U_TEHTA_DOUBLE_XS\\n\\\\char ED21 U_TEHTA_DOUBLE_S \\n\\\\char ED22 U_TEHTA_DOUBLE_L \\n\\\\char ED23 U_TEHTA_DOUBLE_XL\\n\\n\\\\** Double inf tehtar **\\\\\\n\\n\\\\char ED30 THINF_DSTROKE_XS                               \\n\\\\char ED31 THINF_DSTROKE_S       \\n\\\\char ED32 THINF_DSTROKE_L                         \\n\\\\char ED33 THINF_DSTROKE_XL \\n\\\\char ED3F LAMBE_MARK_DSTROKE \\n\\n\\\\char ED40 THINF_DDOT_XS          \\n\\\\char ED41 THINF_DDOT_S           \\n\\\\char ED42 THINF_DDOT_L           \\n\\\\char ED43 THINF_DDOT_XL \\n\\\\char ED4F LAMBE_MARK_DDOT    \\n\\n\\\\** Labializer **\\\\\\n\\n\\\\char ED50 WA_TEHTA_XS           \\n\\\\char ED51 WA_TEHTA_S           \\n\\\\char ED52 WA_TEHTA_L           \\n\\\\char ED53 WA_TEHTA_XL  \\n\\n\\\\** Thinnas **\\\\\\n\\n\\\\char ED60 THINF_STROKE_XS                                 \\n\\\\char ED61 THINF_STROKE_S                                 \\n\\\\char ED62 THINF_STROKE_L                                 \\n\\\\char ED63 THINF_STROKE_XL    \\n\\n\\\\** MSB Marker **\\\\\\n\\n\\\\char ED70 TH_SUB_CIRC_XS         \\n\\\\char ED71 TH_SUB_CIRC_S           \\n\\\\char ED72 TH_SUB_CIRC_L                                  \\n\\\\char ED73 TH_SUB_CIRC_XL  \\n\\n\\\\** Other UP Tehtar **\\\\\\n\\n\\\\char ED80 A_TEHTA_INV_XS \\n\\\\char ED81 A_TEHTA_INV_S         \\n\\\\char ED82 A_TEHTA_INV_L         \\n\\\\char ED83 A_TEHTA_INV_XL    \\n\\n\\\\char ED90 THSUP_TICK_INV_XS    A_TEHTA_CIRCUM_XS       \\n\\\\char ED91 THSUP_TICK_INV_S     A_TEHTA_CIRCUM_S        \\n\\\\char ED92 THSUP_TICK_INV_L     A_TEHTA_CIRCUM_L         \\n\\\\char ED93 THSUP_TICK_INV_XL    A_TEHTA_CIRCUM_XL   \\n\\n\\\\char EDA0 THSUP_TICK_XS          \\n\\\\char EDA1 THSUP_TICK_S           \\n\\\\char EDA2 THSUP_TICK_L           \\n\\\\char EDA3 THSUP_TICK_XL     \\n                                                          \\n\\\\char EDB0 THSUP_LAMBDA_XS         \\n\\\\char EDB1 THSUP_LAMBDA_S          \\n\\\\char EDB2 THSUP_LAMBDA_L          \\n\\\\char EDB3 THSUP_LAMBDA_XL  \\n\\n\\\\char EDC0 E_TEHTA_GRAVE_XS\\n\\\\char EDC1 E_TEHTA_GRAVE_S \\n\\\\char EDC2 E_TEHTA_GRAVE_L \\n\\\\char EDC3 E_TEHTA_GRAVE_XL \\n\\n\\\\char EDD0 BREVE_TEHTA_XS\\n\\\\char EDD1 BREVE_TEHTA_S\\n\\\\char EDD2 BREVE_TEHTA_L\\n\\\\char EDD3 BREVE_TEHTA_XL\\n\\n\\\\char EDE0 E_TEHTA_GRAVE_INF_XS\\n\\\\char EDE1 E_TEHTA_GRAVE_INF_S\\n\\\\char EDE2 E_TEHTA_GRAVE_INF_L\\n\\\\char EDE3 E_TEHTA_GRAVE_INF_XL\\n\\n\\n\\n\\\\** Ligatured results are mapped here **\\\\\\n\\\\char e800 AHA_TINCO\\n\\\\char e801 HWESTA_TINCO\\n\\\\char e802 ANCA_CLOSED SILME_AHA\\n\\\\char e900 LAMBE_LIG\\n\\n\\n\\n                    \\n\\\\** The following virtual chars are used to handle tehtar (& the like) multiple version chosing **\\\\\\n\\\\** It could be avoided with modern fonts with gsub/gpos tables for ligatures and diacritics **\\\\\\n\\\\** placement **\\\\\\n\\n\\n\\\\** DUMPED FROM THE VIRTUAL CHARS TOOL **\\\\\\n\\n\\\\beg virtual A_TEHTA\\n  \\\\class A_TEHTA_XS TELCO ARA HALLA HYARMEN NUM_8 NUM_10 NUM_11\\n  \\\\class A_TEHTA_S TINCO PARMA CALMA QUESSE SULE FORMEN TW_EXT_11 TW_EXT_12 ROMEN ARDA URE OSSE VALA_W_HOOK HARP_SHAPED AHA_TINCO HWESTA_TINCO NUM_4\\n  \\\\class A_TEHTA_L AHA HWESTA ORE VALA ANNA VILYA TW_EXT_13 TW_EXT_14 SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA YANTA VAIA SHOOK_BEAUTIFUL NUM_0 NUM_1 NUM_5\\n  \\\\class A_TEHTA_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 LAMBE ALDA SILME ESSE HWESTA_SINDARINWA MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_6 NUM_7 NUM_9\\n\\\\end\\n\\n\\\\beg virtual A_TEHTA_CIRCUM\\n  \\\\class A_TEHTA_CIRCUM_XS TELCO ARA HALLA HYARMEN NUM_8 NUM_10 NUM_11\\n  \\\\class A_TEHTA_CIRCUM_S TINCO PARMA CALMA QUESSE SULE FORMEN ORE VALA ANNA VILYA TW_EXT_11 TW_EXT_12 ROMEN ARDA SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA YANTA URE OSSE VALA_W_HOOK HARP_SHAPED AHA_TINCO HWESTA_TINCO NUM_1 NUM_4\\n  \\\\class A_TEHTA_CIRCUM_L AHA HWESTA TW_EXT_13 TW_EXT_14 VAIA SHOOK_BEAUTIFUL NUM_0 NUM_2 NUM_5 NUM_7 NUM_9\\n  \\\\class A_TEHTA_CIRCUM_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 LAMBE ALDA SILME ESSE HWESTA_SINDARINWA MALTA_W_HOOK ANCA_CLOSED NUM_3 NUM_6\\n\\\\end\\n\\n\\\\beg virtual A_TEHTA_REVERSED\\n  \\\\class A_TEHTA_INV_XS TELCO ARA HALLA HYARMEN NUM_8 NUM_10 NUM_11\\n  \\\\class A_TEHTA_INV_S TINCO PARMA CALMA QUESSE SULE FORMEN ORE VALA ANNA VILYA TW_EXT_11 TW_EXT_12 ROMEN ARDA SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA YANTA URE OSSE VALA_W_HOOK HARP_SHAPED AHA_TINCO HWESTA_TINCO NUM_4\\n  \\\\class A_TEHTA_INV_L AHA HWESTA TW_EXT_13 TW_EXT_14 VAIA SHOOK_BEAUTIFUL NUM_0 NUM_1 NUM_5 NUM_7\\n  \\\\class A_TEHTA_INV_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 LAMBE ALDA SILME ESSE HWESTA_SINDARINWA MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_6 NUM_9\\n\\\\end\\n\\n\\\\beg virtual A_TEHTA_CIRCUM_REVERSED TEHTA_BREVE\\n  \\\\class THSUP_TICK_XS TELCO ARA HALLA HYARMEN NUM_8 NUM_10 NUM_11\\n  \\\\class THSUP_TICK_S TINCO PARMA CALMA QUESSE SULE FORMEN ORE VALA ANNA VILYA TW_EXT_11 TW_EXT_12 ROMEN ARDA SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA YANTA URE OSSE VALA_W_HOOK HARP_SHAPED AHA_TINCO HWESTA_TINCO NUM_4\\n  \\\\class THSUP_TICK_L AHA HWESTA TW_EXT_13 TW_EXT_14 VAIA SHOOK_BEAUTIFUL NUM_0 NUM_1 NUM_5 NUM_7\\n  \\\\class THSUP_TICK_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 LAMBE ALDA SILME ESSE HWESTA_SINDARINWA MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_6 NUM_9\\n\\\\end\\n\\n\\\\beg virtual E_TEHTA\\n  \\\\class E_TEHTA_XS TELCO ARA HALLA HYARMEN NUM_8 NUM_10 NUM_11\\n  \\\\class E_TEHTA_S TINCO PARMA CALMA QUESSE SULE FORMEN ORE VALA ANNA VILYA TW_EXT_11 TW_EXT_12 ROMEN ARDA URE OSSE VALA_W_HOOK HARP_SHAPED AHA_TINCO HWESTA_TINCO NUM_4\\n  \\\\class E_TEHTA_L AHA HWESTA TW_EXT_13 TW_EXT_14 SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA YANTA VAIA SHOOK_BEAUTIFUL NUM_0 NUM_1 NUM_5 NUM_7\\n  \\\\class E_TEHTA_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 LAMBE ALDA SILME ESSE HWESTA_SINDARINWA MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_6 NUM_9\\n\\\\end\\n\\n\\\\beg virtual E_TEHTA_GRAVE\\n  \\\\class E_TEHTA_GRAVE_XS TINCO PARMA CALMA QUESSE AHA HWESTA ORE VALA ANNA VILYA TW_EXT_13 TW_EXT_14 ROMEN ARDA SILME SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA YANTA URE VAIA VALA_W_HOOK SHOOK_BEAUTIFUL NUM_0 NUM_1 NUM_5 NUM_7\\n  \\\\class E_TEHTA_GRAVE_S TELCO ARA HALLA SULE FORMEN TW_EXT_11 TW_EXT_12 OSSE HARP_SHAPED AHA_TINCO HWESTA_TINCO NUM_4 NUM_8\\n  \\\\class E_TEHTA_GRAVE_L ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 LAMBE ALDA ESSE HYARMEN HWESTA_SINDARINWA MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_6 NUM_9 NUM_10 NUM_11\\n  \\\\class E_TEHTA_GRAVE_XL \\n\\\\end\\n\\n\\\\beg virtual I_TEHTA\\n  \\\\class I_TEHTA_XS TELCO ARA HALLA HYARMEN NUM_8 NUM_10 NUM_11\\n  \\\\class I_TEHTA_S TINCO PARMA CALMA QUESSE SULE FORMEN ORE VALA ANNA VILYA TW_EXT_11 TW_EXT_12 ROMEN ARDA SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA YANTA URE OSSE VALA_W_HOOK HARP_SHAPED AHA_TINCO HWESTA_TINCO NUM_1 NUM_4\\n  \\\\class I_TEHTA_L AHA HWESTA TW_EXT_13 TW_EXT_14 VAIA SHOOK_BEAUTIFUL NUM_0 NUM_5 NUM_7 NUM_9\\n  \\\\class I_TEHTA_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 LAMBE ALDA SILME ESSE HWESTA_SINDARINWA MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_6\\n\\\\end\\n\\n\\\\beg virtual O_TEHTA\\n  \\\\class O_TEHTA_XS TELCO ARA HALLA HYARMEN NUM_10 NUM_11\\n  \\\\class O_TEHTA_S TINCO PARMA CALMA QUESSE SULE FORMEN ORE VALA ANNA VILYA TW_EXT_11 TW_EXT_12 ROMEN ARDA SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA YANTA URE OSSE VALA_W_HOOK HARP_SHAPED AHA_TINCO HWESTA_TINCO NUM_8\\n  \\\\class O_TEHTA_L AHA HWESTA TW_EXT_13 TW_EXT_14 VAIA SHOOK_BEAUTIFUL NUM_0 NUM_1 NUM_2 NUM_3 NUM_4 NUM_9\\n  \\\\class O_TEHTA_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 LAMBE ALDA SILME ESSE HWESTA_SINDARINWA MALTA_W_HOOK ANCA_CLOSED NUM_5 NUM_6 NUM_7\\n\\\\end\\n\\n\\\\beg virtual U_TEHTA\\n  \\\\class U_TEHTA_XS TELCO ARA HALLA HYARMEN NUM_10 NUM_11\\n  \\\\class U_TEHTA_S TINCO PARMA CALMA QUESSE SULE FORMEN ORE VALA ANNA VILYA TW_EXT_11 TW_EXT_12 ROMEN ARDA SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA YANTA URE OSSE VALA_W_HOOK HARP_SHAPED AHA_TINCO HWESTA_TINCO NUM_4 NUM_8\\n  \\\\class U_TEHTA_L AHA HWESTA TW_EXT_13 TW_EXT_14 VAIA SHOOK_BEAUTIFUL NUM_0 NUM_1 NUM_2 NUM_3 NUM_5 NUM_9\\n  \\\\class U_TEHTA_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 LAMBE ALDA SILME ESSE HWESTA_SINDARINWA MALTA_W_HOOK ANCA_CLOSED NUM_6 NUM_7\\n\\\\end\\n\\n\\\\beg virtual WA_TEHTA SEV_TEHTA\\n  \\\\class WA_TEHTA_XS TELCO ARA HALLA SULE FORMEN TW_EXT_11 TW_EXT_12 HYARMEN HARP_SHAPED AHA_TINCO HWESTA_TINCO NUM_4 NUM_8 NUM_10 NUM_11\\n  \\\\class WA_TEHTA_S TINCO PARMA CALMA QUESSE ORE VALA ANNA VILYA ROMEN ARDA SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA YANTA URE OSSE VAIA VALA_W_HOOK NUM_0 NUM_1\\n  \\\\class WA_TEHTA_L AHA HWESTA TW_EXT_13 TW_EXT_14 SHOOK_BEAUTIFUL NUM_2 NUM_5 NUM_7 NUM_9\\n  \\\\class WA_TEHTA_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 LAMBE ALDA SILME ESSE HWESTA_SINDARINWA MALTA_W_HOOK ANCA_CLOSED NUM_3 NUM_6\\n\\\\end\\n\\n\\\\beg virtual A_TEHTA_DOUBLE\\n  \\\\class A_TEHTA_DOUBLE_XS TELCO ARA HALLA HYARMEN NUM_4 NUM_8 NUM_10 NUM_11\\n  \\\\class A_TEHTA_DOUBLE_S SULE FORMEN TW_EXT_11 TW_EXT_12 OSSE HARP_SHAPED AHA_TINCO HWESTA_TINCO\\n  \\\\class A_TEHTA_DOUBLE_L TINCO PARMA CALMA QUESSE ORE VALA ANNA VILYA ROMEN ARDA SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA YANTA URE VAIA VALA_W_HOOK SHOOK_BEAUTIFUL NUM_0 NUM_1 NUM_5\\n  \\\\class A_TEHTA_DOUBLE_XL ANDO UMBAR ANGA UNGWE AHA HWESTA ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_13 TW_EXT_14 TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 LAMBE ALDA SILME ESSE HWESTA_SINDARINWA MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_6 NUM_7 NUM_9\\n\\\\end\\n\\n\\\\beg virtual E_TEHTA_DOUBLE\\n  \\\\class E_TEHTA_DOUBLE_XS TELCO ARA HALLA HYARMEN NUM_8 NUM_10 NUM_11\\n  \\\\class E_TEHTA_DOUBLE_S TW_EXT_11\\n  \\\\class E_TEHTA_DOUBLE_L TINCO PARMA CALMA QUESSE SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA TW_EXT_12 TW_EXT_13 TW_EXT_14 ROMEN ARDA SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA YANTA URE OSSE VAIA VALA_W_HOOK SHOOK_BEAUTIFUL HARP_SHAPED AHA_TINCO HWESTA_TINCO NUM_0 NUM_1\\n  \\\\class E_TEHTA_DOUBLE_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 LAMBE ALDA SILME ESSE HWESTA_SINDARINWA MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_4 NUM_5 NUM_6 NUM_7 NUM_9\\n\\\\end\\n\\n\\\\beg virtual I_TEHTA_DOUBLE Y_TEHTA\\n  \\\\class I_TEHTA_DOUBLE_XS TELCO ARA HALLA SULE FORMEN TW_EXT_11 TW_EXT_12 HYARMEN HARP_SHAPED AHA_TINCO HWESTA_TINCO NUM_4 NUM_8 NUM_10 NUM_11\\n  \\\\class I_TEHTA_DOUBLE_S TINCO PARMA CALMA QUESSE ORE VALA ANNA VILYA ESSE_NUQUERNA YANTA URE OSSE VALA_W_HOOK SHOOK_BEAUTIFUL NUM_1\\n  \\\\class I_TEHTA_DOUBLE_L AHA HWESTA TW_EXT_13 TW_EXT_14 ROMEN ARDA SILME_NUQUERNA SILME_NUQUERNA_ALT VAIA NUM_0 NUM_2 NUM_5 NUM_9\\n  \\\\class I_TEHTA_DOUBLE_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 LAMBE ALDA SILME ESSE HWESTA_SINDARINWA MALTA_W_HOOK ANCA_CLOSED NUM_3 NUM_6 NUM_7\\n\\\\end\\n\\n\\\\beg virtual O_TEHTA_DOUBLE\\n  \\\\class O_TEHTA_DOUBLE_XS TELCO ARA HALLA HYARMEN NUM_10 NUM_11\\n  \\\\class O_TEHTA_DOUBLE_S TINCO PARMA CALMA QUESSE SULE FORMEN ORE VALA ANNA VILYA TW_EXT_11 TW_EXT_12 ROMEN ARDA SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA YANTA URE OSSE SHOOK_BEAUTIFUL HARP_SHAPED AHA_TINCO HWESTA_TINCO NUM_4 NUM_8\\n  \\\\class O_TEHTA_DOUBLE_L AHA HWESTA TW_EXT_13 TW_EXT_14 VAIA VALA_W_HOOK NUM_0 NUM_1 NUM_2 NUM_5 NUM_7\\n  \\\\class O_TEHTA_DOUBLE_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 LAMBE ALDA SILME ESSE HWESTA_SINDARINWA MALTA_W_HOOK ANCA_CLOSED NUM_3 NUM_6 NUM_9\\n\\\\end\\n\\n\\\\beg virtual U_TEHTA_DOUBLE\\n  \\\\class U_TEHTA_DOUBLE_XS TELCO ARA HALLA HYARMEN NUM_10 NUM_11\\n  \\\\class U_TEHTA_DOUBLE_S TINCO PARMA CALMA QUESSE SULE FORMEN ORE VALA ANNA VILYA TW_EXT_11 TW_EXT_12 ROMEN ARDA SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA YANTA URE OSSE SHOOK_BEAUTIFUL HARP_SHAPED AHA_TINCO HWESTA_TINCO NUM_8\\n  \\\\class U_TEHTA_DOUBLE_L AHA HWESTA TW_EXT_13 TW_EXT_14 VAIA VALA_W_HOOK NUM_0 NUM_1 NUM_2 NUM_4 NUM_5\\n  \\\\class U_TEHTA_DOUBLE_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 LAMBE ALDA SILME ESSE HWESTA_SINDARINWA MALTA_W_HOOK ANCA_CLOSED NUM_3 NUM_6 NUM_7 NUM_9\\n\\\\end\\n\\n\\\\beg virtual A_TEHTA_INF\\n  \\\\class THINF_TDOT_XS TELCO ARA HALLA ROMEN ARDA SILME_NUQUERNA HARP_SHAPED NUM_8\\n  \\\\class THINF_TDOT_S TINCO PARMA TW_EXT_11 TW_EXT_12 SILME URE OSSE SHOOK_BEAUTIFUL AHA_TINCO HWESTA_TINCO NUM_6 NUM_7\\n  \\\\class THINF_TDOT_L CALMA QUESSE SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA TW_EXT_13 TW_EXT_14 LAMBE ALDA SILME_NUQUERNA_ALT ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA YANTA VAIA VALA_W_HOOK NUM_0 NUM_1 NUM_2 NUM_4 NUM_10 NUM_11\\n  \\\\class THINF_TDOT_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 MALTA_W_HOOK ANCA_CLOSED NUM_3 NUM_5 NUM_9\\n\\\\end\\n\\n\\\\beg virtual E_TEHTA_INF\\n  \\\\class THINF_ACCENT_XS TELCO ARA HALLA ROMEN ARDA SILME_NUQUERNA HARP_SHAPED\\n  \\\\class THINF_ACCENT_S TINCO PARMA TW_EXT_11 TW_EXT_12 SILME URE OSSE SHOOK_BEAUTIFUL AHA_TINCO HWESTA_TINCO NUM_1 NUM_4 NUM_6 NUM_7 NUM_8 NUM_11\\n  \\\\class THINF_ACCENT_L CALMA QUESSE SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA TW_EXT_13 TW_EXT_14 LAMBE ALDA SILME_NUQUERNA_ALT ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA YANTA VAIA VALA_W_HOOK NUM_0 NUM_2 NUM_5 NUM_9 NUM_10\\n  \\\\class THINF_ACCENT_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 MALTA_W_HOOK ANCA_CLOSED NUM_3\\n\\\\end\\n\\n\\\\beg virtual E_TEHTA_GRAVE_INF\\n  \\\\class E_TEHTA_GRAVE_INF_XS TELCO ARA HALLA ROMEN ARDA SILME_NUQUERNA\\n  \\\\class E_TEHTA_GRAVE_INF_S CALMA QUESSE TW_EXT_13 TW_EXT_14 NUM_2 NUM_3 NUM_4\\n  \\\\class E_TEHTA_GRAVE_INF_L TINCO PARMA SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA TW_EXT_11 TW_EXT_12 SILME SILME_NUQUERNA_ALT ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA YANTA URE OSSE VAIA VALA_W_HOOK SHOOK_BEAUTIFUL HARP_SHAPED AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_6 NUM_7 NUM_8 NUM_10 NUM_11\\n  \\\\class E_TEHTA_GRAVE_INF_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 LAMBE ALDA MALTA_W_HOOK ANCA_CLOSED NUM_5 NUM_9\\n\\\\end\\n\\n\\\\beg virtual CIRC_TEHTA_INF\\n  \\\\class TH_SUB_CIRC_XS TELCO ARA HALLA ROMEN ARDA SILME_NUQUERNA HARP_SHAPED\\n  \\\\class TH_SUB_CIRC_S TINCO PARMA TW_EXT_11 TW_EXT_12 SILME URE OSSE SHOOK_BEAUTIFUL AHA_TINCO HWESTA_TINCO NUM_4 NUM_6 NUM_8\\n  \\\\class TH_SUB_CIRC_L CALMA QUESSE SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA TW_EXT_13 TW_EXT_14 LAMBE ALDA SILME_NUQUERNA_ALT ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA YANTA VAIA VALA_W_HOOK NUM_0 NUM_1 NUM_7 NUM_10 NUM_11\\n  \\\\class TH_SUB_CIRC_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_5 NUM_9\\n\\\\end\\n\\n\\\\beg virtual THINNAS  THINF_STROKE\\n  \\\\class THINF_STROKE_XS TELCO ARA HALLA ROMEN ARDA SILME_NUQUERNA HARP_SHAPED\\n  \\\\class THINF_STROKE_S TINCO PARMA TW_EXT_11 TW_EXT_12 SILME URE OSSE SHOOK_BEAUTIFUL AHA_TINCO HWESTA_TINCO NUM_4 NUM_6 NUM_7 NUM_8\\n  \\\\class THINF_STROKE_L CALMA QUESSE SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA TW_EXT_13 TW_EXT_14 LAMBE ALDA SILME_NUQUERNA_ALT ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA YANTA VAIA VALA_W_HOOK NUM_0 NUM_1 NUM_2 NUM_10 NUM_11\\n  \\\\class THINF_STROKE_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 MALTA_W_HOOK ANCA_CLOSED NUM_3 NUM_5 NUM_9\\n\\\\end\\n\\n\\\\beg virtual O_TEHTA_INF\\n  \\\\class THINF_CURL_XS TELCO ARA HALLA ROMEN ARDA SILME_NUQUERNA HARP_SHAPED\\n  \\\\class THINF_CURL_S TINCO PARMA TW_EXT_11 TW_EXT_12 SILME URE OSSE SHOOK_BEAUTIFUL AHA_TINCO HWESTA_TINCO NUM_4 NUM_6 NUM_7 NUM_8 NUM_10 NUM_11\\n  \\\\class THINF_CURL_L CALMA QUESSE SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA TW_EXT_13 TW_EXT_14 LAMBE ALDA SILME_NUQUERNA_ALT ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA YANTA VAIA VALA_W_HOOK NUM_0 NUM_1 NUM_2 NUM_5 NUM_9\\n  \\\\class THINF_CURL_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 MALTA_W_HOOK ANCA_CLOSED NUM_3\\n\\\\end\\n\\n\\\\beg virtual U_TEHTA_INF\\n  \\\\class THINF_CURL_INV_XS TELCO ARA HALLA ROMEN ARDA SILME_NUQUERNA HARP_SHAPED\\n  \\\\class THINF_CURL_INV_S TINCO PARMA TW_EXT_11 TW_EXT_12 SILME URE OSSE SHOOK_BEAUTIFUL AHA_TINCO HWESTA_TINCO\\n  \\\\class THINF_CURL_INV_L CALMA QUESSE SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA TW_EXT_13 TW_EXT_14 LAMBE ALDA SILME_NUQUERNA_ALT ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA YANTA VAIA VALA_W_HOOK NUM_0 NUM_1 NUM_2 NUM_4 NUM_5 NUM_6 NUM_7 NUM_8 NUM_9 NUM_10 NUM_11\\n  \\\\class THINF_CURL_INV_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 MALTA_W_HOOK ANCA_CLOSED NUM_3\\n\\\\end\\n\\n\\\\beg virtual PALATAL_SIGN I_TEHTA_DOUBLE_INF Y_TEHTA_INF\\n  \\\\class THINF_DDOT_XS TELCO ARA HALLA ROMEN ARDA SILME_NUQUERNA HARP_SHAPED NUM_8\\n  \\\\class THINF_DDOT_S TINCO PARMA TW_EXT_11 TW_EXT_12 SILME URE OSSE SHOOK_BEAUTIFUL AHA_TINCO HWESTA_TINCO NUM_4 NUM_6\\n  \\\\class THINF_DDOT_L CALMA QUESSE SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA TW_EXT_13 TW_EXT_14 SILME_NUQUERNA_ALT ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA YANTA VAIA VALA_W_HOOK NUM_0 NUM_1 NUM_2 NUM_9 NUM_10 NUM_11\\n  \\\\class THINF_DDOT_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 MALTA_W_HOOK ANCA_CLOSED NUM_3 NUM_5\\n  \\\\class LAMBE_MARK_DDOT LAMBE ALDA NUM_7\\n\\\\end\\n\\n\\\\beg virtual E_TEHTA_DOUBLE_INF GEMINATE_DOUBLE\\n  \\\\class THINF_DSTROKE_XS TELCO ARA HALLA ROMEN ARDA SILME_NUQUERNA HARP_SHAPED\\n  \\\\class THINF_DSTROKE_S TINCO PARMA TW_EXT_11 TW_EXT_12 SILME URE OSSE SHOOK_BEAUTIFUL AHA_TINCO HWESTA_TINCO NUM_4 NUM_6 NUM_7 NUM_8\\n  \\\\class THINF_DSTROKE_L CALMA QUESSE SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA TW_EXT_13 TW_EXT_14 SILME_NUQUERNA_ALT ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA YANTA VAIA VALA_W_HOOK NUM_0 NUM_1 NUM_10 NUM_11\\n  \\\\class THINF_DSTROKE_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_5 NUM_9\\n  \\\\class LAMBE_MARK_DSTROKE LAMBE ALDA\\n\\\\end\\n\\n\\\\beg virtual UNUTIXE I_TEHTA_INF NO_VOWEL_DOT\\n  \\\\class THINF_DOT_XS TELCO ARA HALLA ROMEN ARDA SILME_NUQUERNA HARP_SHAPED\\n  \\\\class THINF_DOT_S TINCO PARMA TW_EXT_11 TW_EXT_12 SILME URE OSSE SHOOK_BEAUTIFUL AHA_TINCO HWESTA_TINCO NUM_4 NUM_6 NUM_7 NUM_8\\n  \\\\class THINF_DOT_L CALMA QUESSE SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA TW_EXT_13 TW_EXT_14 SILME_NUQUERNA_ALT ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA YANTA VAIA VALA_W_HOOK NUM_0 NUM_1 NUM_2 NUM_10 NUM_11\\n  \\\\class THINF_DOT_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 MALTA_W_HOOK ANCA_CLOSED NUM_3 NUM_5 NUM_9\\n  \\\\class LAMBE_MARK_DOT LAMBE ALDA\\n\\\\end\\n\\n\\\\beg virtual GEMINATE_SIGN\\n  \\\\class DASH_INF_XS TELCO ARA HALLA\\n  \\\\class DASH_INF_S TINCO PARMA CALMA QUESSE SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA TW_EXT_11 TW_EXT_12 TW_EXT_13 TW_EXT_14 ROMEN ARDA SILME SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA YANTA URE OSSE VAIA VALA_W_HOOK SHOOK_BEAUTIFUL HARP_SHAPED AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_4 NUM_7 NUM_8 NUM_10 NUM_11\\n  \\\\class DASH_INF_L ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_5 NUM_6 NUM_9\\n  \\\\class LAMBE_MARK_DASH LAMBE ALDA\\n\\\\end\\n\\n\\\\beg virtual GEMINATE_SIGN_TILD\\n  \\\\class TILD_INF_XS TELCO ARA HALLA\\n  \\\\class TILD_INF_S TINCO PARMA CALMA QUESSE SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA TW_EXT_11 TW_EXT_12 TW_EXT_13 TW_EXT_14 ROMEN ARDA SILME SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA YANTA URE OSSE VAIA VALA_W_HOOK SHOOK_BEAUTIFUL HARP_SHAPED AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_4 NUM_7 NUM_8 NUM_10 NUM_11\\n  \\\\class TILD_INF_L ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_5 NUM_6 NUM_9\\n  \\\\class LAMBE_MARK_TILD LAMBE ALDA\\n\\\\end\\n\\n\\\\beg virtual NASALIZE_SIGN\\n  \\\\class DASH_SUP_XS TELCO ARA HALLA\\n  \\\\class DASH_SUP_S TINCO PARMA CALMA QUESSE SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA TW_EXT_11 TW_EXT_12 TW_EXT_13 TW_EXT_14 ROMEN ARDA LAMBE ALDA SILME SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA YANTA URE OSSE VAIA VALA_W_HOOK SHOOK_BEAUTIFUL HARP_SHAPED AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_4 NUM_7 NUM_8 NUM_10 NUM_11\\n  \\\\class DASH_SUP_L ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_5 NUM_6 NUM_9\\n\\\\end\\n\\n\\\\beg virtual NASALIZE_SIGN_TILD\\n  \\\\class TILD_SUP_XS TELCO ARA HALLA\\n  \\\\class TILD_SUP_S TINCO PARMA CALMA QUESSE SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA TW_EXT_11 TW_EXT_12 TW_EXT_13 TW_EXT_14 ROMEN ARDA LAMBE ALDA SILME SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA YANTA URE OSSE VAIA VALA_W_HOOK SHOOK_BEAUTIFUL HARP_SHAPED AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_4 NUM_7 NUM_8 NUM_10 NUM_11\\n  \\\\class TILD_SUP_L ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_5 NUM_6 NUM_9\\n\\\\end\\n\\n\\\\beg virtual SARINCE\\n  \\\\class SHOOK_LEFT_L CALMA QUESSE ANGA UNGWE TW_EXT_13 TW_EXT_14 TW_EXT_23 TW_EXT_24 HWESTA_SINDARINWA NUM_0 NUM_1 NUM_4 NUM_7 NUM_8 NUM_10 NUM_11\\n  \\\\class SHOOK_RIGHT_L TELCO ARA HALLA TINCO PARMA ANDO UMBAR SULE FORMEN AHA HWESTA ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME ORE VALA ANNA VILYA TW_EXT_11 TW_EXT_12 TW_EXT_21 TW_EXT_22 ROMEN ARDA LAMBE ALDA SILME SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE ESSE_NUQUERNA HYARMEN YANTA URE OSSE VAIA MALTA_W_HOOK VALA_W_HOOK SHOOK_BEAUTIFUL ANCA_CLOSED HARP_SHAPED AHA_TINCO HWESTA_TINCO NUM_2 NUM_3 NUM_5 NUM_6 NUM_9\\n\\\\end\\n\"\nGlaemscribe.resource_manager.raw_charsets[\"tengwar_guni_sindarin\"] = \"\\\\**\\n\\nGlǽmscribe (also written Glaemscribe) is a software dedicated to\\nthe transcription of texts between writing systems, and more \\nspecifically dedicated to the transcription of J.R.R. Tolkien\\'s \\ninvented languages to some of his devised writing systems.\\n\\nCopyright (C) 2015 Benjamin Babut (Talagan).\\n\\nThis program is free software: you can redistribute it and/or modify\\nit under the terms of the GNU Affero General Public License as published by\\nthe Free Software Foundation, either version 3 of the License, or\\nany later version.\\n\\nThis program is distributed in the hope that it will be useful,\\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\nGNU Affero General Public License for more details.\\n\\nYou should have received a copy of the GNU Affero General Public License\\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\\n\\n**\\\\\\n\\n\\\\** Charset specially customized for Tengwar Sindarin (Glaemscrafu patched version) **\\\\ \\n\\n\\\\version 0.1.0\\n\\n\\\\beg changelog\\n  \\\\** Changes done to the original font and inherited. **\\\\\\n  \\\\entry \\\"0.0.0\\\" \\\"Added VALA_W_HOOK, VAIYA.\\\"\\n  \\\\entry \\\"0.0.0\\\" \\\"Superior and inferior dash and tild consonant modification signs have been added for halla, telco and ara. / Added pustar combinations (4/4-halfed/4-squared/5)\\\"\\n  \\\\entry \\\"0.0.0\\\" \\\"Fixed missing tinco_ext / sule_ext\\\"\\n  \\\\entry \\\"0.0.0\\\" \\\"Added NBSP\\\"\\n  \\n  \\\\entry \\\"0.1.0\\\" \\\"First version of the unicode layout\\\"\\n\\\\end\\n\\n\\n\\\\char 20 SPACE\\n\\\\char a0 NBSP\\n\\n\\\\char 2018 SQUOT_OPEN\\n\\\\char 2019 SQUOT_CLOSE\\n\\n\\\\char 28 PUNCT_PAREN_L \\n\\\\char 29 PUNCT_PAREN_R \\n\\\\char 5B PUNCT_PAREN_L_ALT \\n\\\\char 5D PUNCT_PAREN_R_ALT \\n\\n\\\\** PUSTAR, take them in unicode not in personnal use (deprecation) **\\\\\\n\\\\char 2e31 PUNCT_DOT\\n\\\\char   3a PUNCT_DDOT\\n\\\\char 205D PUNCT_TDOT PUSTA_3\\n\\\\char 2058 PUSTA_4\\n\\\\char 10FB PUSTA_4_HALFED\\n\\\\char 2E2C PUSTA_4_SQUARED\\n\\\\char 2E2D PUSTA_5\\n\\n\\n\\n\\\\char e000  TW_11 TINCO     \\n\\\\char e001  TW_12 PARMA\\n\\\\char e002  TW_13 CALMA\\n\\\\char e003  TW_14 QUESSE\\n\\\\char e004  TW_21 ANDO  \\n\\\\char e005  TW_22 UMBAR\\n\\\\char e006  TW_23 ANGA  \\n\\\\char e007  TW_24 UNGWE   \\n\\\\char e008  TW_31 SULE THULE\\n\\\\char e009  TW_32 FORMEN\\n\\\\char e00A  TW_33 AHA  \\n\\\\char e00B  TW_34 HWESTA\\n\\\\char e00C  TW_41 ANTO\\n\\\\char e00D  TW_42 AMPA\\n\\\\char e00E  TW_43 ANCA\\n\\\\char e00F  TW_44 UNQUE\\n\\n\\\\char e010  TW_51 NUMEN \\n\\\\char e011  TW_52 MALTA\\n\\\\char e012  TW_53 NOLDO\\n\\\\char e013  TW_54 NWALME\\n\\\\char e014  TW_61 ORE\\n\\\\char e015  TW_62 VALA\\n\\\\char e016  TW_63 ANNA\\n\\\\char e017  TW_64 VILYA\\n\\\\char e018  TW_EXT_11 TINCO_EXT SULE_EXT THULE_EXT\\n\\\\char e019  TW_EXT_12 PARMA_EXT FORMEN_EXT \\n\\\\char e01A  TW_EXT_13 CALMA_EXT AHA_EXT\\n\\\\char e01B  TW_EXT_14 QUESSE_EXT HWESTA_EXT   \\n\\\\char e01C  TW_EXT_21 ANDO_EXT ANTO_EXT \\n\\\\char e01D  TW_EXT_22 UMBAR_EXT AMPA_EXT\\n\\\\char e01E  TW_EXT_23 ANGA_EXT ANCA_EXT\\n\\\\char e01F  TW_EXT_24 UNGWE_EXT UNQUE_EXT\\n\\n\\\\char e020  TW_71 ROMEN\\n\\\\char e021  TW_72 ARDA\\n\\\\char e022  TW_73 LAMBE LAMBE_NO_LIG\\n\\\\char e023  TW_74 ALDA \\n\\\\char e024  TW_81 SILME \\n\\\\char e025  TW_82 SILME_NUQUERNA \\n\\\\char e026  TW_83 ESSE\\n\\\\char e027  TW_84 ESSE_NUQUERNA\\n\\\\char e028  TW_91 HYARMEN \\n\\\\char e029  TW_92 HWESTA_SINDARINWA \\n\\\\char e02A  TW_93 YANTA\\n\\\\char e02B  TW_94 URE\\n\\\\char e02C  ARA\\n\\\\char e02D  HALLA\\n\\\\char e02E  TELCO\\n\\\\**.....**\\\\    \\n\\n\\\\char e030  REVERSED_OSSE\\n\\\\char e031  BOMBADIL_W \\n\\\\char e032  OSSE\\n\\\\**.....**\\\\ \\n\\\\char e034  LIGATING_SHORT_CARRIER\\n\\\\**..D..**\\\\ \\n\\\\char e036  ANNA_OPEN\\n\\\\char e037  CHRISTOPHER_QU\\n\\\\**..D..**\\\\ \\n\\\\char e039  BOMBADIL_HW\\n\\\\char e03A  TW_MH MALTA_W_HOOK \\n\\\\char e03B  TW_MH_BELERIANDIC VALA_W_HOOK \\n\\\\char e03C  TW_HW_LOWDHAM HARP_SHAPED\\n\\\\char e03D  VAIA WAIA VAIYA\\n\\\\**..X..**\\\\ \\n\\\\**..X..**\\\\ \\n \\n\\\\char e040  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e041  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e042  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e043  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e044  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e045  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e046  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e047  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e048  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e049  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e04A  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e04B  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e04C  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e04D  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e04E  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e04F  ? \\\\** LEGACY FONT **\\\\\\n\\n\\\\char e050  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e051  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e052  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e053  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e054  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e055  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e056  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e057  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e058  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e059  ? \\\\** LEGACY FONT **\\\\\\n\\\\char e05A  ? \\\\** LEGACY FONT **\\\\\\n\\\\**.....**\\\\ \\n\\\\**.....**\\\\ \\n\\\\**.....**\\\\ \\n\\\\**.....**\\\\ \\n\\\\**.....**\\\\ \\n\\n\\\\**..D..**\\\\ \\n\\\\**..D..**\\\\ \\n\\\\**..D..**\\\\ \\n\\\\**..D..**\\\\ \\n\\\\**..D..**\\\\ \\n\\\\char e065  PUNCT_EXCLAM\\n\\\\char e066  PUNCT_INTERR\\n\\\\char e067  ELVISH_PAREN BOOKMARK_SIGN\\n\\\\char e068  PUNCT_TILD \\n\\\\char e069  PUNCT_DTILD\\n\\\\char e06A  DQUOT_OPEN\\n\\\\char e06B  DQUOT_CLOSE\\n\\\\char e06C  THORIN_EXCLAMATION\\n\\\\**.....**\\\\ \\n\\\\**..X..**\\\\ \\n\\\\**..X..**\\\\ \\n\\n\\n\\\\char e070 NUM_0 \\n\\\\char e071 NUM_1 \\n\\\\char e072 NUM_2 \\n\\\\char e073 NUM_3 \\n\\\\char e074 NUM_4 \\n\\\\char e075 NUM_5 \\n\\\\char e076 NUM_6 \\n\\\\char e077 NUM_7 \\n\\\\char e078 NUM_8 \\n\\\\char e079 NUM_9 \\n\\\\char e07A NUM_10\\n\\\\char e07B NUM_11\\n\\\\char e07C NUM_12\\n\\n\\\\** MISSING in the norm**\\\\\\n\\\\char 204A OLD_ENGLISH_AND\\n\\\\char e03e SILME_NUQUERNA_ALT\\n\\\\char e06e RING_MARK_L \\n\\\\char e06f RING_MARK_R\\n\\n\\\\** LEGACY SARINCE **\\\\\\n\\n\\\\char EBD0 SARINCE_LEFT_V1 SHOOK_LEFT_L \\n\\\\char EBD1 SARINCE_LEFT_V2 SHOOK_LEFT_S \\n\\n\\\\char EBD8 SARINCE_RIGHT_V1 SHOOK_RIGHT_L\\n\\\\char EBD9 SARINCE_RIGHT_V2 SHOOK_RIGHT_S\\n\\\\char EBDA SARINCE_RIGHT_V3\\n\\n\\\\char EBE0 SARINCE_SEMI_ASCENDING_V1\\n\\n\\\\char EBE8 SARINCE_ASCENDING_V1\\n\\\\** .. **\\\\\\n\\\\char EBEA SARINCE_ASCENDING_V3\\n\\n\\\\char EBF0 SARINCE_DESCENDING_V1\\n\\n\\\\char EBF8 SARINCE_FLOURISHED_V1 SARINCE_FLOURISHED SHOOK_BEAUTIFUL\\n\\\\char EBF9 SARINCE_FLOURISHED_V2\\n\\n\\\\** Consonant modifiers **\\\\\\n\\n\\\\char EC00 DASH_INF_XS\\n\\\\char EC01 DASH_INF_S   \\n\\\\char EC02 DASH_INF_L    \\n\\\\char EC0F LAMBE_MARK_DASH \\n\\n\\\\char EC10 TILD_INF_XS\\n\\\\char EC11 TILD_INF_S   \\n\\\\char EC12 TILD_INF_L            \\n\\\\char EC1F LAMBE_MARK_TILD   \\n\\n\\\\char EC20 DASH_SUP_XS\\n\\\\char EC21 DASH_SUP_S                      \\n\\\\char EC22 DASH_SUP_L  \\n\\n\\\\char EC30 TILD_SUP_XS\\n\\\\char EC31 TILD_SUP_S  \\n\\\\char EC32 TILD_SUP_L                       \\n\\n\\\\** Base tehtar **\\\\\\n\\n\\\\char EC40 A_TEHTA_XS  \\n\\\\char EC41 A_TEHTA_S \\n\\\\char EC42 A_TEHTA_L \\n\\\\char EC43 A_TEHTA_XL       \\n\\n\\\\char EC50 E_TEHTA_XS         \\n\\\\char EC51 E_TEHTA_S\\n\\\\char EC52 E_TEHTA_L \\n\\\\char EC53 E_TEHTA_XL  \\n\\n\\\\char EC60 I_TEHTA_XS   \\n\\\\char EC61 I_TEHTA_S  \\n\\\\char EC62 I_TEHTA_L   \\n\\\\char EC63 I_TEHTA_XL   \\n      \\n\\\\char EC70 O_TEHTA_XS              \\n\\\\char EC71 O_TEHTA_S    \\n\\\\char EC72 O_TEHTA_L   \\n\\\\char EC73 O_TEHTA_XL \\n      \\n\\\\char EC80 U_TEHTA_XS \\n\\\\char EC81 U_TEHTA_S \\n\\\\char EC82 U_TEHTA_L    \\n\\\\char EC83 U_TEHTA_XL  \\n\\n\\\\** Inf tehtar **\\\\\\n\\n\\\\char EC90 THINF_TDOT_XS       \\n\\\\char EC91 THINF_TDOT_L           \\n\\\\char EC92 THINF_TDOT_S           \\n\\\\char EC93 THINF_TDOT_XL\\n\\n\\\\char ECA0 THINF_ACCENT_XS    \\n\\\\char ECA1 THINF_ACCENT_S       \\n\\\\char ECA2 THINF_ACCENT_L                                                         \\n\\\\char ECA3 THINF_ACCENT_XL \\n\\n\\\\char ECB0 THINF_DOT_XS        \\n\\\\char ECB1 THINF_DOT_S           \\n\\\\char ECB2 THINF_DOT_L           \\n\\\\char ECB3 THINF_DOT_XL\\n\\\\char ECBF LAMBE_MARK_DOT  \\n\\n\\\\char ECC0 THINF_CURL_XS          \\n\\\\char ECC1 THINF_CURL_S           \\n\\\\char ECC2 THINF_CURL_L           \\n\\\\char ECC3 THINF_CURL_XL     \\n \\n\\\\char ECD0 THINF_CURL_INV_XS                                \\n\\\\char ECD1 THINF_CURL_INV_S                                                            \\n\\\\char ECD2 THINF_CURL_INV_L                                \\n\\\\char ECD3 THINF_CURL_INV_XL \\n\\n\\\\** Double tehtar **\\\\\\n\\n\\\\char ECE0 A_TEHTA_DOUBLE_XS\\n\\\\char ECE1 A_TEHTA_DOUBLE_S \\n\\\\char ECE2 A_TEHTA_DOUBLE_L \\n\\\\char ECE3 A_TEHTA_DOUBLE_XL\\n\\n\\\\char ECF0 E_TEHTA_DOUBLE_XS\\n\\\\char ECF1 E_TEHTA_DOUBLE_S \\n\\\\char ECF2 E_TEHTA_DOUBLE_L \\n\\\\char ECF3 E_TEHTA_DOUBLE_XL\\n\\n\\\\char ED00 THSUP_DDOT_XS    Y_TEHTA_XS    I_TEHTA_DOUBLE_XS         \\n\\\\char ED01 THSUP_DDOT_S     Y_TEHTA_S     I_TEHTA_DOUBLE_S       \\n\\\\char ED02 THSUP_DDOT_L     Y_TEHTA_L     I_TEHTA_DOUBLE_L          \\n\\\\char ED03 THSUP_DDOT_XL    Y_TEHTA_XL    I_TEHTA_DOUBLE_XL     \\n\\n\\\\char ED10 O_TEHTA_DOUBLE_XS\\n\\\\char ED11 O_TEHTA_DOUBLE_S \\n\\\\char ED12 O_TEHTA_DOUBLE_L \\n\\\\char ED13 O_TEHTA_DOUBLE_XL \\n\\n\\\\char ED20 U_TEHTA_DOUBLE_XS\\n\\\\char ED21 U_TEHTA_DOUBLE_S \\n\\\\char ED22 U_TEHTA_DOUBLE_L \\n\\\\char ED23 U_TEHTA_DOUBLE_XL\\n\\n\\\\** Double inf tehtar **\\\\\\n\\n\\\\char ED30 THINF_DSTROKE_XS                               \\n\\\\char ED31 THINF_DSTROKE_S       \\n\\\\char ED32 THINF_DSTROKE_L                         \\n\\\\char ED33 THINF_DSTROKE_XL \\n\\\\char ED3F LAMBE_MARK_DSTROKE \\n\\n\\\\char ED40 THINF_DDOT_XS          \\n\\\\char ED41 THINF_DDOT_S           \\n\\\\char ED42 THINF_DDOT_L           \\n\\\\char ED43 THINF_DDOT_XL \\n\\\\char ED4F LAMBE_MARK_DDOT    \\n\\n\\\\** Labializer **\\\\\\n\\n\\\\char ED50 WA_TEHTA_XS           \\n\\\\char ED51 WA_TEHTA_S           \\n\\\\char ED52 WA_TEHTA_L           \\n\\\\char ED53 WA_TEHTA_XL  \\n\\n\\\\** Thinnas **\\\\\\n\\n\\\\char ED60 THINF_STROKE_XS                                 \\n\\\\char ED61 THINF_STROKE_S                                 \\n\\\\char ED62 THINF_STROKE_L                                 \\n\\\\char ED63 THINF_STROKE_XL    \\n\\n\\\\** MSB Marker **\\\\\\n\\n\\\\char ED70 TH_SUB_CIRC_XS         \\n\\\\char ED71 TH_SUB_CIRC_S           \\n\\\\char ED72 TH_SUB_CIRC_L                                  \\n\\\\char ED73 TH_SUB_CIRC_XL  \\n\\n\\\\** Other UP Tehtar **\\\\\\n\\n\\\\char ED80 A_TEHTA_INV_XS \\n\\\\char ED81 A_TEHTA_INV_S         \\n\\\\char ED82 A_TEHTA_INV_L         \\n\\\\char ED83 A_TEHTA_INV_XL    \\n\\n\\\\char ED90 THSUP_TICK_INV_XS    A_TEHTA_CIRCUM_XS       \\n\\\\char ED91 THSUP_TICK_INV_S     A_TEHTA_CIRCUM_S        \\n\\\\char ED92 THSUP_TICK_INV_L     A_TEHTA_CIRCUM_L         \\n\\\\char ED93 THSUP_TICK_INV_XL    A_TEHTA_CIRCUM_XL   \\n\\n\\\\char EDA0 THSUP_TICK_XS          \\n\\\\char EDA1 THSUP_TICK_S           \\n\\\\char EDA2 THSUP_TICK_L           \\n\\\\char EDA3 THSUP_TICK_XL     \\n                                                          \\n\\\\char EDB0 THSUP_LAMBDA_XS         \\n\\\\char EDB1 THSUP_LAMBDA_S          \\n\\\\char EDB2 THSUP_LAMBDA_L          \\n\\\\char EDB3 THSUP_LAMBDA_XL  \\n\\n\\\\char EDC0 E_TEHTA_GRAVE_XS\\n\\\\char EDC1 E_TEHTA_GRAVE_S \\n\\\\char EDC2 E_TEHTA_GRAVE_L \\n\\\\char EDC3 E_TEHTA_GRAVE_XL \\n\\n\\\\char EDD0 BREVE_TEHTA_XS\\n\\\\char EDD1 BREVE_TEHTA_S\\n\\\\char EDD2 BREVE_TEHTA_L\\n\\\\char EDD3 BREVE_TEHTA_XL\\n\\n\\\\char EDE0 E_TEHTA_GRAVE_INF_XS\\n\\\\char EDE1 E_TEHTA_GRAVE_INF_S\\n\\\\char EDE2 E_TEHTA_GRAVE_INF_L\\n\\\\char EDE3 E_TEHTA_GRAVE_INF_XL\\n\\n\\n\\\\** Ligatured results are mapped here **\\\\\\n\\\\char e800 AHA_TINCO\\n\\\\char e801 HWESTA_TINCO\\n\\\\char e802 ANCA_CLOSED SILME_AHA\\n\\\\char e900 LAMBE_LIG\\n\\n\\n\\\\** The following virtual chars are used to handle tehtar (& the like) multiple version chosing **\\\\\\n\\\\** It could be avoided with modern fonts with gsub/gpos tables for ligatures and diacritics **\\\\\\n\\\\** placement **\\\\\\n\\n\\\\** DUMPED FROM THE VIRTUAL CHARS TOOL **\\\\\\n\\n\\\\beg virtual A_TEHTA\\n  \\\\class A_TEHTA_XS TELCO ARA HALLA HYARMEN\\n  \\\\class A_TEHTA_S SULE FORMEN TW_EXT_11 TW_EXT_12 HARP_SHAPED AHA_TINCO HWESTA_TINCO NUM_4 NUM_8\\n  \\\\class A_TEHTA_L TINCO PARMA CALMA QUESSE AHA HWESTA ORE VALA ANNA VILYA TW_EXT_13 TW_EXT_14 ROMEN ARDA LAMBE ALDA SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA YANTA URE OSSE VALA_W_HOOK SHOOK_BEAUTIFUL NUM_0 NUM_1 NUM_5 NUM_7 NUM_10 NUM_11\\n  \\\\class A_TEHTA_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 SILME ESSE HWESTA_SINDARINWA VAIA MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_6 NUM_9\\n\\\\end\\n\\n\\\\beg virtual A_TEHTA_CIRCUM\\n  \\\\class A_TEHTA_CIRCUM_XS TELCO ARA HALLA HYARMEN\\n  \\\\class A_TEHTA_CIRCUM_S SULE FORMEN TW_EXT_11 TW_EXT_12 HARP_SHAPED AHA_TINCO HWESTA_TINCO NUM_0 NUM_4 NUM_8\\n  \\\\class A_TEHTA_CIRCUM_L TINCO PARMA CALMA QUESSE AHA HWESTA ORE VALA ANNA VILYA TW_EXT_13 TW_EXT_14 ROMEN ARDA LAMBE ALDA SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA YANTA URE OSSE VALA_W_HOOK SHOOK_BEAUTIFUL NUM_1 NUM_2 NUM_5 NUM_7 NUM_10 NUM_11\\n  \\\\class A_TEHTA_CIRCUM_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 SILME ESSE HWESTA_SINDARINWA VAIA MALTA_W_HOOK ANCA_CLOSED NUM_3 NUM_6 NUM_9\\n\\\\end\\n\\n\\\\beg virtual A_TEHTA_REVERSED\\n  \\\\class A_TEHTA_INV_XS TELCO ARA HALLA HYARMEN\\n  \\\\class A_TEHTA_INV_S SULE FORMEN TW_EXT_11 TW_EXT_12 HARP_SHAPED AHA_TINCO HWESTA_TINCO NUM_4 NUM_8\\n  \\\\class A_TEHTA_INV_L TINCO PARMA CALMA QUESSE AHA HWESTA ORE VALA ANNA VILYA TW_EXT_13 TW_EXT_14 ROMEN ARDA LAMBE ALDA SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA YANTA URE OSSE VALA_W_HOOK SHOOK_BEAUTIFUL NUM_0 NUM_1 NUM_5 NUM_7 NUM_10 NUM_11\\n  \\\\class A_TEHTA_INV_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 SILME ESSE HWESTA_SINDARINWA VAIA MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_6 NUM_9\\n\\\\end\\n\\n\\\\beg virtual A_TEHTA_CIRCUM_REVERSED TEHTA_BREVE\\n  \\\\class THSUP_TICK_XS TELCO ARA HALLA HYARMEN\\n  \\\\class THSUP_TICK_S SULE FORMEN TW_EXT_11 TW_EXT_12 HARP_SHAPED AHA_TINCO HWESTA_TINCO NUM_0 NUM_4 NUM_8\\n  \\\\class THSUP_TICK_L TINCO PARMA CALMA QUESSE AHA HWESTA ORE VALA ANNA VILYA TW_EXT_13 TW_EXT_14 ROMEN ARDA LAMBE ALDA SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA YANTA URE OSSE VALA_W_HOOK SHOOK_BEAUTIFUL NUM_1 NUM_5 NUM_7 NUM_10 NUM_11\\n  \\\\class THSUP_TICK_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 SILME ESSE HWESTA_SINDARINWA VAIA MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_6 NUM_9\\n\\\\end\\n\\n\\\\beg virtual E_TEHTA\\n  \\\\class E_TEHTA_XS TELCO ARA HALLA HYARMEN\\n  \\\\class E_TEHTA_S SULE FORMEN TW_EXT_11 TW_EXT_12 HARP_SHAPED AHA_TINCO HWESTA_TINCO NUM_0 NUM_4 NUM_8\\n  \\\\class E_TEHTA_L TINCO PARMA CALMA QUESSE AHA HWESTA ORE VALA ANNA VILYA TW_EXT_13 TW_EXT_14 ROMEN ARDA LAMBE ALDA SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA YANTA URE OSSE VALA_W_HOOK SHOOK_BEAUTIFUL NUM_1 NUM_5 NUM_7 NUM_10 NUM_11\\n  \\\\class E_TEHTA_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 SILME ESSE HWESTA_SINDARINWA VAIA MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_6 NUM_9\\n\\\\end\\n\\n\\\\beg virtual E_TEHTA_GRAVE\\n  \\\\class E_TEHTA_GRAVE_XS TELCO ARA HALLA HYARMEN\\n  \\\\class E_TEHTA_GRAVE_S SULE FORMEN TW_EXT_11 TW_EXT_12 HARP_SHAPED AHA_TINCO HWESTA_TINCO NUM_4 NUM_8\\n  \\\\class E_TEHTA_GRAVE_L TINCO PARMA CALMA QUESSE AHA HWESTA ORE VALA ANNA VILYA TW_EXT_13 TW_EXT_14 ROMEN ARDA LAMBE ALDA SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA YANTA URE OSSE VALA_W_HOOK SHOOK_BEAUTIFUL NUM_0 NUM_1 NUM_5 NUM_7 NUM_10 NUM_11\\n  \\\\class E_TEHTA_GRAVE_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 SILME ESSE HWESTA_SINDARINWA VAIA MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_6 NUM_9\\n\\\\end\\n\\n\\\\beg virtual I_TEHTA\\n  \\\\class I_TEHTA_XS TELCO ARA HALLA HYARMEN\\n  \\\\class I_TEHTA_S SULE FORMEN TW_EXT_11 TW_EXT_12 HARP_SHAPED AHA_TINCO HWESTA_TINCO NUM_4 NUM_8\\n  \\\\class I_TEHTA_L TINCO PARMA CALMA QUESSE AHA HWESTA ORE VALA ANNA VILYA TW_EXT_13 TW_EXT_14 ROMEN ARDA LAMBE ALDA SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA YANTA URE OSSE VALA_W_HOOK SHOOK_BEAUTIFUL NUM_0 NUM_1 NUM_5 NUM_7 NUM_10 NUM_11\\n  \\\\class I_TEHTA_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 SILME ESSE HWESTA_SINDARINWA VAIA MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_6 NUM_9\\n\\\\end\\n\\n\\\\beg virtual O_TEHTA\\n  \\\\class O_TEHTA_XS TELCO ARA HALLA HYARMEN\\n  \\\\class O_TEHTA_S SULE FORMEN TW_EXT_11 TW_EXT_12 HARP_SHAPED AHA_TINCO HWESTA_TINCO NUM_4 NUM_8\\n  \\\\class O_TEHTA_L TINCO PARMA CALMA QUESSE AHA HWESTA ORE VALA ANNA VILYA TW_EXT_13 TW_EXT_14 ROMEN ARDA LAMBE ALDA SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA YANTA URE OSSE VALA_W_HOOK SHOOK_BEAUTIFUL NUM_0 NUM_1 NUM_5 NUM_7 NUM_10 NUM_11\\n  \\\\class O_TEHTA_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 SILME ESSE HWESTA_SINDARINWA VAIA MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_6 NUM_9\\n\\\\end\\n\\n\\\\beg virtual U_TEHTA\\n  \\\\class U_TEHTA_XS TELCO ARA HALLA HYARMEN\\n  \\\\class U_TEHTA_S SULE FORMEN TW_EXT_11 TW_EXT_12 HARP_SHAPED AHA_TINCO HWESTA_TINCO NUM_4 NUM_8\\n  \\\\class U_TEHTA_L TINCO PARMA CALMA QUESSE AHA HWESTA ORE VALA ANNA VILYA TW_EXT_13 TW_EXT_14 ROMEN ARDA LAMBE ALDA SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA YANTA URE OSSE VALA_W_HOOK SHOOK_BEAUTIFUL NUM_0 NUM_1 NUM_5 NUM_7 NUM_10 NUM_11\\n  \\\\class U_TEHTA_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 SILME ESSE HWESTA_SINDARINWA VAIA MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_6 NUM_9\\n\\\\end\\n\\n\\\\beg virtual WA_TEHTA SEV_TEHTA\\n  \\\\class WA_TEHTA_XS TELCO ARA HALLA HYARMEN\\n  \\\\class WA_TEHTA_S SULE FORMEN TW_EXT_11 TW_EXT_12 HARP_SHAPED AHA_TINCO HWESTA_TINCO NUM_4 NUM_8\\n  \\\\class WA_TEHTA_L TINCO PARMA CALMA QUESSE AHA HWESTA ORE VALA ANNA VILYA TW_EXT_13 TW_EXT_14 ROMEN ARDA LAMBE ALDA SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA YANTA URE OSSE VALA_W_HOOK SHOOK_BEAUTIFUL NUM_0 NUM_1 NUM_5 NUM_7 NUM_10 NUM_11\\n  \\\\class WA_TEHTA_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 SILME ESSE HWESTA_SINDARINWA VAIA MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_6 NUM_9\\n\\\\end\\n\\n\\\\beg virtual A_TEHTA_DOUBLE\\n  \\\\class A_TEHTA_DOUBLE_XS TELCO ARA HALLA HYARMEN HARP_SHAPED\\n  \\\\class A_TEHTA_DOUBLE_S SULE FORMEN TW_EXT_11 TW_EXT_12 AHA_TINCO HWESTA_TINCO NUM_4 NUM_8\\n  \\\\class A_TEHTA_DOUBLE_L TINCO PARMA CALMA QUESSE AHA HWESTA ORE VALA ANNA VILYA TW_EXT_13 TW_EXT_14 ROMEN ARDA LAMBE ALDA SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA YANTA URE OSSE VALA_W_HOOK SHOOK_BEAUTIFUL NUM_0 NUM_1 NUM_5 NUM_7 NUM_10 NUM_11\\n  \\\\class A_TEHTA_DOUBLE_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 SILME ESSE HWESTA_SINDARINWA VAIA MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_6 NUM_9\\n\\\\end\\n\\n\\\\beg virtual E_TEHTA_DOUBLE\\n  \\\\class E_TEHTA_DOUBLE_XS TELCO ARA HALLA HYARMEN HARP_SHAPED\\n  \\\\class E_TEHTA_DOUBLE_S SULE FORMEN TW_EXT_11 TW_EXT_12 AHA_TINCO HWESTA_TINCO\\n  \\\\class E_TEHTA_DOUBLE_L TINCO PARMA CALMA QUESSE AHA HWESTA ORE VALA ANNA VILYA TW_EXT_13 TW_EXT_14 ROMEN ARDA LAMBE ALDA SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA YANTA URE OSSE VALA_W_HOOK SHOOK_BEAUTIFUL NUM_0 NUM_1 NUM_4 NUM_8 NUM_10 NUM_11\\n  \\\\class E_TEHTA_DOUBLE_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 SILME ESSE HWESTA_SINDARINWA VAIA MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_5 NUM_6 NUM_7 NUM_9\\n\\\\end\\n\\n\\\\beg virtual I_TEHTA_DOUBLE Y_TEHTA\\n  \\\\class I_TEHTA_DOUBLE_XS TELCO ARA HALLA HYARMEN HARP_SHAPED\\n  \\\\class I_TEHTA_DOUBLE_S SULE FORMEN TW_EXT_11 TW_EXT_12 AHA_TINCO HWESTA_TINCO NUM_4 NUM_8\\n  \\\\class I_TEHTA_DOUBLE_L TINCO PARMA CALMA QUESSE AHA HWESTA ORE VALA ANNA VILYA TW_EXT_13 TW_EXT_14 ROMEN ARDA LAMBE ALDA SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA YANTA URE OSSE VALA_W_HOOK SHOOK_BEAUTIFUL NUM_0 NUM_1 NUM_5 NUM_10 NUM_11\\n  \\\\class I_TEHTA_DOUBLE_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 SILME ESSE HWESTA_SINDARINWA VAIA MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_6 NUM_7 NUM_9\\n\\\\end\\n\\n\\\\beg virtual O_TEHTA_DOUBLE\\n  \\\\class O_TEHTA_DOUBLE_XS TELCO ARA HALLA HYARMEN HARP_SHAPED\\n  \\\\class O_TEHTA_DOUBLE_S SULE FORMEN TW_EXT_11 TW_EXT_12 AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_4 NUM_8\\n  \\\\class O_TEHTA_DOUBLE_L TINCO PARMA CALMA QUESSE AHA HWESTA ORE VALA ANNA VILYA TW_EXT_13 TW_EXT_14 ROMEN ARDA LAMBE ALDA SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA YANTA URE OSSE VALA_W_HOOK SHOOK_BEAUTIFUL NUM_2 NUM_5 NUM_7 NUM_9 NUM_10 NUM_11\\n  \\\\class O_TEHTA_DOUBLE_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 SILME ESSE HWESTA_SINDARINWA VAIA MALTA_W_HOOK ANCA_CLOSED NUM_3 NUM_6\\n\\\\end\\n\\n\\\\beg virtual U_TEHTA_DOUBLE\\n  \\\\class U_TEHTA_DOUBLE_XS TELCO ARA HALLA HYARMEN HARP_SHAPED\\n  \\\\class U_TEHTA_DOUBLE_S SULE FORMEN TW_EXT_11 TW_EXT_12 AHA_TINCO HWESTA_TINCO\\n  \\\\class U_TEHTA_DOUBLE_L TINCO PARMA CALMA QUESSE AHA HWESTA ORE VALA ANNA VILYA TW_EXT_13 TW_EXT_14 ROMEN ARDA LAMBE ALDA SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE_NUQUERNA YANTA URE OSSE VALA_W_HOOK SHOOK_BEAUTIFUL NUM_0 NUM_1 NUM_4 NUM_5 NUM_8 NUM_10 NUM_11\\n  \\\\class U_TEHTA_DOUBLE_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 SILME ESSE HWESTA_SINDARINWA VAIA MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_6 NUM_7 NUM_9\\n\\\\end\\n\\n\\\\beg virtual A_TEHTA_INF\\n  \\\\class THINF_TDOT_XS TELCO ARA HALLA ROMEN ARDA SILME_NUQUERNA HARP_SHAPED\\n  \\\\class THINF_TDOT_S TINCO PARMA TW_EXT_11 TW_EXT_12 SHOOK_BEAUTIFUL AHA_TINCO HWESTA_TINCO NUM_4\\n  \\\\class THINF_TDOT_L SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA LAMBE ALDA SILME SILME_NUQUERNA_ALT ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA YANTA URE OSSE NUM_0 NUM_1 NUM_7 NUM_8 NUM_10 NUM_11\\n  \\\\class THINF_TDOT_XL CALMA QUESSE ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_13 TW_EXT_14 TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 VAIA MALTA_W_HOOK VALA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_5 NUM_6 NUM_9\\n\\\\end\\n\\n\\\\beg virtual E_TEHTA_INF\\n  \\\\class THINF_ACCENT_XS TELCO ARA HALLA ROMEN ARDA SILME_NUQUERNA HARP_SHAPED\\n  \\\\class THINF_ACCENT_S TINCO PARMA TW_EXT_11 TW_EXT_12 SHOOK_BEAUTIFUL AHA_TINCO HWESTA_TINCO\\n  \\\\class THINF_ACCENT_L SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA LAMBE ALDA SILME SILME_NUQUERNA_ALT ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA YANTA URE OSSE NUM_0 NUM_1 NUM_4 NUM_7 NUM_8 NUM_10 NUM_11\\n  \\\\class THINF_ACCENT_XL CALMA QUESSE ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_13 TW_EXT_14 TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 VAIA MALTA_W_HOOK VALA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_5 NUM_6 NUM_9\\n\\\\end\\n\\n\\\\beg virtual E_TEHTA_GRAVE_INF\\n  \\\\class E_TEHTA_GRAVE_INF_XS TELCO ARA HALLA HARP_SHAPED\\n  \\\\class E_TEHTA_GRAVE_INF_S CALMA QUESSE SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA TW_EXT_13 TW_EXT_14 LAMBE ALDA SILME_NUQUERNA_ALT ESSE ESSE_NUQUERNA HWESTA_SINDARINWA YANTA NUM_2 NUM_7 NUM_8\\n  \\\\class E_TEHTA_GRAVE_INF_L TINCO PARMA TW_EXT_11 TW_EXT_12 ROMEN ARDA SILME SILME_NUQUERNA HYARMEN URE OSSE SHOOK_BEAUTIFUL AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_4 NUM_10 NUM_11\\n  \\\\class E_TEHTA_GRAVE_INF_XL ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 VAIA MALTA_W_HOOK VALA_W_HOOK ANCA_CLOSED NUM_3 NUM_5 NUM_6 NUM_9\\n\\\\end\\n\\n\\\\beg virtual CIRC_TEHTA_INF\\n  \\\\class TH_SUB_CIRC_XS TELCO ARA HALLA ROMEN ARDA SILME_NUQUERNA HARP_SHAPED\\n  \\\\class TH_SUB_CIRC_S TINCO PARMA TW_EXT_11 TW_EXT_12 SHOOK_BEAUTIFUL AHA_TINCO HWESTA_TINCO\\n  \\\\class TH_SUB_CIRC_L SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA LAMBE ALDA SILME SILME_NUQUERNA_ALT ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA YANTA URE OSSE NUM_0 NUM_1 NUM_4 NUM_7 NUM_8 NUM_10 NUM_11\\n  \\\\class TH_SUB_CIRC_XL CALMA QUESSE ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_13 TW_EXT_14 TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 VAIA MALTA_W_HOOK VALA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_5 NUM_6 NUM_9\\n\\\\end\\n\\n\\\\beg virtual THINNAS  THINF_STROKE\\n  \\\\class THINF_STROKE_XS TELCO ARA HALLA ROMEN ARDA SILME_NUQUERNA HARP_SHAPED\\n  \\\\class THINF_STROKE_S TINCO PARMA TW_EXT_11 TW_EXT_12 SHOOK_BEAUTIFUL AHA_TINCO HWESTA_TINCO\\n  \\\\class THINF_STROKE_L SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA LAMBE ALDA SILME SILME_NUQUERNA_ALT ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA YANTA URE OSSE NUM_0 NUM_1 NUM_4 NUM_7 NUM_8 NUM_10 NUM_11\\n  \\\\class THINF_STROKE_XL CALMA QUESSE ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_13 TW_EXT_14 TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 VAIA MALTA_W_HOOK VALA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_5 NUM_6 NUM_9\\n\\\\end\\n\\n\\\\beg virtual O_TEHTA_INF\\n  \\\\class THINF_CURL_XS TELCO ARA HALLA ROMEN ARDA SILME_NUQUERNA HARP_SHAPED\\n  \\\\class THINF_CURL_S TINCO PARMA TW_EXT_11 TW_EXT_12 SHOOK_BEAUTIFUL AHA_TINCO HWESTA_TINCO\\n  \\\\class THINF_CURL_L SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA LAMBE ALDA SILME SILME_NUQUERNA_ALT ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA YANTA URE OSSE NUM_0 NUM_1 NUM_4 NUM_5 NUM_7 NUM_8 NUM_10 NUM_11\\n  \\\\class THINF_CURL_XL CALMA QUESSE ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_13 TW_EXT_14 TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 VAIA MALTA_W_HOOK VALA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_6 NUM_9\\n\\\\end\\n\\n\\\\beg virtual U_TEHTA_INF\\n  \\\\class THINF_CURL_INV_XS TELCO ARA HALLA ROMEN ARDA SILME_NUQUERNA HARP_SHAPED\\n  \\\\class THINF_CURL_INV_S TINCO PARMA TW_EXT_11 TW_EXT_12 SHOOK_BEAUTIFUL AHA_TINCO HWESTA_TINCO\\n  \\\\class THINF_CURL_INV_L SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA LAMBE ALDA SILME SILME_NUQUERNA_ALT ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA YANTA URE OSSE NUM_0 NUM_1 NUM_4 NUM_5 NUM_7 NUM_8 NUM_10 NUM_11\\n  \\\\class THINF_CURL_INV_XL CALMA QUESSE ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_13 TW_EXT_14 TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 VAIA MALTA_W_HOOK VALA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_6 NUM_9\\n\\\\end\\n\\n\\\\beg virtual PALATAL_SIGN I_TEHTA_DOUBLE_INF Y_TEHTA_INF\\n  \\\\class THINF_DDOT_XS TELCO ARA HALLA ROMEN ARDA SILME_NUQUERNA HARP_SHAPED\\n  \\\\class THINF_DDOT_S TINCO PARMA TW_EXT_11 TW_EXT_12 SHOOK_BEAUTIFUL AHA_TINCO HWESTA_TINCO\\n  \\\\class THINF_DDOT_L SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA SILME SILME_NUQUERNA_ALT ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA YANTA URE OSSE NUM_0 NUM_1 NUM_4 NUM_5 NUM_7 NUM_8 NUM_10 NUM_11\\n  \\\\class THINF_DDOT_XL CALMA QUESSE ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_13 TW_EXT_14 TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 VAIA MALTA_W_HOOK VALA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_6 NUM_9\\n  \\\\class LAMBE_MARK_DDOT LAMBE ALDA\\n\\\\end\\n\\n\\\\beg virtual E_TEHTA_DOUBLE_INF GEMINATE_DOUBLE\\n  \\\\class THINF_DSTROKE_XS TELCO ARA HALLA ROMEN ARDA SILME_NUQUERNA HARP_SHAPED\\n  \\\\class THINF_DSTROKE_S TINCO PARMA TW_EXT_11 TW_EXT_12 SHOOK_BEAUTIFUL AHA_TINCO HWESTA_TINCO\\n  \\\\class THINF_DSTROKE_L SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA SILME SILME_NUQUERNA_ALT ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA YANTA URE OSSE NUM_0 NUM_1 NUM_4 NUM_7 NUM_8 NUM_10 NUM_11\\n  \\\\class THINF_DSTROKE_XL CALMA QUESSE ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_13 TW_EXT_14 TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 VAIA MALTA_W_HOOK VALA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_5 NUM_6 NUM_9\\n  \\\\class LAMBE_MARK_DSTROKE LAMBE ALDA\\n\\\\end\\n\\n\\\\beg virtual UNUTIXE I_TEHTA_INF NO_VOWEL_DOT\\n  \\\\class THINF_DOT_XS TELCO ARA HALLA ROMEN ARDA SILME_NUQUERNA HARP_SHAPED\\n  \\\\class THINF_DOT_S TINCO PARMA TW_EXT_11 TW_EXT_12 SHOOK_BEAUTIFUL AHA_TINCO HWESTA_TINCO\\n  \\\\class THINF_DOT_L SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA SILME SILME_NUQUERNA_ALT ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA YANTA URE OSSE NUM_0 NUM_1 NUM_4 NUM_7 NUM_8 NUM_10 NUM_11\\n  \\\\class THINF_DOT_XL CALMA QUESSE ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_13 TW_EXT_14 TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 VAIA MALTA_W_HOOK VALA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_5 NUM_6 NUM_9\\n  \\\\class LAMBE_MARK_DOT LAMBE ALDA\\n\\\\end\\n\\n\\\\beg virtual GEMINATE_SIGN\\n  \\\\class DASH_INF_XS TELCO ARA HALLA\\n  \\\\class DASH_INF_S TINCO PARMA CALMA QUESSE SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA TW_EXT_11 TW_EXT_12 TW_EXT_13 TW_EXT_14 ROMEN ARDA SILME SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA YANTA URE OSSE VALA_W_HOOK SHOOK_BEAUTIFUL HARP_SHAPED AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_4 NUM_7 NUM_8 NUM_10 NUM_11\\n  \\\\class DASH_INF_L ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 VAIA MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_5 NUM_6 NUM_9\\n  \\\\class LAMBE_MARK_DASH LAMBE ALDA\\n\\\\end\\n\\n\\\\beg virtual GEMINATE_SIGN_TILD\\n  \\\\class TILD_INF_XS TELCO ARA HALLA\\n  \\\\class TILD_INF_S TINCO PARMA CALMA QUESSE SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA TW_EXT_11 TW_EXT_12 TW_EXT_13 TW_EXT_14 ROMEN ARDA SILME SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA YANTA URE OSSE VALA_W_HOOK SHOOK_BEAUTIFUL HARP_SHAPED AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_4 NUM_7 NUM_8 NUM_10 NUM_11\\n  \\\\class TILD_INF_L ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 VAIA MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_5 NUM_6 NUM_9\\n  \\\\class LAMBE_MARK_TILD LAMBE ALDA\\n\\\\end\\n\\n\\\\beg virtual NASALIZE_SIGN\\n  \\\\class DASH_SUP_XS TELCO ARA HALLA\\n  \\\\class DASH_SUP_S TINCO PARMA CALMA QUESSE SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA TW_EXT_11 TW_EXT_12 TW_EXT_13 TW_EXT_14 ROMEN ARDA LAMBE ALDA SILME SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA YANTA URE OSSE VALA_W_HOOK SHOOK_BEAUTIFUL HARP_SHAPED AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_4 NUM_7 NUM_8 NUM_10 NUM_11\\n  \\\\class DASH_SUP_L ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 VAIA MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_5 NUM_6 NUM_9\\n\\\\end\\n\\n\\\\beg virtual NASALIZE_SIGN_TILD\\n  \\\\class TILD_SUP_XS TELCO ARA HALLA\\n  \\\\class TILD_SUP_S TINCO PARMA CALMA QUESSE SULE FORMEN AHA HWESTA ORE VALA ANNA VILYA TW_EXT_11 TW_EXT_12 TW_EXT_13 TW_EXT_14 ROMEN ARDA LAMBE ALDA SILME SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE ESSE_NUQUERNA HYARMEN HWESTA_SINDARINWA YANTA URE OSSE VALA_W_HOOK SHOOK_BEAUTIFUL HARP_SHAPED AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_4 NUM_5 NUM_7 NUM_8 NUM_10 NUM_11\\n  \\\\class TILD_SUP_L ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 VAIA MALTA_W_HOOK ANCA_CLOSED NUM_2 NUM_3 NUM_6 NUM_9\\n\\\\end\\n\\n\\\\beg virtual SARINCE\\n  \\\\class SHOOK_LEFT_L CALMA QUESSE ANGA UNGWE TW_EXT_13 TW_EXT_14 TW_EXT_23 TW_EXT_24 HWESTA_SINDARINWA\\n  \\\\class SHOOK_RIGHT_L TELCO ARA HALLA TINCO PARMA ANDO UMBAR SULE FORMEN AHA HWESTA ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME ORE VALA ANNA VILYA TW_EXT_11 TW_EXT_12 TW_EXT_21 TW_EXT_22 ROMEN ARDA LAMBE ALDA SILME SILME_NUQUERNA SILME_NUQUERNA_ALT ESSE ESSE_NUQUERNA HYARMEN YANTA URE OSSE VAIA MALTA_W_HOOK VALA_W_HOOK SHOOK_BEAUTIFUL ANCA_CLOSED HARP_SHAPED AHA_TINCO HWESTA_TINCO NUM_0 NUM_1 NUM_2 NUM_3 NUM_4 NUM_5 NUM_6 NUM_7 NUM_8 NUM_9 NUM_10 NUM_11\\n\\\\end\\n\"\nGlaemscribe.resource_manager.raw_charsets[\"tengwar_telcontar\"] = \"\\\\**\\n\\nGlǽmscribe (also written Glaemscribe) is a software dedicated to\\nthe transcription of texts between writing systems, and more \\nspecifically dedicated to the transcription of J.R.R. Tolkien\\'s \\ninvented languages to some of his devised writing systems.\\n\\nCopyright (C) 2015 Benjamin Babut (Talagan).\\n\\nThis program is free software: you can redistribute it and/or modify\\nit under the terms of the GNU Affero General Public License as published by\\nthe Free Software Foundation, either version 3 of the License, or\\nany later version.\\n\\nThis program is distributed in the hope that it will be useful,\\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\nGNU Affero General Public License for more details.\\n\\nYou should have received a copy of the GNU Affero General Public License\\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\\n\\n**\\\\\\n\\n\\\\** Charset for the FreeTelcontar font. Basically this is the same one as freemono **\\\\ \\n\\n\\\\version 0.0.2\\n\\n\\\\beg changelog\\n  \\\\entry \\\"0.0.1\\\" \\\"Copy pasted freemono charset\\\"\\n  \\\\entry \\\"0.0.2\\\" \\\"Added ELVISH_PAREN tokien, reworked sarince token names.\\\"\\n\\\\end\\n\\n\\\\char 20 SPACE\\n\\\\char a0 NBSP\\n\\n\\\\** PUSTAR, take them in unicode not in personnal use (deprecation) **\\\\\\n\\\\char 2e31 PUNCT_DOT\\n\\\\char   3a PUNCT_DDOT\\n\\\\char 205D PUNCT_TDOT PUSTA_3\\n\\\\char 2058 PUSTA_4\\n\\\\char 10FB PUSTA_4_HALFED\\n\\\\char 2E2C PUSTA_4_SQUARED\\n\\\\char 2E2D PUSTA_5\\n\\n\\\\char e000  TW_11 TINCO     \\n\\\\char e001  TW_12 PARMA\\n\\\\char e002  TW_13 CALMA\\n\\\\char e003  TW_14 QUESSE\\n\\n\\\\char e004  TW_21 ANDO  \\n\\\\char e005  TW_22 UMBAR\\n\\\\char e006  TW_23 ANGA  \\n\\\\char e007  TW_24 UNGWE\\n      \\n\\\\char e008  TW_31 SULE THULE\\n\\\\char e009  TW_32 FORMEN\\n\\\\char e00A  TW_33 AHA  \\n\\\\char e00B  TW_34 HWESTA\\n\\n\\\\char e00C  TW_41 ANTO\\n\\\\char e00D  TW_42 AMPA\\n\\\\char e00E  TW_43 ANCA\\n\\\\char e00F  TW_44 UNQUE\\n\\n\\\\char e010  TW_51 NUMEN \\n\\\\char e011  TW_52 MALTA\\n\\\\char e012  TW_53 NOLDO\\n\\\\char e013  TW_54 NWALME\\n\\n\\\\char e014  TW_61 ORE\\n\\\\char e015  TW_62 VALA\\n\\\\char e016  TW_63 ANNA\\n\\\\char e017  TW_64 VILYA\\n\\n\\\\char e018  TW_EXT_11 TINCO_EXT SULE_EXT THULE_EXT\\n\\\\char e019  TW_EXT_12 PARMA_EXT FORMEN_EXT \\n\\\\char e01A  TW_EXT_13 CALMA_EXT AHA_EXT\\n\\\\char e01B  TW_EXT_14 QUESSE_EXT HWESTA_EXT\\n        \\n\\\\char e01C  TW_EXT_21 ANDO_EXT ANTO_EXT \\n\\\\char e01D  TW_EXT_22 UMBAR_EXT AMPA_EXT\\n\\\\char e01E  TW_EXT_23 ANGA_EXT ANCA_EXT\\n\\\\char e01F  TW_EXT_24 UNGWE_EXT UNQUE_EXT\\n\\n\\\\char e020  TW_71 ROMEN\\n\\\\char e021  TW_72 ARDA\\n\\\\char e022  TW_73 LAMBE\\n\\\\char e023  TW_74 ALDA \\n\\n\\\\char e024  TW_81 SILME \\n\\\\** Unfortunately, monotengwar is missing silme nuquerna used for y in beleriand **\\\\\\n\\\\char e025  TW_82 SILME_NUQUERNA SILME_NUQUERNA_ALT\\n\\\\char e026  TW_83 ESSE\\n\\\\char e027  TW_84 ESSE_NUQUERNA\\n\\n\\\\char e028  TW_91 HYARMEN \\n\\\\char e029  TW_92 HWESTA_SINDARINWA \\n\\\\char e02A  TW_93 YANTA\\n\\\\char e02B  TW_94 URE\\n\\n\\\\char e02C  ARA\\n\\\\char e02D  HALLA\\n\\\\char e02E  TELCO\\n\\\\char e02F  ?      \\n\\n\\\\char e030  REVERSED_OSSE\\n\\\\char e031  BOMBADIL_W \\n\\\\char e032  OSSE\\n\\\\char e033  ?\\n\\n\\\\char e034  LIGATING_SHORT_CARRIER\\n\\\\char e035  ?\\n\\\\char e036  ANNA_OPEN\\n\\\\char e037  CHRISTOPHER_QU\\n\\n\\\\char e038  ?\\n\\\\char e039  BOMBADIL_HW\\n\\\\char e03A  TW_MH MALTA_W_HOOK \\n\\\\char e03B  TW_MH_BELERIANDIC VALA_W_HOOK \\n\\n\\\\char e03C  TW_HW_LOWDHAM HARP_SHAPED\\n\\\\char e03D  VAIA WAIA VAIYA\\n\\\\char e03E  ?\\n\\\\char e03F  ?      \\n\\n\\\\char e040  A_TEHTA\\n\\\\char e041  A_TEHTA_INF\\n\\\\char e042  I_TEHTA_DOUBLE Y_TEHTA\\n\\\\char e043  I_TEHTA_DOUBLE_INF PALATAL_SIGN Y_TEHTA_INF \\n\\n\\\\char e044  I_TEHTA\\n\\\\char e045  I_TEHTA_INF NO_VOWEL_DOT UNUTIXE\\n\\\\char e046  E_TEHTA\\n\\\\char e047  E_TEHTA_INF\\n\\n\\n\\\\** The two following one is boguous in the font atm so replace them by a seq which works **\\\\\\n\\\\** \\\\char e048  E_TEHTA_DOUBLE **\\\\\\n\\\\beg seq E_TEHTA_DOUBLE\\n  E_TEHTA E_TEHTA\\n\\\\end\\n\\\\char e049  E_TEHTA_DOUBLE_INF GEMINATE_DOUBLE\\n\\\\char e04A  O_TEHTA\\n\\\\char e04B  O_TEHTA_INF\\n\\n\\\\char e04C  U_TEHTA\\n\\\\char e04D  U_TEHTA_INF\\n\\\\** The two following ones are buguous in the font atm so replace them by a seq which works **\\\\\\n\\\\** \\\\char e04E  O_TEHTA_DOUBLE **\\\\\\n\\\\beg seq O_TEHTA_DOUBLE\\n  O_TEHTA O_TEHTA\\n\\\\end \\n\\\\** \\\\char e04F  U_TEHTA_DOUBLE **\\\\\\n\\\\beg seq U_TEHTA_DOUBLE\\n  U_TEHTA U_TEHTA\\n\\\\end\\n\\n\\\\char e050  NASALIZE_SIGN NASALIZE_SIGN_TILD      \\n\\\\char e051  GEMINATE_SIGN GEMINATE_SIGN_TILD\\n\\\\char e052  WA_TEHTA SEV_TEHTA\\n\\\\char e053  TEHTA_BREVE A_TEHTA_CIRCUM_REVERSED\\n\\n\\\\char e054  E_TEHTA_GRAVE\\n\\\\char e055  A_TEHTA_CIRCUM  \\n\\\\char e056  A_TEHTA_REVERSED A_TEHTA_DOUBLE\\n\\\\char e057  THINNAS  THINF_STROKE\\n\\n\\\\** THE TWO FOLLOWING ONES ARE HIGHLY DISCUSSABLE, MAYBE WE SHOULD ADD A VIRTUAL CHAR FOR THESE **\\\\\\n\\\\char e058  SARINCE_ENDING_LONG SARINCE_FLOURISHED\\n\\\\char e059  SARINCE COMBINING_SARINCE SHOOK_RIGHT_L SHOOK_LEFT_L \\n\\\\char e05A  ?\\n\\\\char e05B  ?\\n\\n\\\\char e065  PUNCT_EXCLAM\\n\\\\char e066  PUNCT_INTERR\\n\\\\char e067  ELVISH_PAREN PUNCT_PAREN_L PUNCT_PAREN_R PUNCT_PAREN_L_ALT PUNCT_PAREN_R_ALT BOOKMARK_SIGN\\n\\\\char e068  PUNCT_TILD\\n \\n\\\\char e069  PUNCT_DTILD RING_MARK_L RING_MARK_R\\n\\n\\\\char e06A  DQUOT_OPEN\\n\\\\char e06B  DQUOT_CLOSE\\n\\\\char e06C  THORIN_EXCLAMATION\\n\\n\\\\char e070 NUM_0 \\n\\\\char e071 NUM_1 \\n\\\\char e072 NUM_2 \\n\\\\char e073 NUM_3 \\n\\\\char e074 NUM_4 \\n\\\\char e075 NUM_5 \\n\\\\char e076 NUM_6 \\n\\\\char e077 NUM_7 \\n\\\\char e078 NUM_8 \\n\\\\char e079 NUM_9 \\n\\\\char e07A NUM_10\\n\\\\char e07B NUM_11\\n\\\\char e07C NUM_12\\n\\n\\\\char e07D CIRC_TEHTA_INF\\n\\n\\\\** Ligatured results are mapped here **\\\\\\n\\\\**\\n\\\\char 10037 AHA_TINCO\\n\\\\char 10038 HWESTA_TINCO\\n\\\\char 10039 ANCA_CLOSED SILME_AHA\\n**\\\\\\n\\n\\\\char 204A OLD_ENGLISH_AND\\n\\n\\\\char 200d ZWJ\\n\\n\\\\** Ligatured sequences used as one entity in modes **\\\\\\n\\\\beg seq AHA_TINCO\\n  AHA ZWJ TINCO\\n\\\\end\\n\\n\\\\beg seq HWESTA_TINCO\\n  HWESTA ZWJ TINCO\\n\\\\end\\n\\n\\\\beg seq ANCA_CLOSED SILME_AHA\\n  SILME ZWJ AHA\\n\\\\end\\n\\n\"\nGlaemscribe.resource_manager.raw_charsets[\"unicode_gothic\"] = \"\\\\**\\n\\nGlǽmscribe (also written Glaemscribe) is a software dedicated to\\nthe transcription of texts between writing systems, and more \\nspecifically dedicated to the transcription of J.R.R. Tolkien\\'s \\ninvented languages to some of his devised writing systems.\\n\\nCopyright (C) 2015 Benjamin Babut (Talagan).\\n\\nThis program is free software: you can redistribute it and/or modify\\nit under the terms of the GNU Affero General Public License as published by\\nthe Free Software Foundation, either version 3 of the License, or\\nany later version.\\n\\nThis program is distributed in the hope that it will be useful,\\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\nGNU Affero General Public License for more details.\\n\\nYou should have received a copy of the GNU Affero General Public License\\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\\n\\n**\\\\\\n\\n\\\\** Charset for the analecta font used by the gothic mode **\\\\ \\n\\\\** Very incomplete outside of the gothic range **\\\\ \\n\\\\** Minimal service here ... **\\\\\\n\\n\\\\**   **\\\\ \\\\char 20 SPACE  \\n\\\\** , **\\\\ \\\\char 2C COMA\\n\\\\** . **\\\\ \\\\char 2E PERIOD\\n\\\\** : **\\\\ \\\\char 3A COLON\\n\\\\** ; **\\\\ \\\\char 3B SEMICOLON\\n\\n\\\\** Gothic part **\\\\\\n\\\\** 𐌰 **\\\\ \\\\char 10330 AZA  \\n\\\\** 𐌱 **\\\\ \\\\char 10331 BERCNA  \\n\\\\** 𐌳 **\\\\ \\\\char 10333 DAAZ  \\n\\\\** 𐌴 **\\\\ \\\\char 10334 EYZ  \\n\\\\** 𐍆 **\\\\ \\\\char 10346 FE  \\n\\\\** 𐌲 **\\\\ \\\\char 10332 GEUUA  \\n\\\\** 𐌷 **\\\\ \\\\char 10337 HAAL  \\n\\\\** 𐌹 **\\\\ \\\\char 10339 IIZ  \\n\\\\** 𐌾 **\\\\ \\\\char 1033E GAAR  \\n\\\\** 𐌺 **\\\\ \\\\char 1033A CHOZMA  \\n\\\\** 𐌻 **\\\\ \\\\char 1033B LAAZ  \\n\\\\** 𐌼 **\\\\ \\\\char 1033C MANNA  \\n\\\\** 𐌽 **\\\\ \\\\char 1033D NOICZ  \\n\\\\** 𐍉 **\\\\ \\\\char 10349 UTAL \\n\\\\** 𐍀 **\\\\ \\\\char 10340 PERTRA  \\n\\\\** 𐌵 **\\\\ \\\\char 10335 QUETRA  \\n\\\\** 𐍂 **\\\\ \\\\char 10342 REDA  \\n\\\\** 𐍃 **\\\\ \\\\char 10343 SUGIL  \\n\\\\** 𐍄 **\\\\ \\\\char 10344 TYZ  \\n\\\\** 𐌸 **\\\\ \\\\char 10338 THYTH  \\n\\\\** 𐌿 **\\\\ \\\\char 1033F URAZ  \\n\\\\** 𐍇 **\\\\ \\\\char 10347 ENGUZ  \\n\\\\** 𐍅 **\\\\ \\\\char 10345 UUINNE  \\n\\\\** 𐌶 **\\\\ \\\\char 10336 EZEC  \\n\\\\** 𐍈 **\\\\ \\\\char 10348 UUAER  \\n\\\\** 𐍋 **\\\\ \\\\char 1034B IIZ_TREMA \\\\** Special Glaemscrafu ! **\\\\ \\n\\\\** 𐍁 **\\\\ \\\\char 10341 ? \\n\\\\** 𐍊 **\\\\ \\\\char 1034A ? \\n\\n\"\nGlaemscribe.resource_manager.raw_charsets[\"unicode_runes\"] = \"\\\\**\\n\\nGlǽmscribe (also written Glaemscribe) is a software dedicated to\\nthe transcription of texts between writing systems, and more \\nspecifically dedicated to the transcription of J.R.R. Tolkien\\'s \\ninvented languages to some of his devised writing systems.\\n\\nCopyright (C) 2015 Benjamin Babut (Talagan).\\n\\nThis program is free software: you can redistribute it and/or modify\\nit under the terms of the GNU Affero General Public License as published by\\nthe Free Software Foundation, either version 3 of the License, or\\nany later version.\\n\\nThis program is distributed in the hope that it will be useful,\\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\nGNU Affero General Public License for more details.\\n\\nYou should have received a copy of the GNU Affero General Public License\\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\\n\\n**\\\\\\n\\n\\\\** Charset for the pfeffermediaeval font used by the furtharc mode **\\\\ \\n\\\\** Very incomplete outside of the runes range **\\\\\\n\\\\** Minimal service here ... **\\\\ \\n\\n\\\\**   **\\\\ \\\\char 20 SPACE                      \\n\\\\** , **\\\\ \\\\char 2C COMA\\n\\\\** . **\\\\ \\\\char 2E PERIOD \\n\\\\** ; **\\\\ \\\\char 3B SEMICOLON   \\n\\\\** ᚠ **\\\\ \\\\char 16A0 FEHU FEOH FE \\n\\\\** ᚡ **\\\\ \\\\char 16A1 RUNIC_V \\n\\\\** ᚢ **\\\\ \\\\char 16A2 URUZ UR \\n\\\\** ᚣ **\\\\ \\\\char 16A3 YR \\n\\\\** ᚤ **\\\\ \\\\char 16A4 RUNIC_Y \\n\\\\** ᚥ **\\\\ \\\\char 16A5 RUNIC_W \\n\\\\** ᚦ **\\\\ \\\\char 16A6 THURISAZ THURS THORN \\n\\\\** ᚧ **\\\\ \\\\char 16A7 ETH \\n\\\\** ᚨ **\\\\ \\\\char 16A8 ANSUZ \\n\\\\** ᚩ **\\\\ \\\\char 16A9 OS \\n\\\\** ᚪ **\\\\ \\\\char 16AA AC \\n\\\\** ᚫ **\\\\ \\\\char 16AB AESC \\n\\\\** ᚬ **\\\\ \\\\char 16AC LONG_BRANCH_OSS \\n\\\\** ᚭ **\\\\ \\\\char 16AD SHORT_TWIG_OSS \\n\\\\** ᚮ **\\\\ \\\\char 16AE RUNIC_O \\n\\\\** ᚯ **\\\\ \\\\char 16AF RUNIC_OE \\n\\\\** ᚰ **\\\\ \\\\char 16B0 RUNIC_ON \\n\\\\** ᚱ **\\\\ \\\\char 16B1 RAIDO RAD REID \\n\\\\** ᚲ **\\\\ \\\\char 16B2 KAUNA \\n\\\\** ᚳ **\\\\ \\\\char 16B3 CEN \\n\\\\** ᚴ **\\\\ \\\\char 16B4 KAUN \\n\\\\** ᚵ **\\\\ \\\\char 16B5 RUNIC_G \\n\\\\** ᚶ **\\\\ \\\\char 16B6 ENG \\n\\\\** ᚷ **\\\\ \\\\char 16B7 GEBO GYFU \\n\\\\** ᚷ **\\\\ \\\\char 16B8 GAR \\n\\\\** ᚹ **\\\\ \\\\char 16B9 WUNJO WYNN \\n\\\\** ᚺ **\\\\ \\\\char 16BA HAGLAZ \\n\\\\** ᚻ **\\\\ \\\\char 16BB HAEGL \\n\\\\** ᚼ **\\\\ \\\\char 16BC LONG_BRANCH_HAGALL \\n\\\\** ᚽ **\\\\ \\\\char 16BD SHORT_TWIG_HAGALL \\n\\\\** ᚾ **\\\\ \\\\char 16BE NAUDIZ NYD NAUD \\n\\\\** ᚿ **\\\\ \\\\char 16BF SHORT_TWIG_NAUD \\n\\\\** ᛀ **\\\\ \\\\char 16C0 DOTTED_N \\n\\\\** ᛁ **\\\\ \\\\char 16C1 ISAZ IS ISS \\n\\\\** ᛂ **\\\\ \\\\char 16C2 RUNIC_E \\n\\\\** ᛃ **\\\\ \\\\char 16C3 JERAN \\n\\\\** ᛄ **\\\\ \\\\char 16C4 GER \\n\\\\** ᛅ **\\\\ \\\\char 16C5 LONG_BRANCH_AR \\n\\\\** ᛆ **\\\\ \\\\char 16C6 SHORT_TWIG_AR \\n\\\\** ᛇ **\\\\ \\\\char 16C7 IWAZ EOH \\n\\\\** ᛈ **\\\\ \\\\char 16C8 PERTHO PEORTH \\n\\\\** ᛉ **\\\\ \\\\char 16C9 ALGIZ EOLHX \\n\\\\** ᛊ **\\\\ \\\\char 16CA SOWILO \\n\\\\** ᛋ **\\\\ \\\\char 16CB SIGEL LONG_BRANCH_SOL \\n\\\\** ᛌ **\\\\ \\\\char 16CC SHORT_TWIG_SOL \\n\\\\** ᛍ **\\\\ \\\\char 16CD RUNIC_C \\n\\\\** ᛎ **\\\\ \\\\char 16CE RUNIC_Z \\n\\\\** ᛏ **\\\\ \\\\char 16CF TIWAZ TIR TYR \\n\\\\** ᛐ **\\\\ \\\\char 16D0 SHORT_TWIG_TYR \\n\\\\** ᛑ **\\\\ \\\\char 16D1 RUNIC_D \\n\\\\** ᛒ **\\\\ \\\\char 16D2 BERKANAN BEORC BJARKAN \\n\\\\** ᛓ **\\\\ \\\\char 16D3 SHORT_TWIG_BERKANAN SHORT_TWIG_BEORC SHORT_TWIG_BJARKAN\\n\\\\** ᛔ **\\\\ \\\\char 16D4 DOTTED_P \\n\\\\** ᛕ **\\\\ \\\\char 16D5 OPEN_P \\n\\\\** ᛖ **\\\\ \\\\char 16D6 EHWAZ EH \\n\\\\** ᛗ **\\\\ \\\\char 16D7 MANNAZ MAN \\n\\\\** ᛘ **\\\\ \\\\char 16D8 LONG_BRANCH_MADR \\n\\\\** ᛙ **\\\\ \\\\char 16D9 SHORT_TWIG_MADR \\n\\\\** ᛚ **\\\\ \\\\char 16DA LAUKAZ LAGU LOGR \\n\\\\** ᛛ **\\\\ \\\\char 16DB DOTTED_L \\n\\\\** ᛜ **\\\\ \\\\char 16DC INGWAZ \\n\\\\** ᛝ **\\\\ \\\\char 16DD ING \\n\\\\** ᛞ **\\\\ \\\\char 16DE DAGAZ DAEG \\n\\\\** ᛟ **\\\\ \\\\char 16DF OTHALAN ETHEL \\n\\\\** ᛠ **\\\\ \\\\char 16E0 EAR \\n\\\\** ᛡ **\\\\ \\\\char 16E1 IOR \\n\\\\** ᛢ **\\\\ \\\\char 16E2 CWEORTH \\n\\\\** ᛣ **\\\\ \\\\char 16E3 CALC \\n\\\\** ᛤ **\\\\ \\\\char 16E4 CEALC \\n\\\\** ᛥ **\\\\ \\\\char 16E4 STAN \\n\\\\** ᛦ **\\\\ \\\\char 16E6 LONG_BRANCH_YR \\n\\\\** ᛧ **\\\\ \\\\char 16E7 SHORT_TWIG_YR \\n\\\\** ᛨ **\\\\ \\\\char 16E8 ICELANDIC_YR \\n\\\\** ᛩ **\\\\ \\\\char 16E9 RUNIC_Q \\n\\\\** ᛪ **\\\\ \\\\char 16EA RUNIC_X \\n\\\\** ᛫ **\\\\ \\\\char 16EB RUNIC_SINGLE_PUNCTUATION \\n\\\\** ᛬ **\\\\ \\\\char 16EC RUNIC_MULTIPLE_PUNCTUATION \\n\\\\** ᛭ **\\\\ \\\\char 16ED RUNIC_CROSS_PUNCTUATION\\n\\\\** ᛮ **\\\\ \\\\char 16EE RUNIC_ARLAUG_SYMBOL \\n\\\\** ᛯ **\\\\ \\\\char 16EF RUNIC_TVIMADUR_SYMBOL \\n\\\\** ᛰ **\\\\ \\\\char 16F0 RUNIC_BELGTHOR_SYMBOL \\n\\\\** ᛱ **\\\\ \\\\char 16F1 RUNIC_LETTER_K \\n\\\\** ᛲ **\\\\ \\\\char 16F2 RUNIC_LETTER_SH \\n\\\\** ᛳ **\\\\ \\\\char 16F3 RUNIC_LETTER_OO   \\n\\\\** ᛴ **\\\\ \\\\char 16F4 RUNIC_LETTER_FRANKS_CASKET_OS \\n\\\\** ᛵ **\\\\ \\\\char 16F5 RUNIC_LETTER_FRANKS_CASKET_IS \\n\\\\** ᛶ **\\\\ \\\\char 16F6 RUNIC_LETTER_FRANKS_CASKET_EH \\n\\\\** ᛷ **\\\\ \\\\char 16F7 RUNIC_LETTER_FRANKS_CASKET_AC \\n\\\\** ᛸ **\\\\ \\\\char 16F8 RUNIC_LETTER_FRANKS_CASKET_AESC\\n\"\nGlaemscribe.resource_manager.raw_modes[\"adunaic-tengwar-glaemscrafu\"] = \"\\\\**\\n\\nGlǽmscribe (also written Glaemscribe) is a software dedicated to\\nthe transcription of texts between writing systems, and more \\nspecifically dedicated to the transcription of J.R.R. Tolkien\\'s \\ninvented languages to some of his devised writing systems.\\n\\nCopyright (C) 2015 Benjamin Babut (Talagan).\\n\\nThis program is free software: you can redistribute it and/or modify\\nit under the terms of the GNU Affero General Public License as published by\\nthe Free Software Foundation, either version 3 of the License, or\\nany later version.\\n\\nThis program is distributed in the hope that it will be useful,\\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\nGNU Affero General Public License for more details.\\n\\nYou should have received a copy of the GNU Affero General Public License\\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\\n\\n**\\\\\\n\\n\\\\beg changelog\\n \\\\entry \\\"0.0.2\\\" \\\"Added option for o/u tehtar loop orientation\\\"\\n \\\\entry \\\"0.0.3\\\" \\\"Normalizing to virtual chars\\\" \\n \\\\entry \\\"0.0.4\\\" \\\"Added charset support for Annatar\\\"\\n \\\\entry \\\"0.0.5\\\" \\\"Added support for the FreeMonoTengwar font\\\"\\n \\\\entry \\\"0.0.6\\\" \\\"Added wave/bar option for consonant modifications sign\\\"\\n \\\\entry \\\"0.1.0\\\" \\\"Added support for the Tengwar Elfica font\\\"\\n \\\\entry \\\"0.1.1\\\" \\\"Added support for inlined raw tengwar\\\"\\n \\\\entry \\\"0.1.2\\\" \\\"Added support for non-breaking spaces\\\" \\n \\\\entry \\\"0.1.3\\\" \\\"Added support for new unicode charsets\\\"\\n \\\\entry \\\"0.1.4\\\" \\\"Added support for the Tengwar Telcontar font\\\"\\n\\\\end\\n\\n\\\\**  Adunaic mode for glaemscribe (MAY BE INCOMPLETE) **\\\\\\n\\\\language Adûnaic\\n\\\\writing  Tengwar\\n\\\\mode     \\\"Adûnaic Tengwar - G*\\\"\\n\\\\version  \\\"0.1.4\\\"\\n\\\\authors  \\\"Talagan (Benjamin Babut), based on J.R.R Tolkien\\\"\\n\\n\\\\world      arda\\n\\\\invention  experimental\\n\\n\\\\raw_mode \\\"raw-tengwar\\\"\\n\\n\\\\charset  tengwar_ds_sindarin true\\n\\\\charset  tengwar_ds_parmaite false\\n\\\\charset  tengwar_ds_eldamar  false\\n\\\\charset  tengwar_ds_annatar  false\\n\\\\charset  tengwar_ds_elfica   false\\n\\n\\\\charset  tengwar_guni_sindarin false\\n\\\\charset  tengwar_guni_parmaite false\\n\\\\charset  tengwar_guni_eldamar  false\\n\\\\charset  tengwar_guni_annatar  false\\n\\\\charset  tengwar_guni_elfica   false\\n\\n\\\\charset  tengwar_freemono    false\\n\\\\charset  tengwar_telcontar   false\\n\\n\\n\\n\\\\beg      options\\n  \\\\beg option reverse_o_u_tehtar O_UP_U_DOWN\\n    \\\\value O_UP_U_DOWN 1\\n    \\\\value U_UP_O_DOWN 2\\n  \\\\end\\n\\n  \\\\beg option consonant_modification_style CONSONANT_MODIFICATION_STYLE_BAR\\n    \\\\value CONSONANT_MODIFICATION_STYLE_WAVE 0\\n    \\\\value CONSONANT_MODIFICATION_STYLE_BAR 1\\n  \\\\end\\n\\n  \\\\option reverse_numbers true\\n  \\\\beg option numbers_base BASE_12\\n    \\\\value    BASE_10 10\\n    \\\\value    BASE_12 12\\n  \\\\end\\n\\n\\\\end\\n\\n\\\\beg      preprocessor\\n  \\\\** Work exclusively downcase **\\\\\\n  \\\\downcase\\n  \\n  \\\\** Simplify trema vowels **\\\\\\n  \\\\substitute \\\"ä\\\" \\\"a\\\"\\n  \\\\substitute \\\"ë\\\" \\\"e\\\"\\n  \\\\substitute \\\"ï\\\" \\\"i\\\"\\n  \\\\substitute \\\"ö\\\" \\\"o\\\"\\n  \\\\substitute \\\"ü\\\" \\\"u\\\"\\n  \\\\substitute \\\"ÿ\\\" \\\"y\\\"\\n  \\n  \\\\** Dis-ambiguate long vowels **\\\\\\n  \\\\rxsubstitute \\\"(ā|â|aa)\\\" \\\"á\\\"\\n  \\\\rxsubstitute \\\"(ē|ê|ee)\\\" \\\"é\\\"\\n  \\\\rxsubstitute \\\"(ī|î|ii)\\\" \\\"í\\\"\\n  \\\\rxsubstitute \\\"(ō|ô|oo)\\\" \\\"ó\\\"\\n  \\\\rxsubstitute \\\"(ū|û|uu)\\\" \\\"ú\\\"\\n  \\\\rxsubstitute \\\"(ȳ|ŷ|yy)\\\" \\\"ý\\\"\\n  \\n  \\\\** Preprocess numbers **\\\\\\n  \\\\elvish_numbers \\\"\\\\\\\\eval numbers_base\\\" \\\"\\\\\\\\eval reverse_numbers\\\"\\n\\\\end\\n\\n\\\\beg      processor\\n\\n  \\\\beg    rules litteral  \\n  \\n    \\\\if \\\"consonant_modification_style == CONSONANT_MODIFICATION_STYLE_WAVE\\\"\\n      {GEMINATE} === GEMINATE_SIGN_TILD\\n    \\\\else\\n      {GEMINATE} === GEMINATE_SIGN\\n    \\\\endif\\n  \\n    {A}   === a\\n    {AA}  === á\\n    {E}   === e\\n    {EE}  === é\\n    {I}   === i\\n    {II}  === í\\n    {O}   === o\\n    {OO}  === ó\\n    {U}   === u\\n    {UU}  === ú\\n\\n    \\\\** Short diphthongs **\\\\\\n    {AI}  === {A}{I}\\n    {AU}  === {A}{U}\\n\\n    \\\\** LONG diphthongs **\\\\      \\n    {AAI} === {AA}{I} \\\\** âi **\\\\\\n    {AAU} === {AA}{U} \\\\** âu **\\\\\\n    {EEI} === {EE}{I} \\\\** êi **\\\\\\n    {EEU} === {EE}{U} \\\\** êu **\\\\\\n    {OOI} === {OO}{I} \\\\** ôi **\\\\\\n    {OOU} === {OO}{U} \\\\** ôu **\\\\\\n        \\n    \\\\if \\\"reverse_o_u_tehtar == U_UP_O_DOWN\\\"\\n      {O_LOOP} === O_TEHTA\\n      {U_LOOP} === U_TEHTA\\n    \\\\else\\n      {O_LOOP} === U_TEHTA\\n      {U_LOOP} === O_TEHTA\\n    \\\\endif\\n        \\n    {SDIPHTHONGS}  === {AI}           * {AU}\\n    {SDIPHTHENGS}  === YANTA A_TEHTA  * URE A_TEHTA \\n                   \\n    {LDIPHTHONGS}  === {AAI}               * {AAU}              * {EEI}              * {EEU}            * {OOI}               * {OOU}\\n    {LDIPHTHENGS}  === ARA A_TEHTA YANTA   * ARA A_TEHTA URE    * ARA E_TEHTA YANTA  * ARA E_TEHTA URE  * ARA {O_LOOP} YANTA  * ARA {O_LOOP} URE\\n                                                                                                                 \\n    {VOWELS}      === {A}          * {E}          * {I}          * {O}          * {U}    \\n    {_TEHTAR_}    === A_TEHTA      * E_TEHTA      *  I_TEHTA     * {O_LOOP}     * {U_LOOP}\\n                   \\n    {LVOWELS}     === {AA}         * {EE}         * {II}         * {OO}         * {UU}\\n    {LVOWTNG}     === ARA A_TEHTA  * ARA E_TEHTA  * ARA I_TEHTA  * ARA {O_LOOP} * ARA {U_LOOP} \\n\\n    \\\\** Let\\' put all vowels/diphthongs in the same basket **\\\\\\n    {V_D}         === [ {VOWELS}    * {LVOWELS} * {SDIPHTHONGS} * {LDIPHTHONGS} ]        \\n    \\\\** And their images... **\\\\            \\n    {_V_D_}       === [ {_TEHTAR_}  * {LVOWTNG} * {SDIPHTHENGS} * {LDIPHTHENGS} ]\\n  \\n    [{VOWELS}]       --> TELCO [{_TEHTAR_}]   \\\\** Replace isolated short vowels **\\\\\\n    [{LVOWELS}]      --> [{LVOWTNG}]    \\\\** Replace long vowels **\\\\\\n    [{SDIPHTHONGS}]  --> [{SDIPHTHENGS}]  \\\\** Replace short diphthongs **\\\\\\n    [{LDIPHTHONGS}]  --> [{LDIPHTHENGS}]  \\\\** Replace long diphthongs **\\\\\\n\\n    \\\\** ================ **\\\\\\n    \\\\**    CONSONANTS    **\\\\\\n    \\\\** ================ **\\\\     \\n    {K}   === (c,k)\\n    {V}   === (v,w)\\n\\n    {L1_S}         === {K}     * p     * t     * {K}{K}            * pp                * tt\\n    {L1_T}         === QUESSE  * PARMA * TINCO * CALMA {GEMINATE}  * PARMA {GEMINATE}  * TINCO  {GEMINATE}\\n    \\n    [{L1_S}]       -->  [ {L1_T} ]\\n    [{L1_S}]{V_D}  -->  [ {L1_T} ]{_V_D_} \\n\\n    {L2_S}         === d    * b     * g     * dd              * bb                * gg\\n    {L2_T}         === ANDO * UMBAR * UNGWE * ANDO {GEMINATE} * UMBAR {GEMINATE}  * UNGWE {GEMINATE}\\n    [{L2_S}]       --> [{L2_T}] \\n    [{L2_S}]{V_D}  --> [{L2_T}]{_V_D_} \\n\\n    \\\\** Alignment of tehta is not the same in the font **\\\\\\n    \\\\** So we need to split the third line unfortunately **\\\\\\n    {L3_1_S}          === th    * ph      * (t,th)th          * (p,ph)ph            * (t,th)ph    * (k,kh)ph      * (p,ph)th    * (k,kh)th\\n    {L3_1_T}          === SULE  * FORMEN  * SULE {GEMINATE}   * FORMEN {GEMINATE}   * SULE FORMEN * HWESTA FORMEN * FORMEN SULE * HWESTA SULE\\n   \\n    {L3_2_S}          === sh    * kh      * (k,kh)kh          * (p,ph)kh            * (t,th)kh\\n    {L3_2_T}          === AHA   * HWESTA  * HWESTA {GEMINATE} * FORMEN HWESTA       * SULE HWESTA\\n   \\n    [{L3_1_S}]        --> [{L3_1_T}] \\n    [{L3_1_S}]{V_D}   --> [{L3_1_T}]{_V_D_} \\n    [{L3_2_S}]        --> [{L3_2_T}] \\n    [{L3_2_S}]{V_D}   --> [{L3_2_T}]{_V_D_} \\n\\n    {L4_S}            === nd    * mb    * ng\\n    {L4_T}            === ANTO  * AMPA  * UNQUE\\n    [{L4_S}]          --> [{L4_T}] \\n    [{L4_S}]{V_D}     --> [{L4_T}]{_V_D_} \\n\\n    {L5_S}            === n     * m     * nn                 * mm\\n    {L5_T}            === NUMEN * MALTA * NUMEN {GEMINATE}   * MALTA {GEMINATE}\\n    [{L5_S}]          --> [{L5_T}] \\n    [{L5_S}]{V_D}     --> [{L5_T}]{_V_D_} \\n\\n    {L6_S}            === {V}   * y     * rr                 * {V}{V}             * yy\\n    {L6_T}            === VALA  * ANNA  * ROMEN {GEMINATE}   * VALA {GEMINATE}    * ANNA {GEMINATE}\\n    [r * {L6_S}]      --> [ ORE   * {L6_T}] \\n    [r * {L6_S}]{V_D} --> [ ROMEN * {L6_T}]{_V_D_} \\n\\n    \\\\** This one is not useful (redundant with higher) **\\\\\\n    \\\\** Keep it for clarity of mind **\\\\\\n    r_                --> ORE\\n\\n    s{V_D}            --> SILME_NUQUERNA {_V_D_}  \\\\** Before a vowel goes down **\\\\\\n    s                 --> SILME                   \\\\** Any other pos, up **\\\\\\n    z{V_D}            --> ESSE_NUQUERNA {_V_D_}   \\\\** Before a vowel goes down **\\\\\\n    z                 --> ESSE                    \\\\** Any other pos, up **\\\\\\n\\n    h{V_D}            --> HYARMEN {_V_D_}\\n    h                 --> HYARMEN\\n    hh{V_D}           --> HYARMEN {GEMINATE} {_V_D_}\\n    hh                --> HYARMEN {GEMINATE}\\n                      \\n    l{V_D}            --> LAMBE {_V_D_}\\n    l                 --> LAMBE\\n                      \\n    ll{V_D}           --> LAMBE {GEMINATE} {_V_D_}\\n    ll                --> LAMBE {GEMINATE}\\n  \\n  \\\\end\\n  \\n  \\\\beg rules punctutation\\n    . --> PUNCT_DDOT\\n    .. --> PUNCT_DOT PUNCT_DDOT PUNCT_DOT\\n    …  --> PUNCT_TILD\\n    ... --> PUNCT_TILD\\n    .... --> PUNCT_TILD\\n    ..... --> PUNCT_TILD\\n    ...... --> PUNCT_TILD\\n    ....... --> PUNCT_TILD\\n\\n    , --> PUNCT_DOT\\n    : --> PUNCT_DOT\\n    ; --> PUNCT_DOT\\n    ! --> PUNCT_EXCLAM\\n    ? --> PUNCT_INTERR\\n    · --> PUNCT_DOT\\n\\n    \\\\** Apostrophe **\\\\\\n\\n    \\' --> {NULL}\\n    ’ --> {NULL}\\n    \\n    \\\\** NBSP **\\\\\\n    {NBSP} --> NBSP\\n\\n    \\\\** Quotes **\\\\\\n\\n    “ --> DQUOT_OPEN\\n    ” --> DQUOT_CLOSE\\n    « --> DQUOT_OPEN \\n    » --> DQUOT_CLOSE \\n    \\n    - --> PUNCT_DOT    \\n    – --> PUNCT_TILD  \\n    — --> PUNCT_DTILD\\n \\n    [ --> PUNCT_PAREN_L\\n    ] --> PUNCT_PAREN_R\\n    ( --> PUNCT_PAREN_L\\n    ) --> PUNCT_PAREN_R\\n    { --> PUNCT_PAREN_L\\n    } --> PUNCT_PAREN_R\\n    < --> PUNCT_PAREN_L\\n    > --> PUNCT_PAREN_R  \\n\\n    \\\\** Not universal between fonts ... **\\\\\\n    $ --> ELVISH_PAREN\\n    ≤ --> RING_MARK_L \\\\** Ring inscription left beautiful stuff **\\\\\\n    ≥ --> RING_MARK_R \\\\** Ring inscription right beautiful stuff **\\\\\\n  \\\\end\\n\\n  \\\\beg rules numbers\\n    0 --> NUM_0\\n    1 --> NUM_1\\n    2 --> NUM_2\\n    3 --> NUM_3\\n    4 --> NUM_4\\n    5 --> NUM_5\\n    6 --> NUM_6\\n    7 --> NUM_7\\n    8 --> NUM_8\\n    9 --> NUM_9\\n    A --> NUM_10\\n    B --> NUM_11   \\n  \\\\end\\n  \\n\\\\end\\n\\n\\\\beg postprocessor\\n  \\\\resolve_virtuals\\n\\\\end\\n\"\nGlaemscribe.resource_manager.raw_modes[\"blackspeech-tengwar-general_use\"] = \"\\\\**\\n\\nGlǽmscribe (also written Glaemscribe) is a software dedicated to\\nthe transcription of texts between writing systems, and more \\nspecifically dedicated to the transcription of J.R.R. Tolkien\\'s \\ninvented languages to some of his devised writing systems.\\n\\nCopyright (C) 2015 Benjamin Babut (Talagan).\\n\\nThis program is free software: you can redistribute it and/or modify\\nit under the terms of the GNU Affero General Public License as published by\\nthe Free Software Foundation, either version 3 of the License, or\\nany later version.\\n\\nThis program is distributed in the hope that it will be useful,\\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\nGNU Affero General Public License for more details.\\n\\nYou should have received a copy of the GNU Affero General Public License\\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\\n\\n**\\\\\\n\\n\\\\** BlackSpeech ring mode for glaemscribe (MAY BE INCOMPLETE) **\\\\\\n\\n\\\\beg changelog\\n  \\\\entry 0.0.1 \\\"First version\\\"\\n  \\\\entry 0.0.2 \\\"Ported to virtual chars.\\\"\\n  \\\\entry 0.0.3 \\\"Merging with blackspeech Annatar.\\\"\\n  \\\\entry 0.0.4 \\\"Adding double tehtar handling.\\\"\\n  \\\\entry 0.0.5 \\\"Fixing ORE/ROMEN, refactoring.\\\"\\n  \\\\entry 0.0.6 \\\"Added support for the FreeMonoTengwar font\\\"\\n  \\\\entry \\\"0.1.0\\\" \\\"Added support for the Tengwar Elfica font\\\"\\n  \\\\entry \\\"0.1.1\\\" \\\"Added support for inlined raw tengwar\\\"\\n  \\\\entry \\\"0.1.2\\\" \\\"Added support for non-breaking spaces\\\"   \\n  \\\\entry \\\"0.1.3\\\" \\\"Correcting visibility options to conform to new glaeml args strict syntax\\\"\\n  \\\\entry \\\"0.1.4\\\" \\\"Added support for new unicode charsets\\\"\\n  \\\\entry \\\"0.1.5\\\" \\\"Added support for the Tengwar Telcontar font\\\"\\n\\\\end\\n\\n\\\\language \\\"Black Speech\\\"\\n\\\\writing  \\\"Tengwar\\\"\\n\\\\mode     \\\"Black Speech Tengwar - General Use\\\"\\n\\\\version  \\\"0.1.5\\\"\\n\\\\authors  \\\"J.R.R. Tolkien, impl. Talagan (Benjamin Babut)\\\"\\n\\n\\\\world      arda\\n\\\\invention  jrrt\\n\\n\\\\raw_mode \\\"raw-tengwar\\\"\\n \\n\\\\charset  tengwar_ds_sindarin false\\n\\\\charset  tengwar_ds_parmaite false\\n\\\\charset  tengwar_ds_eldamar  false\\n\\\\charset  tengwar_ds_annatar  true\\n\\\\charset  tengwar_ds_elfica   false\\n\\n\\\\charset  tengwar_guni_sindarin false\\n\\\\charset  tengwar_guni_parmaite false\\n\\\\charset  tengwar_guni_eldamar  false\\n\\\\charset  tengwar_guni_annatar  false\\n\\\\charset  tengwar_guni_elfica   false\\n\\n\\\\charset  tengwar_freemono    false\\n\\\\charset  tengwar_telcontar   false\\n\\n\\\\beg      options\\n\\n  \\\\beg option reverse_o_u_tehtar O_UP_U_DOWN\\n    \\\\value O_UP_U_DOWN 1\\n    \\\\value U_UP_O_DOWN 2\\n  \\\\end\\n\\n  \\\\beg option long_vowels_format LONG_VOWELS_USE_DOUBLE_TEHTAR\\n    \\\\value LONG_VOWELS_USE_LONG_CARRIER 1\\n    \\\\value LONG_VOWELS_USE_DOUBLE_TEHTAR 2\\n  \\\\end  \\n  \\n  \\\\beg option double_tehta_e true\\n    \\\\visible_when \\\"long_vowels_format == LONG_VOWELS_USE_DOUBLE_TEHTAR\\\"\\n  \\\\end\\n  \\\\beg option double_tehta_i true\\n    \\\\visible_when \\\"long_vowels_format == LONG_VOWELS_USE_DOUBLE_TEHTAR\\\"\\n  \\\\end\\n  \\\\beg option double_tehta_o true\\n    \\\\visible_when \\\"long_vowels_format == LONG_VOWELS_USE_DOUBLE_TEHTAR\\\"\\n  \\\\end\\n  \\\\beg option double_tehta_u true\\n    \\\\visible_when \\\"long_vowels_format == LONG_VOWELS_USE_DOUBLE_TEHTAR\\\"\\n  \\\\end\\n  \\n  \\\\beg option consonant_modification_style CONSONANT_MODIFICATION_STYLE_WAVE\\n    \\\\value CONSONANT_MODIFICATION_STYLE_WAVE 0\\n    \\\\value CONSONANT_MODIFICATION_STYLE_BAR 1\\n  \\\\end\\n  \\n  \\\\option reverse_numbers true\\n  \\\\beg option numbers_base BASE_12\\n    \\\\value    BASE_10 10\\n    \\\\value    BASE_12 12\\n  \\\\end\\n\\\\end\\n\\n\\\\beg      preprocessor\\n  \\\\** Work exclusively downcase **\\\\\\n  \\\\downcase\\n  \\n  \\\\** Simplify trema vowels **\\\\\\n  \\\\substitute \\\"ä\\\" \\\"a\\\"\\n  \\\\substitute \\\"ë\\\" \\\"e\\\"\\n  \\\\substitute \\\"ï\\\" \\\"i\\\"\\n  \\\\substitute \\\"ö\\\" \\\"o\\\"\\n  \\\\substitute \\\"ü\\\" \\\"u\\\"\\n  \\\\substitute \\\"ÿ\\\" \\\"y\\\"\\n\\n  \\\\** Dis-ambiguate long vowels **\\\\\\n  \\\\rxsubstitute \\\"(ā|â|aa)\\\" \\\"á\\\"\\n  \\\\rxsubstitute \\\"(ē|ê|ee)\\\" \\\"é\\\"\\n  \\\\rxsubstitute \\\"(ī|î|ii)\\\" \\\"í\\\"\\n  \\\\rxsubstitute \\\"(ō|ô|oo)\\\" \\\"ó\\\"\\n  \\\\rxsubstitute \\\"(ū|û|uu)\\\" \\\"ú\\\"\\n\\n  \\\\** For ORE/ROMEN **\\\\\\n  \\\\rxsubstitute \\\"r(a|e|i|o|u|á|é|í|ó|ú)\\\" \\\"R\\\\\\\\1\\\"\\n\\n  \\\\** Preprocess numbers **\\\\\\n  \\\\elvish_numbers \\\"\\\\\\\\eval numbers_base\\\" \\\"\\\\\\\\eval reverse_numbers\\\"\\n\\\\end\\n\\n\\\\beg      processor\\n\\n  \\\\beg    rules litteral\\n     \\n    {K}                 === (c,k)\\n    \\n    \\\\if \\\"consonant_modification_style == CONSONANT_MODIFICATION_STYLE_WAVE\\\"\\n      {GEMINATE} === GEMINATE_SIGN_TILD\\n      {NASAL}    === NASALIZE_SIGN_TILD\\n    \\\\else\\n      {GEMINATE} === GEMINATE_SIGN\\n      {NASAL}    === NASALIZE_SIGN\\n    \\\\endif\\n    \\n    {VOWELS}            === a               *  e              * i              * o              *  u\\n    {LVOWELS}           === á               *  é              * í              * ó              *  ú\\n    \\n    \\\\if \\\"reverse_o_u_tehtar == U_UP_O_DOWN\\\"\\n      {O_LOOP}        === O_TEHTA\\n      {O_LOOP_DOUBLE} === O_TEHTA_DOUBLE\\n      {U_LOOP}        === U_TEHTA\\n      {U_LOOP_DOUBLE} === U_TEHTA_DOUBLE\\n    \\\\else\\n      {O_LOOP}        === U_TEHTA\\n      {O_LOOP_DOUBLE} === U_TEHTA_DOUBLE\\n      {U_LOOP}        === O_TEHTA\\n      {U_LOOP_DOUBLE} === O_TEHTA_DOUBLE\\n    \\\\endif   \\n       \\n    {_TEHTAR_}          === A_TEHTA         * E_TEHTA         * I_TEHTA       *  {O_LOOP}  * {U_LOOP}      \\n     \\n    {DIPHTHONGS}        === ai              * au              * oi          \\n    {_DIPHTHONGS_}      === YANTA A_TEHTA   * URE A_TEHTA     * YANTA {O_LOOP}  \\n      \\n\t\t{WLONG}     === {NULL} \\\\** long vowels that can be used as tehtar **\\\\\\n    {_WLONG_}   === {NULL} \\\\** tehtar of long vowels that can be used as tehtar **\\\\\\n\t\t\\n\t\t{_LONG_A_}      === ARA A_TEHTA\\n\t\t{_LONG_E_}      === ARA E_TEHTA\t\\n\t\t{_LONG_I_}      === ARA I_TEHTA\\n\t\t{_LONG_O_}      === ARA {O_LOOP}\t\\n\t\t{_LONG_U_}      === ARA {U_LOOP}\\n\t\t{_LONE_LONG_A_} === {_LONG_A_}\\n\t\t{_LONE_LONG_E_} === {_LONG_E_}\\n\t\t{_LONE_LONG_I_} === {_LONG_I_}\\n\t\t{_LONE_LONG_O_} === {_LONG_O_}\\n\t\t{_LONE_LONG_U_} === {_LONG_U_}\\n    \\n\t\t\\\\if \\\"long_vowels_format == LONG_VOWELS_USE_DOUBLE_TEHTAR\\\"\\n\t    \\\\if double_tehta_e\\n\t\t    {_LONG_E_}       === E_TEHTA_DOUBLE\\n\t\t    {_LONE_LONG_E_}  === TELCO {_LONG_E_}\\n\t\t\t\t{WLONG}          === {WLONG}   * é\\n        {_WLONG_}        === {_WLONG_} * {_LONG_E_}\\n\t\t\t\\\\endif\\n\t\t  \\\\if double_tehta_i\\n\t\t    {_LONG_I_}       === I_TEHTA_DOUBLE\\n\t\t    {_LONE_LONG_I_}  === TELCO {_LONG_I_}\\n\t\t\t\t{WLONG}          === {WLONG}   * í             \\n        {_WLONG_}        === {_WLONG_} * {_LONG_I_}\\n\t\t  \\\\endif\\n\t\t  \\\\if double_tehta_o\\n\t\t    {_LONG_O_}       === {O_LOOP_DOUBLE}\\n\t\t    {_LONE_LONG_O_}  === TELCO {_LONG_O_}\\n\t\t\t\t{WLONG}          === {WLONG}   * ó             \\n        {_WLONG_}        === {_WLONG_} * {_LONG_O_}\\n\t\t  \\\\endif\\n\t\t  \\\\if double_tehta_u\\n\t\t    {_LONG_U_}       === {U_LOOP_DOUBLE}\\n\t\t    {_LONE_LONG_U_}  === TELCO {_LONG_U_}\\n\t\t\t\t{WLONG}          === {WLONG}   * ú            \\n        {_WLONG_}        === {_WLONG_} * {_LONG_U_}\\n\t\t  \\\\endif\\n    \\\\endif  \\n\t\t\t        \\n    {V_D}           === [ {VOWELS} {WLONG}  ]\\n    {V_D_WN}        === [ {VOWELS} {WLONG} * {NULL} ]\\n\\n    {_V_D_}         === [ {_TEHTAR_} {_WLONG_} ]\\n    {_V_D_WN_}      === [ {_TEHTAR_} {_WLONG_} * {NULL} ]\\n\t\t\\n\t\t\\\\** LONE SHORT VOWELS **\\\\\\n    [{VOWELS}]    --> TELCO [{_TEHTAR_}]  \\\\** Replace isolated short vowels **\\\\\\n    \\n\t\t\\\\** LONE LONG VOWELS **\\\\\t\\n\t\t[{LVOWELS}]   --> [{_LONE_LONG_A_} * {_LONE_LONG_E_} * {_LONE_LONG_I_} * {_LONE_LONG_O_} * {_LONE_LONG_U_}]\\n    \\n    [{DIPHTHONGS}] -->   [{_DIPHTHONGS_}]     \\\\**  Replace diphthongs **\\\\\\n    \\n    \\\\** ========================= **\\\\\\n    \\n    {V_D_WN}p     --> PARMA {_V_D_WN_}\\n    {V_D_WN}t     --> TINCO {_V_D_WN_}\\n    {V_D_WN}{K}   --> QUESSE {_V_D_WN_}\\n  \\n    {V_D_WN} b  --> UMBAR {_V_D_WN_}\\n    {V_D_WN} d  --> ANDO {_V_D_WN_}\\n    {V_D_WN} f  --> FORMEN_EXT {_V_D_WN_} \\\\** Beware. **\\\\ \\n    {V_D_WN} g  --> UNGWE {_V_D_WN_}\\n    {V_D_WN} gh --> UNGWE_EXT {_V_D_WN_}\\n    {V_D_WN} h  --> HYARMEN {_V_D_WN_}\\n\\n    \\\\** ======================== **\\\\\\n\\n    {K}h          --> HWESTA\\n    {V_D}{K}h     --> HWESTA_EXT {_V_D_} \\\\** Take care. **\\\\  \\n\\n    \\\\** ======================== **\\\\\\n\\n    {V_D_WN} l  --> LAMBE {_V_D_WN_} \\n\\n    \\\\** ======================== **\\\\\\n\\n    {V_D_WN} m  --> MALTA {_V_D_WN_}\\n    {V_D_WN} mb --> UMBAR {NASAL} {_V_D_WN_}\\n    {V_D_WN} mp --> PARMA {NASAL} {_V_D_WN_}\\n\\n    \\\\** ======================== **\\\\\\n    \\n    {V_D_WN}n   --> NUMEN {_V_D_WN_} \\n    {V_D_WN}n{K}  --> QUESSE {NASAL} {_V_D_WN_} \\n\\n    \\\\** ======================== **\\\\\\n    \\n    \\\\** ROMEN / ORE handling probably not accurate **\\\\\\n    {V_D_WN}r   --> ORE   {_V_D_WN_}\\n    {V_D_WN}R   --> ROMEN {_V_D_WN_}\\n    \\n    \\\\** ======================== **\\\\\\n\\n    s             --> SILME\\n    {V_D} s       --> SILME_NUQUERNA {_V_D_}\\n    z             --> ESSE    \\n    {V_D} z       --> ESSE_NUQUERNA {_V_D_}\\n\\n    \\\\** ======================== **\\\\\\n\\n    sh            --> AHA             \\n    {V_D} sh      --> AHA_EXT {_V_D_} \\\\** BEWARE. **\\\\\\n    \\n\\n    th            --> SULE\\n    \\n    y             --> ANNA\\n\\n  \\\\end\\n  \\n  \\\\beg rules punctuation\\n    . --> PUNCT_DDOT\\n    .. --> PUNCT_DOT PUNCT_DDOT PUNCT_DOT\\n    …  --> PUNCT_TILD\\n    ... --> PUNCT_TILD\\n    .... --> PUNCT_TILD\\n    ..... --> PUNCT_TILD\\n    ...... --> PUNCT_TILD\\n    ....... --> PUNCT_TILD\\n\\n    , --> PUNCT_DOT\\n    : --> PUNCT_DOT\\n    ; --> PUNCT_DOT\\n    ! --> PUNCT_EXCLAM\\n    ? --> PUNCT_INTERR\\n    · --> PUNCT_DOT\\n\\n    \\\\** Apostrophe **\\\\\\n\\n    \\' --> {NULL}\\n    ’ --> {NULL}\\n    \\n    \\\\** NBSP **\\\\\\n    {NBSP} --> NBSP\\n    \\n    \\\\** Quotes **\\\\\\n\\n    “ --> DQUOT_OPEN\\n    ” --> DQUOT_CLOSE\\n    « --> DQUOT_OPEN \\n    » --> DQUOT_CLOSE \\n    \\n    - --> {NULL}     \\n    – --> PUNCT_TILD  \\n    — --> PUNCT_TILD\\n    \\n    [ --> PUNCT_PAREN_L\\n    ] --> PUNCT_PAREN_R\\n    ( --> PUNCT_PAREN_L\\n    ) --> PUNCT_PAREN_R\\n    { --> PUNCT_PAREN_L\\n    } --> PUNCT_PAREN_R\\n    < --> PUNCT_PAREN_L\\n    > --> PUNCT_PAREN_R\\n\\n    \\\\** Not universal between fonts ... **\\\\\\n    $ --> ELVISH_PAREN\\n    ≤ --> RING_MARK_L \\\\** Ring inscription left beautiful stuff **\\\\\\n    ≥ --> RING_MARK_R \\\\** Ring inscription right beautiful stuff **\\\\\\n\\n  \\\\end\\n  \\n  \\\\beg rules numbers\\n    0 --> NUM_0\\n    1 --> NUM_1\\n    2 --> NUM_2\\n    3 --> NUM_3\\n    4 --> NUM_4\\n    5 --> NUM_5\\n    6 --> NUM_6\\n    7 --> NUM_7\\n    8 --> NUM_8\\n    9 --> NUM_9\\n    A --> NUM_10\\n    B --> NUM_11      \\n  \\\\end\\n  \\n\\\\end\\n\\n\\\\beg postprocessor\\n  \\\\resolve_virtuals\\n\\\\end\\n\"\nGlaemscribe.resource_manager.raw_modes[\"gothic\"] = \"\\\\**\\n\\nGlǽmscribe (also written Glaemscribe) is a software dedicated to\\nthe transcription of texts between writing systems, and more \\nspecifically dedicated to the transcription of J.R.R. Tolkien\\'s \\ninvented languages to some of his devised writing systems.\\n\\nCopyright (C) 2015 Benjamin Babut (Talagan).\\n\\nThis program is free software: you can redistribute it and/or modify\\nit under the terms of the GNU Affero General Public License as published by\\nthe Free Software Foundation, either version 3 of the License, or\\nany later version.\\n\\nThis program is distributed in the hope that it will be useful,\\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\nGNU Affero General Public License for more details.\\n\\nYou should have received a copy of the GNU Affero General Public License\\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\\n\\n**\\\\\\n\\n\\\\language \\\"Gothic\\\"\\n\\\\writing  \\\"Gothic Alphabet\\\"\\n\\\\mode     \\\"Gothic - Standard\\\"\\n\\\\version  \\\"0.0.1\\\"\\n\\\\authors  \\\"Historical, impl. Talagan (Benjamin Babut)\\\"\\n\\n\\\\world      primary_related_to_arda\\n\\\\invention  historical\\n\\n\\\\charset  unicode_gothic true\\n\\n\\\\beg      preprocessor\\n  \\\\downcase\\n\\\\end\\n\\n\\\\beg      processor\\n\\n  \\\\beg    rules litteral\\n    (a,ā) --> AZA\\n    b     --> BERCNA\\n    d     --> DAAZ\\n    (e,ē) --> EYZ\\n    f     --> FE\\n    g     --> GEUUA\\n    h     --> HAAL\\n    i     --> IIZ\\n    j     --> GAAR\\n    k     --> CHOZMA\\n    l     --> LAAZ  \\n    m     --> MANNA  \\n    n     --> NOICZ  \\n    (o,ō) --> UTAL \\n    p     --> PERTRA  \\n    q     --> QUETRA\\n    r     --> REDA  \\n    s     --> SUGIL \\n    t     --> TYZ  \\n    þ     --> THYTH \\n    u     --> URAZ  \\n    x     --> ENGUZ  \\n    (w,y) --> UUINNE\\n    z     --> EZEC  \\n    ƕ     --> UUAER\\n\tï     --> IIZ_TREMA\t\\n    _i    --> IIZ_TREMA\\n  \\\\end\\n  \\n  \\\\beg    rules punctuation\\n    , --> COMA\\n    . --> PERIOD\\n    ; --> SEMICOLON\\n  : --> COLON\\n  \\\\end\\n  \\n\\\\end\\n    \\n      \"\nGlaemscribe.resource_manager.raw_modes[\"japanese-tengwar\"] = \"\\\\**\\n\\nGlǽmscribe (also written Glaemscribe) is a software dedicated to\\nthe transcription of texts between writing systems, and more \\nspecifically dedicated to the transcription of J.R.R. Tolkien\\'s \\ninvented languages to some of his devised writing systems.\\n\\nCopyright (C) 2015 Benjamin Babut (Talagan).\\n\\nThis program is free software: you can redistribute it and/or modify\\nit under the terms of the GNU Affero General Public License as published by\\nthe Free Software Foundation, either version 3 of the License, or\\nany later version.\\n\\nThis program is distributed in the hope that it will be useful,\\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\nGNU Affero General Public License for more details.\\n\\nYou should have received a copy of the GNU Affero General Public License\\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\\n\\n**\\\\\\n\\n\\\\beg changelog \\n  \\\\entry \\\"0.0.1\\\" \\\"Initial version\\\"\\n  \\\\entry \\\"0.0.2\\\" \\\"Corrected 億 to 10^8, added support for セィ and ゼィ. Thanks to Roman Rausch for this feedback!\\\"\\n\\\\end\\n\\n\\\\language \\\"Japanese\\\"\\n\\\\writing  \\\"Tengwar\\\"\\n\\\\mode\t\t\t\\\"Japanese Tengwar - G*\\\"\\n\\\\authors\t\\\"Talagan (Benjamin Babut)\\\"\\n\\\\version\t\\\"0.0.2\\\"\\n \\n\\\\world      primary\\n\\\\invention  experimental \\n \\n\\\\raw_mode \\\"raw-tengwar\\\"\\n \\n\\\\charset  tengwar_ds_sindarin false\\n\\\\charset  tengwar_ds_parmaite false\\n\\\\charset  tengwar_ds_eldamar  false\\n\\\\charset  tengwar_ds_annatar  true\\n\\\\charset  tengwar_ds_elfica   false\\n\\n\\\\charset  tengwar_guni_sindarin false\\n\\\\charset  tengwar_guni_parmaite false\\n\\\\charset  tengwar_guni_eldamar  false\\n\\\\charset  tengwar_guni_annatar  false\\n\\\\charset  tengwar_guni_elfica   false\\n\\n\\\\charset  tengwar_freemono    false\\n\\\\charset  tengwar_telcontar   false\\n\\n\\\\beg options\\n\\n\\\\** Vowel options **\\\\\\n  \\\\beg option choon_long_vowels CHOON_CONFLATE\\n    \\\\value CHOON_CONFLATE 0\\n    \\\\value CHOON_KEEP_SEPARATE 1\\n  \\\\end \\n  \\\\** Yoon options **\\\\\\n  \\\\beg option palatal_sign PALATAL_SIGN_UNUTIXE\\n    \\\\value PALATAL_SIGN_UNUTIXE 0\\n    \\\\value PALATAL_SIGN_DOUBLE_UNUTIXE 1\\n  \\\\end\\n  \\n  \\\\** Palatal **\\\\\\n  \\\\beg option gojuon_y GOJUON_Y_USE_YANTA\\n\t  \\\\value GOJUON_Y_USE_TELCO 0\\n\t  \\\\value GOJUON_Y_USE_YANTA 1\\n\t\\\\end\\n  \\n  \\\\** labial **\\\\\\n  \\\\beg option gojuon_w GOJUON_W_USE_URE\\n\t  \\\\value GOJUON_W_USE_TELCO 0\\n\t  \\\\value GOJUON_W_USE_URE 1\\n\t\\\\end\\n\t\t\t\\n  \\\\** Consonant options **\\\\\\n\t\\\\beg option isolated_n ISOLATED_N_USE_NOLDO\\n\t  \\\\value ISOLATED_N_USE_NOLDO 0\\n\t\t\\\\value ISOLATED_N_USE_MODIFIER 1\\n\t\\\\end\\n  \\n  \\\\beg option geminates GEMINATES_USE_HALLA\\n    \\\\value GEMINATES_USE_HALLA 0\\n    \\\\value GEMINATES_USE_MODIFIER 1\\n    \\\\value GEMINATES_DOUBLE_TENGWA 2\\n  \\\\end\\n\\n  \\\\beg option dakuten_h_p_b DAKUTEN_THK\\n    \\\\value DAKUTEN_THK 0 \\\\** JP STYLE **\\\\\\n    \\\\value DAKUTEN_TPK 1 \\\\** ELVISH STYLE **\\\\\\n  \\\\end\\n  \\n  \\\\** Foreign otpions **\\\\\\n  \\\\beg option foreign_labialized FOREIGN_LABIALIZED_DOWN_TEHTA\\n    \\\\value FOREIGN_LABIALIZED_DOWN_TEHTA 0\\n    \\\\value FOREIGN_LABIALIZED_QUESSETEMA 1\\n  \\\\end\\n    \\n  \\\\beg option foreign_f_v FOREIGN_F_V_XTD\\n    \\\\value FOREIGN_F_V_XTD 0\\n    \\\\value FOREIGN_F_V_OVERSTEM 1\\n  \\\\end\\n    \\n  \\\\** Graphical style options **\\\\\\n  \\\\beg option consonant_modification_style CONSONANT_MODIFICATION_STYLE_WAVE\\n    \\\\value CONSONANT_MODIFICATION_STYLE_WAVE 0\\n    \\\\value CONSONANT_MODIFICATION_STYLE_BAR 1\\n  \\\\end    \\n  \\n\\\\end\\n\\n\\\\beg preprocessor\\n\\n  \\\\downcase\\n\\n  \\\\** Normalize explicitly written long vowels **\\\\\\n  \\\\rxsubstitute \\\"[āâàá]\\\" \\\"aー\\\"\\n  \\\\rxsubstitute \\\"[īîíì]\\\" \\\"iー\\\"\\n  \\\\rxsubstitute \\\"[ūûúù]\\\" \\\"uー\\\"\\n  \\\\rxsubstitute \\\"[ēêéè]\\\" \\\"eー\\\"\\n  \\\\rxsubstitute \\\"[ōôóò]\\\" \\\"oー\\\"\\n  \\n  \\\\** Normalize elvish bizarrerie **\\\\\\n  \\\\substitute \\\"ä\\\" \\\"a\\\"\\n  \\\\substitute \\\"ï\\\" \\\"i\\\"\\n  \\\\substitute \\\"ü\\\" \\\"u\\\"\\n  \\\\substitute \\\"ë\\\" \\\"e\\\"\\n  \\\\substitute \\\"ö\\\" \\\"o\\\"\\n\\n  \\\\if \\\"choon_long_vowels == CHOON_CONFLATE\\\"\\n\\n    \\\\** ================== **\\\\\\n    \\\\**        Gojûon      **\\\\\\n    \\\\** ================== **\\\\\\n    \\n    \\\\rxsubstitute \\\"([あアカかさサたタなナはハまマらラがガざザだダばバぱパやヤわワ])[あアー]\\\" \\\"\\\\\\\\1ー\\\"\\n    \\\\rxsubstitute \\\"([いイきキしシちチにニひヒみミりリぎギじジぢヂびビぴピゐヰ])[いイー]\\\" \\\"\\\\\\\\1ー\\\"\\n    \\\\rxsubstitute \\\"([うウくクすスつツぬヌふフむムるルぐグずズづヅぶブぷプゆユ])[うウー]\\\" \\\"\\\\\\\\1ー\\\"\\n    \\\\rxsubstitute \\\"([えエけケせセてテねネへヘめメれレげゲぜゼでデべベぺペゑヱ])[いイー]\\\" \\\"\\\\\\\\1ー\\\"\\n    \\\\rxsubstitute \\\"([おオこコそソとトのノほホもモろロごゴぞゾどドぼボぽポよヨをヲ])[うウー]\\\" \\\"\\\\\\\\1ー\\\"\\n    \\n    \\\\** too, oo . E.G. ookami, too **\\\\\\n    \\\\rxsubstitute \\\"([とトおオ])[おオ]\\\" \\\"\\\\\\\\1ー\\\"\\n    \\\\** nee, ee . E.G. oneesan, nee, ee **\\\\\\n    \\\\rxsubstitute \\\"([ねネえエ])[えエ]\\\" \\\"\\\\\\\\1ー\\\"\\n    \\n    \\\\** ================== **\\\\\\n    \\\\**        Yôon        **\\\\\\n    \\\\** ================== **\\\\\\n\\n    \\\\** Normalization of long vowels : yoon .yâ, .yû, .yô **\\\\\\n    \\\\rxsubstitute \\\"([ゃャ])[あアー]\\\"    \\\"\\\\\\\\1ー\\\"\\n    \\\\rxsubstitute \\\"([ゅュ])[うウー]\\\"    \\\"\\\\\\\\1ー\\\"\\n    \\\\rxsubstitute \\\"([ょョ])[うウー]\\\"    \\\"\\\\\\\\1ー\\\"\\n    \\n    \\\\** ================== **\\\\\\n    \\\\** Rômaji equivalents **\\\\\\n    \\\\** ================== **\\\\\\n    \\n    \\\\**\\n      a ka sa  ta  na ha ma ra ga za da  ba pa ya wa + a = .â     (k|s|t|n|h|m|r|g|z|d|b|p|y|w)\\n      i ki shi chi ni hi mi ri gi ji dji bi pi -  wi + i = .î     (k|sh|ch|n|h|m|r|g|j|dj|b|p|w)\\n      u ku su  tsu nu fu mu ru gu ju dju bu pu yu -  + u = .û     (k|s|ts|n|f|m|r|g|j|dj|b|p|y)\\n      e ke se  te  ne he me re ge ze de  be pe -  we + i = .ê     (k|s|t|n|h|m|r|g|z|d|b|p|w)\\n      o ko so  to  no ho mo ro go zo do  bo po yo wo + u = .ô     (k|s|t|n|h|m|r|g|z|d|b|p|y|w)\\n    **\\\\\\n    \\n    \\\\** Note : this additionally does handle the Yôon through y **\\\\\\n    \\\\rxsubstitute \\\"aa\\\"   \\\"aー\\\"\\n    \\\\rxsubstitute \\\"ii\\\"   \\\"iー\\\"\\n    \\\\rxsubstitute \\\"uu\\\"   \\\"uー\\\"\\n    \\\\rxsubstitute \\\"ei\\\"   \\\"eー\\\"\\n    \\\\rxsubstitute \\\"ou\\\"   \\\"oー\\\"\\n\\n    \\\\** nee, ee . E.G. oneesan, nee, ee. Avoid breaking things like kee. **\\\\\\n    \\\\rxsubstitute \\\"(k|s|t|h|m|r|g|z|d|b|p|w)ee\\\"    \\\"\\\\\\\\1e\\'e\\\"  \\\\** Removed n for nee **\\\\\\n    \\\\rxsubstitute \\\"(k|s|n|h|m|r|g|z|d|b|p|y|w)oo\\\"  \\\"\\\\\\\\1o\\'o\\\"  \\\\** Removed t for too **\\\\\\n    \\\\rxsubstitute \\\"oo\\\" \\\"oー\\\"\\n    \\\\rxsubstitute \\\"ee\\\" \\\"eー\\\"\\n\\n    \\\\** Foreign additional stuff should always use macrons or accents to denote long vowels **\\\\\\n  \\\\endif\\n\t\\n\t\\\\** Normalization of geminates.  Simply introduce っ in romanisation ;) **\\\\\\n\t\\\\rxsubstitute \\\"([tpkcs])\\\\\\\\1\\\" \\\"っ\\\\\\\\1\\\"\\n\t\\\\rxsubstitute \\\"tch\\\" \\\"っch\\\"\\n  \\n\t\\\\** Far less common, maybe even impossible **\\\\\\n  \\\\rxsubstitute \\\"([h])\\\\\\\\1\\\" \\\"っ\\\\\\\\1\\\"      \\n  \\\\rxsubstitute \\\"([dbgz])\\\\\\\\1\\\" \\\"っ\\\\\\\\1\\\"\\n\t\\\\rxsubstitute \\\"([fvl])\\\\\\\\1\\\" \\\"っ\\\\\\\\1\\\" \\n  \\\\rxsubstitute \\\"([rwy])\\\\\\\\1\\\" \\\"っ\\\\\\\\1\\\"\\n\t\\n\t\\\\** Normalization of isolated nasalizer n (&m). Simply introduce ん in romanisation :) **\\\\\\n\t\\\\rxsubstitute \\\"(n|m)([^aeiouy]|$)\\\" \\\"ん\\\\\\\\2\\\"\\n\\n\\\\end\\n\\n\\\\beg processor\\n\t\\\\beg rules litteral\\n  \\n    \\\\** ================================ **\\\\\\n    \\\\**         PREREQUISITES            **\\\\\\n    \\\\** ================================ **\\\\\\n     \\n    \\\\if \\\"consonant_modification_style == CONSONANT_MODIFICATION_STYLE_WAVE\\\"\\n      {GEMINATE} === GEMINATE_SIGN_TILD\\n      {NASAL}    === NASALIZE_SIGN_TILD\\n    \\\\else\\n      {GEMINATE} === GEMINATE_SIGN\\n      {NASAL}    === NASALIZE_SIGN\\n    \\\\endif\\n    \\n    \\\\** Dakuten / Handakuten resolution **\\\\\\n    \\\\if \\\"dakuten_h_p_b == DAKUTEN_THK\\\"\\n      {_P_TENGWA_} === VALA\\n      {_H_TENGWA_} === PARMA\\n    \\\\else\\n      {_P_TENGWA_} === PARMA\\n      {_H_TENGWA_} === VALA\\n    \\\\endif\\n    \\n    {MORAIC_NASAL}        === (ん,ン)\t\t\\n    {SOKUON}              === (っ,ッ)\\n      \\n\t\t{_A_} === A_TEHTA\\n\t\t{_I_} === I_TEHTA\\n\t\t{_U_} === U_TEHTA\\n\t\t{_E_} === E_TEHTA\\n\t\t{_O_} === O_TEHTA\\n\t\t\\n\t\t{_AA_} === A_TEHTA_REVERSED\\n\t\t{_II_} === I_TEHTA_DOUBLE\\n\t\t{_UU_} === U_TEHTA_DOUBLE\\n\t\t{_EE_} === E_TEHTA_DOUBLE\\n\t\t{_OO_} === O_TEHTA_DOUBLE\\n\\n    {_SHORT_VOWELS_}      === [{_A_}  * {_I_}  * {_U_}  * {_E_}  * {_O_}]\\n\t\t{_LONG_VOWELS_}       === [{_AA_} * {_II_} * {_UU_} * {_EE_} * {_OO_}]\\n\\n    {_SHORT_VOWELS_YON_}  === [{_A_} * {_U_} * {_O_}]\\n    {_LONG_VOWELS_YON_}   === [{_AA_} * {_UU_} * {_OO_}]\t\\n        \\n\t\t{NASAL_OR_NOT}        === [{NULL} * {MORAIC_NASAL}]\\n\t\t{GEMINATE_OR_NOT}     === [{NULL} * {SOKUON}]\\n\t\t{MODS}                === {NASAL_OR_NOT} {GEMINATE_OR_NOT}\\n\t\t\\n    \\\\if \\\"palatal_sign == PALATAL_SIGN_UNUTIXE\\\"\\n      {_PALATAL_}             === UNUTIXE\\n    \\\\else                   \\n      {_PALATAL_}             === I_TEHTA_DOUBLE_INF\\n    \\\\endif\\n    \\n\t\t{_NASAL_}                 === {NASAL}\\n\t\t{_GEMINATE_}              === {GEMINATE}\\n    {_LABIAL_}                === U_TEHTA_INF\\n    {_CANCELLER_}             === THINNAS\\n    {_SIBILANT_}              === SARINCE\\n    {_CANCEL_THEN_PALATAL_}   === CIRC_TEHTA_INF\\n    \\n    \\\\** THIS IS OUR GENERAL MACRO FOR JAPANESE. Will be used almost everywhere **\\\\\\n    \\\\beg macro serie ARG_SERIE _ARG_MAIN_TENGWA_ _ARG_SERIE_MODIFIERS_ _ARG_SHORT_VOWELS_ _ARG_LONG_VOWELS_  _ARG_SIB_   \\n      {_PREMODS_}   === {NULL}\\n      {_POSTMODS_}  === {NULL}\\n      {__X__}       === identity\\n      \\\\if \\\"isolated_n == ISOLATED_N_USE_NOLDO\\\"\\n        \\\\if \\\"geminates == GEMINATES_USE_HALLA\\\"\\n          {_PREMODS_}   === [{NULL} * NOLDO][{NULL} * HALLA]\\n        \\\\elsif \\\"geminates == GEMINATES_DOUBLE_TENGWA\\\"  \\n          {_PREMODS_}   === [{NULL} * NOLDO][{NULL} * {_ARG_MAIN_TENGWA_}]\\n        \\\\else\\n          {_PREMODS_}   === [{NULL} * NOLDO]\\n          {_POSTMODS_}  === [{NULL} * {_GEMINATE_}]\\n        \\\\endif\\n      \\\\else \\n        \\\\if \\\"geminates == GEMINATES_USE_HALLA\\\"\\n          {_PREMODS_}   === [{NULL} * HALLA]\\n          {_POSTMODS_}  === [{NULL} * {_NASAL_}]\\n          \\\\** The nasal mark is before the geminate, but their position is reversed at the arrival, so cross rule here **\\\\\\n          {__X__}       === 2,1,3\\n        \\\\elsif \\\"geminates == GEMINATES_DOUBLE_TENGWA\\\"  \\n          \\\\** This case is the most complex because we want :  (Teng Nasal) Teng **/\\n          \\\\** But it can be factorized by cheating because ; **\\\\\\n          \\\\** (Teng Nasal) Teng = Teng (Nasal Teng) **\\\\\\n          {_POSTMODS_}  === [{NULL} * {_NASAL_}][{NULL} * {_ARG_MAIN_TENGWA_}]\\n        \\\\else\\n          {_POSTMODS_}  === [{NULL} * {_NASAL_}][{NULL} * {_GEMINATE_}]\\n        \\\\endif       \\n      \\\\endif\\n      {MODS}{ARG_SERIE}   --> {__X__} --> {_PREMODS_} {_ARG_MAIN_TENGWA_} {_POSTMODS_} {_ARG_SERIE_MODIFIERS_} {_ARG_SHORT_VOWELS_} {_ARG_SIB_}\\n      {MODS}{ARG_SERIE}ー --> {__X__} --> {_PREMODS_} {_ARG_MAIN_TENGWA_} {_POSTMODS_} {_ARG_SERIE_MODIFIERS_} {_ARG_LONG_VOWELS_} {_ARG_SIB_}  \\n    \\\\end\\n    \\n    \\\\** ================================ **\\\\\\n    \\\\**         START OF RULES           **\\\\\\n    \\\\** ================================ **\\\\\\n    \\n\t\t\\\\** Isolated vowels  **\\\\\\n\t\t{GOJUON}   === [(あ,ア,a) * (い,イ,i) * (う,ウ,u) * (え,エ,e) * (お,オ,o)]\\n\t\t{YOON}     === [(や,ヤ,ya) * (ゆ,ユ,yu) * (よ,ヨ,yo)]  \t\\n\t  {GOJUON}   --> TELCO {_SHORT_VOWELS_}\\n\t  {GOJUON}ー  --> TELCO {_LONG_VOWELS_}\\n    \\n    \\\\** Isolated Y serie **\\\\\\n\t\t\\\\if \\\"gojuon_y == GOJUON_Y_USE_YANTA\\\" \\n      {TENGWA}   === YANTA\\n\t\t\\\\else\\n      {TENGWA}   === TELCO {_PALATAL_}\\n\t\t\\\\endif\\n  \t{YOON}   --> {TENGWA}  {_SHORT_VOWELS_YON_}\\n\t  {YOON}ー  --> {TENGWA}  {_LONG_VOWELS_YON_}  \\n    \\n\t\t\\\\** T serie **\\\\\\n\t\t{GOJUON}   === [(た,タ,ta) * (ち,チ,chi) * (つ,ツ,tsu) * (て,テ,te) * (と,ト,to)] \t\\n\t\t{YOON}     === [(ちゃ,チャ,cha) * (ちゅ,チュ,chu) * (ちょ,チョ,cho)]  \t\\n\t\t{TENGWA}   === TINCO\\n\t\t\\n    \\\\deploy serie {GOJUON}  {TENGWA} {NULL}       {_SHORT_VOWELS_}      {_LONG_VOWELS_}       {NULL}\\n    \\\\deploy serie {YOON}    {TENGWA} {_PALATAL_}  {_SHORT_VOWELS_YON_}  {_LONG_VOWELS_YON_}   {NULL}\\n\t\\n\t\t\\\\** P serie **\\\\\\n\t\t{GOJUON}   === [(ぱ,パ,pa) * (ぴ,ピ,pi) * (ぷ,プ,pu) * (ぺ,ペ,pe) * (ぽ,ポ,po)] \t\\n\t\t{YOON}     === [(ぴゃ,ピャ,pya) * (ぴゅ,ピュ,pyu) * (ぴょ,ピョ,pyo)] \\n\t\t{TENGWA}   === {_P_TENGWA_}\\n\t\t\\n    \\\\deploy serie {GOJUON}  {TENGWA} {NULL}       {_SHORT_VOWELS_}      {_LONG_VOWELS_}       {NULL}\\n    \\\\deploy serie {YOON}    {TENGWA} {_PALATAL_}  {_SHORT_VOWELS_YON_}  {_LONG_VOWELS_YON_}   {NULL}\\n\t\\n \t\t\\\\** K serie **\\\\\\n\t\t{GOJUON}   === [(か,カ,ka) * (き,キ,ki) * (く,ク,ku) * (け,ケ,ke) * (こ,コ,ko)] \t\\n\t\t{YOON}     === [(きゃ,キャ,kya) * (きゅ,キュ,kyu) * (きょ,キョ,kyo)]  \\n\t\t{TENGWA}   === CALMA\\n\\n    \\\\deploy serie {GOJUON}  {TENGWA} {NULL}       {_SHORT_VOWELS_}      {_LONG_VOWELS_}       {NULL}\\n    \\\\deploy serie {YOON}    {TENGWA} {_PALATAL_}  {_SHORT_VOWELS_YON_}  {_LONG_VOWELS_YON_}   {NULL}\\n\t\t\\n\t\t\\\\** D serie **\\\\\\n\t\t{GOJUON}   === [(だ,ダ,da) * (ぢ,ヂ,dji) * (づ,ヅ,dzu) * (で,デ,de) * (ど,ド,do)] \\n\t\t{YOON}     === [(ぢゃ,ヂャ,dja) * (ぢゅ,ヂュ,dju) * (ぢょ,ヂョ,djo)] \\n\t\t{TENGWA}   === ANDO\\n\\n    \\\\deploy serie {GOJUON}  {TENGWA} {NULL}       {_SHORT_VOWELS_}      {_LONG_VOWELS_}       {NULL}\\n    \\\\deploy serie {YOON}    {TENGWA} {_PALATAL_}  {_SHORT_VOWELS_YON_}  {_LONG_VOWELS_YON_}   {NULL}\\n\t\t\\n \t\t\\\\** B serie **\\\\\\n\t\t{GOJUON}   === [(ば,バ,ba) * (び,ビ,bi) * (ぶ,ブ,bu) * (べ,ベ,be) * (ぼ,ボ,bo)] \t\\n\t\t{YOON}     === [(びゃ,ビャ,bya) * (びゅ,ビュ,byu) * (びょ,ビョ,byo)] \\n\t\t{TENGWA}   === UMBAR\\n\\n    \\\\deploy serie {GOJUON}  {TENGWA} {NULL}       {_SHORT_VOWELS_}      {_LONG_VOWELS_}       {NULL}\\n    \\\\deploy serie {YOON}    {TENGWA} {_PALATAL_}  {_SHORT_VOWELS_YON_}  {_LONG_VOWELS_YON_}   {NULL}\\n\t\t\\n \t\t\\\\** G Serie **\\\\\\n\t\t{GOJUON}   === [(が,ガ,ga) * (ぎ,ギ,gi) * (ぐ,グ,gu) * (げ,ゲ,ge) * (ご,ゴ,go)] \t\t\t\\n\t\t{YOON}     === [(ぎゃ,ギャ,gya) * (ぎゅ,ギュ,gyu) * (ぎょ,ギョ,gyo)]  \\n\t\t{TENGWA}   === ANGA\\n\\n    \\\\deploy serie {GOJUON}  {TENGWA} {NULL}       {_SHORT_VOWELS_}      {_LONG_VOWELS_}       {NULL}\\n    \\\\deploy serie {YOON}    {TENGWA} {_PALATAL_}  {_SHORT_VOWELS_YON_}  {_LONG_VOWELS_YON_}   {NULL}\\n\t\t\\n\t\t\\\\** N serie **\\\\\t\\n\t\t{GOJUON}   === [(な,ナ,na) * (に,ニ,ni) * (ぬ,ヌ,nu) * (ね,ネ,ne) * (の,ノ,no)] \t\t\t\t\\n\t\t{YOON}     === [(にゃ,ニャ,nya) * (にゅ,ニュ,nyu) * (にょ,ニョ,nyo)] \\n\t\t{TENGWA}   === NUMEN\\n\\n    \\\\deploy serie {GOJUON}  {TENGWA} {NULL}       {_SHORT_VOWELS_}      {_LONG_VOWELS_}       {NULL}\\n    \\\\deploy serie {YOON}    {TENGWA} {_PALATAL_}  {_SHORT_VOWELS_YON_}  {_LONG_VOWELS_YON_}   {NULL}\\n\t\t{MORAIC_NASAL} --> NOLDO\\n\t\t\\n\t\t\\\\** M serie **\\\\\t\\n\t\t{GOJUON}   === [(ま,マ,ma) * (み,ミ,mi) * (む,ム,mu) * (め,メ,me) * (も,モ,mo)] \t\t\t\t\t\\n\t\t{YOON}     === [(みゃ,ミャ,mya) * (みゅ,ミュ,myu) * (みょ,ミョ,myo)] \\n\t\t{TENGWA}   === MALTA\\n\\n    \\\\deploy serie {GOJUON}  {TENGWA} {NULL}       {_SHORT_VOWELS_}      {_LONG_VOWELS_}       {NULL}\\n    \\\\deploy serie {YOON}    {TENGWA} {_PALATAL_}  {_SHORT_VOWELS_YON_}  {_LONG_VOWELS_YON_}   {NULL}\\n\\n\t\t\\\\** H serie **\\\\\t\\n\t\t{GOJUON}   === [(は,ハ,ha) * (ひ,ヒ,hi) * (ふ,フ,fu) * (へ,ヘ,he) * (ほ,ホ,ho)] \t\t\t\t\t\\n\t\t{YOON}     === [(ひゃ,ヒャ,hya) * (ひゅ,ヒュ,hyu) * (ひょ,ヒョ,hyo)] \\n\t\t{TENGWA}   === {_H_TENGWA_}\\n\\n    \\\\deploy serie {GOJUON}  {TENGWA} {NULL}       {_SHORT_VOWELS_}      {_LONG_VOWELS_}       {NULL}\\n    \\\\deploy serie {YOON}    {TENGWA} {_PALATAL_}  {_SHORT_VOWELS_YON_}  {_LONG_VOWELS_YON_}   {NULL}\\n\t\t\\n\t\t\\\\** S serie **\\\\\\n\t\t{GOJUON}   === [(さ,サ,sa) * (し,シ,shi) * (す,ス,su) * (せ,セ,se) * (そ,ソ,so)] \t\t\t\t\t\\n\t\t{YOON}     === [(しゃ,シャ,sha) * (しゅ,シュ,shu) * (しょ,ショ,sho)] \\n\t\t{TENGWA}   === SILME_NUQUERNA\\n\\n    \\\\deploy serie {GOJUON}  {TENGWA} {NULL}       {_SHORT_VOWELS_}      {_LONG_VOWELS_}       {NULL}\\n    \\\\deploy serie {YOON}    {TENGWA} {_PALATAL_}  {_SHORT_VOWELS_YON_}  {_LONG_VOWELS_YON_}   {NULL}\\n\t\t\\n\t\t\\\\** Z serie **\\\\\\n\t\t{GOJUON}   === [(ざ,ザ,za) * (じ,ジ,ji) * (ず,ズ,zu) * (ぜ,ゼ,ze) * (ぞ,ゾ,zo)] \t\t\t\t\t\\n\t\t{YOON}     === [(じゃ,ジャ,ja) * (じゅ,ジュ,ju) * (じょ,ジョ,jo)] \\n\t\t{TENGWA}   === ESSE_NUQUERNA\\n\\n    \\\\deploy serie {GOJUON}  {TENGWA} {NULL}       {_SHORT_VOWELS_}      {_LONG_VOWELS_}       {NULL}\\n    \\\\deploy serie {YOON}    {TENGWA} {_PALATAL_}  {_SHORT_VOWELS_YON_}  {_LONG_VOWELS_YON_}   {NULL}\\n\\n\t  \\\\** R serie **\\\\\\n\t\t{GOJUON}   === [(ら,ラ,ra) * (り,リ,ri) * (る,ル,ru) * (れ,レ,re) * (ろ,ロ,ro)] \t\t\t\t\t\\n\t\t{YOON}     === [(りゃ,リャ,rya) * (りゅ,リュ,ryu) * (りょ,リョ,ryo)] \\n\t\t{TENGWA}   === ROMEN\\n\\n    \\\\deploy serie {GOJUON}  {TENGWA} {NULL}       {_SHORT_VOWELS_}      {_LONG_VOWELS_}       {NULL}\\n    \\\\deploy serie {YOON}    {TENGWA} {_PALATAL_}  {_SHORT_VOWELS_YON_}  {_LONG_VOWELS_YON_}   {NULL}\\n\t\t\\n\t\t\\\\** W serie **\\\\\\n\t\t{GOJUON}   === [(わ,ワ,wa) * (ゐ,ヰ,wi) * (ゑ,ヱ,we) ] \t\t\t\t\\n\t\t\\\\if \\\"gojuon_w == GOJUON_W_USE_URE\\\" \\n      {TENGWA}   === URE\\n\t\t\\\\else\\n\t\t  {TENGWA}   === TELCO {_LABIAL_}\\n    \\\\endif\\n    \\n    {__SV__} === [{_A_} * {_I_} * {_E_}]\\n    {__LV__} === [{_AA_} * {_II_} * {_EE_}]   \\n    \\\\deploy serie {GOJUON}  {TENGWA} {NULL} {__SV__} {__LV__} {NULL}\\n\t\t\\n\t  \\\\** SPECIALS **\\\\\\n    (へ,he,e){ASTERISK} --> NUM_12\\n\t\t(は,ha,wa){ASTERISK} --> HWESTA_SINDARINWA\\n\t  (を,ヲ,wo,を{ASTERISK},ヲ{ASTERISK},wo{ASTERISK},o{ASTERISK}) --> VAIA\\n    {ASTERISK} --> {NULL}\\n    \\n    \\\\** ***************** **\\\\\\n    \\\\** Extended katakana **\\\\\\n    \\\\** ***************** **\\\\\\n    \\n    \\\\if \\\"foreign_f_v == FOREIGN_F_V_XTD\\\"\\n      {_FOREIGN_F_} === TW_EXT_12\\n      {_FOREIGN_V_} === TW_EXT_22\\n    \\\\else\\n      {_FOREIGN_F_} === FORMEN\\n      {_FOREIGN_V_} === AMPA      \\n    \\\\endif  \\n    \\n    {SERIE}  === [(イィ,yi) * (イェ,ye)]\\n\t\t\\\\if \\\"gojuon_y == GOJUON_Y_USE_YANTA\\\" \\n      {TENGWA}   === YANTA\\n\t\t\\\\else\\n      {TENGWA}   === TELCO {_PALATAL_}\\n\t\t\\\\endif\\n\t\t{SERIE}     --> {TENGWA}  [{_I_} * {_E_}]\\n\t\t{SERIE}ー   --> {TENGWA}  [{_II_} * {_EE_}]\\n    \\n    \\\\** wa, wi, wu, we, wo **\\\\\\n    \\\\** wa, wi, we - these latin combinations where already defined above **\\\\\\n    {SERIE}   === [(ウァ,wa) * (ウィ,wi) * (ウゥ,wu) * (ウェ,we) * (ウォ,wo)] \\n\t\t\\\\if \\\"gojuon_w == GOJUON_W_USE_URE\\\" \\n      {TENGWA}   === URE\\n\t\t\\\\else\\n\t\t  {TENGWA}   === TELCO {_LABIAL_}\\n    \\\\endif\\n    \\n    \\\\deploy serie {SERIE}  {TENGWA} {NULL} {_SHORT_VOWELS_} {_LONG_VOWELS_} {NULL}\\n    \\n    {SERIE}  === [(ウュ,wyu)]\\n    {TENGWA} === URE \\\\** only possibility : palatal + labial interfere so telco + labial + palatal will not work **\\\\\\n    {__SV__} === [{_U_}]\\n    {__LV__} === [{_UU_}]   \\n    \\\\deploy serie {SERIE}  {TENGWA} {_PALATAL_} {__SV__} {__LV__} {NULL}\\n    \\n    \\\\** va vi vu ve vo **\\\\\\n\t\t{SERIE}   === [(ヴァ,ヷ,va) * (ヴィ,ヸ,vi) * (ヴ,vu) * (ヴェ,ヹ,ve) * (ヴォ,ヺ,vo)] \\n\t\t{TENGWA}  === {_FOREIGN_V_}\\n    \\\\deploy serie {SERIE}  {TENGWA} {NULL} {_SHORT_VOWELS_} {_LONG_VOWELS_} {NULL}\\n\\n\t\t\\n    \\\\** v yon : vya vyu vye vyo **\\\\\\n\t\t{SERIE}   === [(ヴャ,vya) * (ヴュ,vyu) * (ヴィェ,vye) * (ヴョ,vyo)] \\n\t\t{TENGWA}  === {_FOREIGN_V_}  \\n    {__SV__} === [{_A_} * {_U_} * {_E_} * {_O_}]\\n    {__LV__} === [{_AA_} * {_UU_} * {_EE_} * {_OO_}]\\n    \\\\deploy serie {SERIE}  {TENGWA} {_PALATAL_} {__SV__} {__LV__} {NULL}\\n     \\n    \\\\** kye **\\\\\\n\t\t{SERIE}   === [(キェ,kye)]\\n    {TENGWA}  === CALMA\\n    {__SV__} === [{_E_}]\\n    {__LV__} === [{_EE_}]\\n    \\\\deploy serie {SERIE}  {TENGWA} {_PALATAL_} {__SV__} {__LV__} {NULL}\\n\\n    \\\\** gye **\\\\\\n\t\t{SERIE}   === [(ギェ,gye)]\\n    {TENGWA}  === ANGA\\n    {__SV__} === [{_E_}]\\n    {__LV__} === [{_EE_}]\\n    \\\\deploy serie {SERIE}  {TENGWA} {_PALATAL_} {__SV__} {__LV__} {NULL}\\n      \\n    \\\\if \\\"foreign_labialized == FOREIGN_LABIALIZED_DOWN_TEHTA\\\"      \\n      {_FOREIGN_KW_} === CALMA\\n      {_FOREIGN_GW_} === ANGA\\n      {_FOREIGN_LABIALIZED_DIACRITIC_} === {_LABIAL_}\\n    \\\\else\\n      {_FOREIGN_KW_} === QUESSE\\n      {_FOREIGN_GW_} === UNGWE\\n      {_FOREIGN_LABIALIZED_DIACRITIC_} === {NULL}\\n    \\\\endif\\n                  \\n    \\\\** kWa, kWa, kwi, kwe, kwo **\\\\\\n\t\t{SERIE}   === [(クァ,クヮ,kwa) * (クィ,kwi) * (クェ,kwe) * (クォ,kwo)]\\n    {TENGWA}  === {_FOREIGN_KW_}\\n    {__SV__} === [{_A_} * {_I_} * {_E_} * {_O_}]\\n    {__LV__} === [{_AA_} * {_II_} * {_EE_} * {_OO_}]\\n    \\\\deploy serie {SERIE}  {TENGWA} {_FOREIGN_LABIALIZED_DIACRITIC_}  {__SV__} {__LV__} {NULL}\\n    \\n      \\n    \\\\** gwa, gWa, gwi, gwe, gwo **\\\\\\n\t\t{SERIE}   === [(グァ,グヮ,gwa) * (グィ,gwi) * (グェ,gwe) * (グォ,gwo)]\\n    {TENGWA}  === {_FOREIGN_GW_}\\n    {__SV__} === [{_A_} * {_I_} * {_E_} * {_O_}]\\n    {__LV__} === [{_AA_} * {_II_} * {_EE_} * {_OO_}]\\n    \\\\deploy serie {SERIE}  {TENGWA} {_FOREIGN_LABIALIZED_DIACRITIC_}  {__SV__} {__LV__} {NULL}\\n\t   \\n    \\\\** she **\\\\\\n\t\t{SERIE}     === [(シェ,she)] \\n\t\t{TENGWA}    === SILME_NUQUERNA\\n    {__SV__} === [{_E_}]\\n    {__LV__} === [{_EE_}]\\n    \\\\deploy serie {SERIE}  {TENGWA} {_PALATAL_}  {__SV__} {__LV__} {NULL}\\n\\n   \\n    \\\\** je **\\\\    \\n\t\t{SERIE}     === [(ジェ,je)] \\n\t\t{TENGWA}    === ESSE_NUQUERNA\\n    {__SV__} === [{_E_}]\\n    {__LV__} === [{_EE_}]\\n    \\\\deploy serie {SERIE}  {TENGWA} {_PALATAL_}  {__SV__} {__LV__} {NULL}\\n  \\n    \\\\** si **\\\\\\n\t\t{SERIE}     === [(スィ,セィ,si)] \\n\t\t{TENGWA}    === SILME_NUQUERNA\\n    {__SV__} === [{_I_}]\\n    {__LV__} === [{_II_}]\\n    \\\\deploy serie {SERIE}  {TENGWA} {_CANCELLER_}  {__SV__} {__LV__} {NULL}\\n\t\\n    \\\\** zi **\\\\\\n\t\t{SERIE}   === [(ズィ,ゼィ,zi)] \\n\t\t{TENGWA}  === ESSE_NUQUERNA\\n    {__SV__}  === [{_I_}]\\n    {__LV__}  === [{_II_}]\\n    \\\\deploy serie {SERIE}  {TENGWA} {_CANCELLER_}  {__SV__} {__LV__} {NULL}\\n    \\n    \\\\** che **\\\\\\n\t\t{SERIE}   === [(チェ,che)] \\n\t\t{TENGWA}  === TINCO\\n    {__SV__}  === [{_E_}]\\n    {__LV__}  === [{_EE_}]\\n    \\\\deploy serie {SERIE}  {TENGWA} {_PALATAL_}  {__SV__} {__LV__} {NULL}\\n    \\n    \\\\** tsa, tsi, tse, tso **\\\\\\n    {SERIE}   === [(ツァ,tsa) * (ツィ,tsi) * (ツェ,tse) * (ツォ,tso)] \t\\n\t\t{TENGWA}  === TINCO\\n    {__SV__}  === [{_A_} * {_I_} * {_E_} * {_O_}]\\n    {__LV__}  === [{_AA_} * {_II_} * {_EE_} * {_OO_}]\\n    \\\\deploy serie {SERIE}  {TENGWA} {NULL}  {__SV__} {__LV__} {_SIBILANT_}\\n    \\n    \\\\** tsyu = t sibilant + palatale + u **\\\\\\n    {SERIE}   === [(ツュ,tsyu)] \t\\n\t\t{TENGWA}  === TINCO\\n    {__SV__}  === [{_U_}]\\n    {__LV__}  === [{_UU_}]\\n    \\\\deploy serie {SERIE} {TENGWA} {_PALATAL_} {__SV__} {__LV__} {_SIBILANT_}\\n    \\n\t  \\n    \\\\** ti, tu **\\\\\\n    {SERIE}   === [(ティ,ti) * (トゥ,tu)] \t\\n\t\t{TENGWA}  === TINCO\\n    {__SV__}  === [{_I_} * {_U_}]\\n    {__LV__}  === [{_II_} * {_UU_}]\\n    \\\\deploy serie {SERIE} {TENGWA} {_CANCELLER_} {__SV__} {__LV__} {NULL}\\n    \\n    \\\\** tyu **\\\\\\n    {SERIE}   === [(テュ,tyu)] \t\\n\t\t{TENGWA}  === TINCO\\n    {__SV__}  === [{_U_}]\\n    {__LV__}  === [{_UU_}]\\n    \\\\deploy serie {SERIE} {TENGWA} {_CANCEL_THEN_PALATAL_} {__SV__} {__LV__} {NULL}\\n\\n    \\\\** di, du **\\\\\\n    {SERIE}   === [(ディ,di) * (ドゥ,du)] \t\\n\t\t{TENGWA}  === ANDO\\n    {__SV__}  === [{_I_} * {_U_}]\\n    {__LV__}  === [{_II_} * {_UU_}]\\n    \\\\deploy serie {SERIE} {TENGWA} {_CANCELLER_} {__SV__} {__LV__} {NULL}\\n\\n    \\\\** dyu **\\\\\\n    {SERIE}   === [(デュ,dyu)] \t\\n\t\t{TENGWA}  === ANDO\\n    {__SV__}  === [{_U_}]\\n    {__LV__}  === [{_UU_}]\\n    \\\\deploy serie {SERIE} {TENGWA} {_CANCEL_THEN_PALATAL_} {__SV__} {__LV__} {NULL}\\n   \\n    \\\\** nye **\\\\\\n\t\t{SERIE}   === [(ニェ,nye)]\\n    {TENGWA}  === NUMEN\\n    {__SV__}  === [{_E_}]\\n    {__LV__}  === [{_EE_}]\\n    \\\\deploy serie {SERIE}  {TENGWA} {_PALATAL_}  {__SV__} {__LV__} {NULL}\\n\\n    \\\\** hye **\\\\\\n\t\t{SERIE}   === [(ヒェ,hye)]\\n    {TENGWA}  === {_H_TENGWA_}\\n    {__SV__}  === [{_E_}]\\n    {__LV__}  === [{_EE_}]\\n    \\\\deploy serie {SERIE}  {TENGWA} {_PALATAL_}  {__SV__} {__LV__} {NULL}\\n    \\n    \\\\** bye **\\\\\\n\t\t{SERIE}   === [(ビェ,bye)]\\n    {TENGWA}  === UMBAR\\n    {__SV__}  === [{_E_}]\\n    {__LV__}  === [{_EE_}]\\n    \\\\deploy serie {SERIE}  {TENGWA} {_PALATAL_}  {__SV__} {__LV__} {NULL}\\n\\n    \\\\** pye **\\\\\\n\t\t{SERIE}   === [(ピェ,pye)]\\n    {TENGWA}  === {_P_TENGWA_}\\n    {__SV__}  === [{_E_}]\\n    {__LV__}  === [{_EE_}]\\n    \\\\deploy serie {SERIE}  {TENGWA} {_PALATAL_}  {__SV__} {__LV__} {NULL}\\n\\n    \\\\** fa, fi, fu, fe, fo **\\\\\\n\t\t{SERIE}   === [(ファ,fa) * (フィ,fi) * (フェ,fe) * (フォ,fo)] \\n\t\t{TENGWA}  === {_FOREIGN_F_}\\n    {__SV__} === [{_A_} * {_I_} * {_E_} * {_O_}]\\n    {__LV__} === [{_AA_} * {_II_} * {_EE_} * {_OO_}]\\n    \\\\deploy serie {SERIE}  {TENGWA} {NULL}  {__SV__} {__LV__} {NULL}\\n\\n    \\\\** fya, fyu, fye, fyo **\\\\\\n\t\t{SERIE}   === [(フャ,fya) * (フュ,fyu) * (フィェ,fye) * (フョ,fyo)] \\n\t\t{TENGWA}  === {_FOREIGN_F_}\\n    {__SV__} === [{_A_} * {_U_} * {_E_} * {_O_}]\\n    {__LV__} === [{_AA_} * {_UU_} * {_EE_} * {_OO_}]\\n    \\\\deploy serie {SERIE}  {TENGWA} {_PALATAL_} {__SV__} {__LV__} {NULL}\\n    \\n    \\\\** hu **\\\\\\n\t\t{SERIE}   === [(ホゥ,hu)]\\n    {TENGWA}  === {_H_TENGWA_}\\n    {__SV__}  === [{_U_}]\\n    {__LV__}  === [{_UU_}]\\n    \\\\deploy serie {SERIE} {TENGWA} {_CANCELLER_} {__SV__} {__LV__} {NULL}\\n    \\n    \\\\** mye **\\\\\\n\t\t{SERIE}   === [(ミェ,mye)]\\n    {TENGWA}  === MALTA\\n    {__SV__}  === [{_E_}]\\n    {__LV__}  === [{_EE_}]\\n    \\\\deploy serie {SERIE}  {TENGWA} {_PALATAL_}  {__SV__} {__LV__} {NULL}\\n    \\n    \\\\** rye **\\\\\\n\t\t{SERIE}   === [(リェ,rye)]\\n    {TENGWA}  === ROMEN\\n    {__SV__}  === [{_E_}]\\n    {__LV__}  === [{_EE_}]\\n    \\\\deploy serie {SERIE}  {TENGWA} {_PALATAL_}  {__SV__} {__LV__} {NULL}\\n  \\n    \\\\** la, li, lu, le, lo / sons of the patriots **\\\\\\n\t\t{SERIE}   === [(ラ゜,la) * (リ゜,li) * (ル゜ ,lu) * (レ゜,le) * (ロ゜,lo)] \t\t\t\t\t\\n\t\t{TENGWA}  === LAMBE\\n    \\\\deploy serie {SERIE}  {TENGWA} {NULL} {_SHORT_VOWELS_} {_LONG_VOWELS_} {NULL}\\n    \\n\t\\\\end\\n  \\n  \\\\beg rules punctuation\\n    . --> PUNCT_DDOT\\n\t\t。 --> PUNCT_DDOT\\n    .. --> PUNCT_DOT PUNCT_DDOT PUNCT_DOT\\n    …  --> PUNCT_TILD\\n    ‥  --> PUNCT_TILD \\\\** JP tensen **\\\\\\n    ... --> PUNCT_TILD\\n    .... --> PUNCT_TILD\\n    ..... --> PUNCT_TILD\\n    ...... --> PUNCT_TILD\\n    ....... --> PUNCT_TILD\\n\\n    , --> PUNCT_DOT\\n\t\t、 --> PUNCT_DOT\\n    : --> PUNCT_DOT\\n    ; --> PUNCT_DOT\\n    ! --> PUNCT_EXCLAM\\n    ? --> PUNCT_INTERR\\n    · --> PUNCT_DOT\\n    ・ --> {NULL} \\\\** JP middle dot **\\\\\\n    ゠ --> {NULL} \\\\** JP daburu haifun **\\\\\\n\\n    \\\\** Apostrophe **\\\\\\n\\n    \\' --> {NULL}\\n    ’ --> {NULL}\\n    \\n    \\\\** NBSP **\\\\\\n    {NBSP} --> NBSP\\n    \\n    \\\\** Quotes **\\\\\\n\\n    “ --> DQUOT_OPEN\\n    ” --> DQUOT_CLOSE\\n    « --> DQUOT_OPEN\\n    » --> DQUOT_CLOSE\\n    \\n    \\\\** JP Quotes **\\\\\\n    「 -->  DQUOT_OPEN\\n    」 -->  DQUOT_CLOSE\\n\\n    - --> {NULL}\\n    – --> PUNCT_TILD\\n    — --> PUNCT_TILD\\n    \\n    〜 --> PUNCT_TILD \\\\** JP Tild **\\\\\\n    ～ --> PUNCT_TILD \\\\** JP Tild **\\\\\\n\\n    [ --> PUNCT_PAREN_L\\n    ] --> PUNCT_PAREN_R\\n    ( --> PUNCT_PAREN_L\\n    ) --> PUNCT_PAREN_R\\n    { --> PUNCT_PAREN_L\\n    } --> PUNCT_PAREN_R\\n    < --> PUNCT_PAREN_L\\n    > --> PUNCT_PAREN_R\\n    \\n    \\\\** JP Paren **\\\\\\n   （  --> PUNCT_PAREN_L\\n    ） --> PUNCT_PAREN_R\\n    (［,〔,｛,｟,〈,《,【,〖,〘,〚) --> PUNCT_PAREN_L   \\n    (］,〕,｝,｠,〉,》,】,〗,〙,〛) --> PUNCT_PAREN_R\\n\\n    \\\\** Not universal between fonts ... **\\\\\\n    $ --> ELVISH_PAREN\\n    ≤ --> RING_MARK_L \\\\** Ring inscription left beautiful stuff **\\\\\\n    ≥ --> RING_MARK_R \\\\** Ring inscription right beautiful stuff **\\\\\\n\\n\t\\\\end\\n  \\n  \\\\beg rules \\\"numbers\\\"\\n    (〇,零) --> NUM_0\\n    一 --> NUM_1\\n    二 --> NUM_2\\n    三 --> NUM_3\\n    四 --> NUM_4\t\\n    五 --> NUM_5\t\\n    六 --> NUM_6\t\\n    七 --> NUM_7\t\\n    八 --> NUM_8\t\\n    九 --> NUM_9\t\\n    十 --> NUM_1 CIRC_TEHTA_INF\\n    百 --> NUM_2 CIRC_TEHTA_INF\\n    千 --> NUM_3 CIRC_TEHTA_INF\\n    万 --> NUM_4 CIRC_TEHTA_INF\\n    億 --> NUM_8 CIRC_TEHTA_INF\\n    0 --> NUM_0\\n    1 --> NUM_1\\n    2 --> NUM_2\\n    3 --> NUM_3\\n    4 --> NUM_4\\n    5 --> NUM_5\\n    6 --> NUM_6\\n    7 --> NUM_7\\n    8 --> NUM_8\\n    9 --> NUM_9\\n  \\\\end\\n  \\n\\\\end\\n\\n\\n\\n\\\\beg postprocessor\\n  \\\\resolve_virtuals\\n\\\\end\"\nGlaemscribe.resource_manager.raw_modes[\"khuzdul-cirth-moria\"] = \"\\\\**\\n\\nGlǽmscribe (also written Glaemscribe) is a software dedicated to\\nthe transcription of texts between writing systems, and more \\nspecifically dedicated to the transcription of J.R.R. Tolkien\\'s \\ninvented languages to some of his devised writing systems.\\n\\nCopyright (C) 2015 Benjamin Babut (Talagan).\\n\\nThis program is free software: you can redistribute it and/or modify\\nit under the terms of the GNU Affero General Public License as published by\\nthe Free Software Foundation, either version 3 of the License, or\\nany later version.\\n\\nThis program is distributed in the hope that it will be useful,\\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\nGNU Affero General Public License for more details.\\n\\nYou should have received a copy of the GNU Affero General Public License\\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\\n\\n**\\\\\\n\\n\\\\beg changelog\\n  \\\\entry \\\"0.0.2\\\", \\\"Moved outspace character to general element\\\"\\n  \\\\entry \\\"0.0.3\\\", \\\"Adding missing long ô\\\"\\n\\\\end\\n\\n\\\\language \\\"Khuzdul\\\"\\n\\\\writing  \\\"Cirth\\\"\\n\\\\mode     \\\"Khuzdul Cirth - Angerthas Moria\\\"\\n\\\\version  \\\"0.0.3\\\"\\n\\\\authors  \\\"J.R.R. Tolkien, impl. Talagan (Benjamin Babut)\\\"\\n\\n\\\\world      arda\\n\\\\invention  jrrt\\n\\n\\\\charset  cirth_ds true\\n\\n\\\\** We redefine the output space to have something beautiful, especially with erebor1 and erebor2 **\\\\ \\n\\\\outspace CIRTH_SPACE_BIG\\n\\n\\\\beg      preprocessor\\n  \\\\** Work exclusively downcase **\\\\\\n  \\\\downcase\\n  \\n  \\\\** Simplify trema vowels **\\\\\\n  \\\\substitute \\\"ä\\\" \\\"a\\\"\\n  \\\\substitute \\\"ë\\\" \\\"e\\\"\\n  \\\\substitute \\\"ï\\\" \\\"i\\\"\\n  \\\\substitute \\\"ö\\\" \\\"o\\\"\\n  \\\\substitute \\\"ü\\\" \\\"u\\\"\\n  \\\\substitute \\\"ÿ\\\" \\\"y\\\"\\n  \\n  \\\\** Dis-ambiguate long vowels **\\\\\\n  \\\\rxsubstitute \\\"(ā|â|aa)\\\" \\\"â\\\"\\n  \\\\rxsubstitute \\\"(ē|ê|ee)\\\" \\\"ê\\\"\\n  \\\\rxsubstitute \\\"(ī|î|ii)\\\" \\\"î\\\"\\n  \\\\rxsubstitute \\\"(ō|ô|oo)\\\" \\\"ô\\\"\\n  \\\\rxsubstitute \\\"(ū|û|uu)\\\" \\\"û\\\"\\n  \\\\rxsubstitute \\\"(ȳ|ŷ|yy)\\\" \\\"ŷ\\\"\\n\\\\end\\n\\n\\\\beg      processor\\n\\n  \\\\beg    rules litteral\\n    a --> CIRTH_48\\n    â --> CIRTH_49\\n    \\n    e --> CIRTH_46\\n    ê --> CIRTH_47\\n\\n    i --> CIRTH_39\\n    î --> CIRTH_39 CIRTH_39\\n\\n    o --> CIRTH_50\\n    ô --> CIRTH_51\\n\\n    u --> CIRTH_42\\n    û --> CIRTH_43\\n\\n    b   --> CIRTH_2\\n    d   --> CIRTH_9\\n    f   --> CIRTH_3\\n    g   --> CIRTH_19\\n    h   --> CIRTH_34\\n    gh  --> CIRTH_19 CIRTH_34\\n    k   --> CIRTH_18\\n    l   --> CIRTH_31\\n    m   --> CIRTH_6\\n    n   --> CIRTH_22\\n    nd  --> CIRTH_33\\n    r   --> CIRTH_12\\n    s   --> CIRTH_54\\n    t   --> CIRTH_8\\n    sh  --> CIRTH_15\\n    th  --> CIRTH_8 CIRTH_59\\n    z   --> CIRTH_17\\n\\n    k   --> CIRTH_18\\n    kh  --> CIRTH_18 CIRTH_59    \\n  \\\\end\\n  \\n  \\\\beg    rules punctuation\\n    . --> CIRTH_PUNCT_THREE_DOTS\\n    .. --> CIRTH_PUNCT_THREE_DOTS\\n    ... --> CIRTH_PUNCT_THREE_DOTS\\n    …   --> CIRTH_PUNCT_THREE_DOTS\\n    .... --> CIRTH_PUNCT_THREE_DOTS\\n    ..... --> CIRTH_PUNCT_THREE_DOTS\\n    ...... --> CIRTH_PUNCT_THREE_DOTS\\n    ....... --> CIRTH_PUNCT_THREE_DOTS\\n\\n    , --> CIRTH_PUNCT_MID_DOT\\n    : --> CIRTH_PUNCT_TWO_DOTS\\n    ; --> CIRTH_PUNCT_TWO_DOTS\\n    ! --> CIRTH_PUNCT_THREE_DOTS\\n    ? --> CIRTH_PUNCT_THREE_DOTS\\n    · --> CIRTH_PUNCT_MID_DOT\\n\\n    - --> CIRTH_PUNCT_MID_DOT\\n    – --> CIRTH_PUNCT_TWO_DOTS  \\n    — --> CIRTH_PUNCT_TWO_DOTS\\n\\n    \\\\** Apostrophe **\\\\\\n\\n    \\' --> {NULL}\\n    ’ --> {NULL}\\n\\n    \\\\** Quotes **\\\\\\n\\n    “ --> {NULL}\\n    ” --> {NULL}\\n    « --> {NULL} \\n    » --> {NULL} \\n\\n    [ --> CIRTH_PUNCT_THREE_DOTS_L\\n    ] --> CIRTH_PUNCT_THREE_DOTS_L\\n    ( --> CIRTH_PUNCT_THREE_DOTS_L\\n    ) --> CIRTH_PUNCT_THREE_DOTS_L\\n    { --> CIRTH_PUNCT_THREE_DOTS_L\\n    } --> CIRTH_PUNCT_THREE_DOTS_L\\n    < --> CIRTH_PUNCT_THREE_DOTS_L\\n    > --> CIRTH_PUNCT_THREE_DOTS_L\\n\\n    / --> CIRTH_PUNCT_FOUR_DOTS\\n  \\\\end\\n\\\\end\\n\"\nGlaemscribe.resource_manager.raw_modes[\"old_english-futhorc\"] = \"\\\\**\\n\\nGlǽmscribe (also written Glaemscribe) is a software dedicated to\\nthe transcription of texts between writing systems, and more \\nspecifically dedicated to the transcription of J.R.R. Tolkien\\'s \\ninvented languages to some of his devised writing systems.\\n\\nCopyright (C) 2015 Benjamin Babut (Talagan).\\n\\nThis program is free software: you can redistribute it and/or modify\\nit under the terms of the GNU Affero General Public License as published by\\nthe Free Software Foundation, either version 3 of the License, or\\nany later version.\\n\\nThis program is distributed in the hope that it will be useful,\\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\nGNU Affero General Public License for more details.\\n\\nYou should have received a copy of the GNU Affero General Public License\\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\\n\\n**\\\\\\n\\n\\\\beg changelog\\n  \\\\entry \\\"0.0.1\\\" \\\"Initial version\\\"\\n  \\\\entry \\\"0.0.2\\\" \\\"Adding quotes handling\\\"\\n\\\\end\\n\\n\\\\language \\\"Old English\\\"\\n\\\\writing  \\\"Runes\\\"\\n\\\\mode     \\\"Old English Futhorc\\\"\\n\\\\version  \\\"0.0.2\\\"\\n\\\\authors  \\\"Historical impl. Bertrand Bellet\\\"\\n\\n\\\\world      primary_related_to_arda\\n\\\\invention  historical\\n\\n\\\\charset  unicode_runes true\\n\\n\\\\beg options\\n  \\\\option use_cweorth                     true\\n  \\\\option use_stan                        true\\n  \\\\option use_calc_and_gar                true\\n\\\\end\\n\\n\\\\beg      preprocessor\\n  \\\\downcase\\n\\\\end\\n\\n\\\\beg      processor\\n    \\n  \\\\beg    rules litteral\\n    {A}       === (a,á) \\n    {E}       === (e,é) \\n    {I}       === (i,í)\\n    {O}       === (o,ó)\\n    {U}       === (u,ú)\\n    {Y}       === (y,ý)\\n    {AE}      === (æ,ǽ)\\n    {OE}      === (œ,œ́)\\n    {EA}      === (ea,éa)\\n    {EO}      === (eo,éo)\\n    {IO}      === (io,ío)\\n\\n    \\\\**  VOWELS **\\\\\\n\\n    {A}       --> AC\\n    {E}       --> EH\\n    {I}       --> IS \\n    {O}       --> OS\\n    {U}       --> UR\\n    {Y}       --> YR\\n    {AE}      --> AESC\\n    {OE}      --> ETHEL\\n    {EA}      --> EAR\\n    {EO}      --> EOH\\n    {IO}      --> IOR                    \\n\\n    \\\\**  IOTATED VOWELS **\\\\\\n    {IOTABLES}    ===  {A}  * {E} * {O} * {U} * {Y} * {AE} * {OE}   * {EA}  * {EO}\\n    {_IOTABLES_}  ===  AC   * EH  * OS  * UR  * YR  * AESC * ETHEL  * EAR   * EOH \\n    \\n    i [{IOTABLES}] --> GER [{_IOTABLES_} ]  \\n\\n    \\\\**  CONSONANTS **\\\\\\n    (b,bb)         --> BEORC\\n    \\n\t  \\\\** (c,cc,k,kk)    --> CALC **\\\\\\n    \\\\** (ċ,ċċ)         --> CEN **\\\\\\n    (c,cc,k,kk)    --> CEN\\n    (ċ,ċċ)         --> CEN\\n    \\\\if use_calc_and_gar\\n      \\\\** overload when option is on **\\\\ \\n      (c,cc,k,kk)    --> CALC\\n    \\\\endif\\n      \\n    (d,dd)         --> DAEG\\n    (f,ff,v)       --> FEOH\\n    \\n\t  \\\\**  (g,gg,cg)      --> GAR  **\\\\  \\n    \\\\**  (ȝ,ġ,ġġ,ċġ)    --> GYFU **\\\\\\n    (g,gg,cg)      --> GYFU    \\n    (ȝ,ġ,ġġ,ċġ)    --> GYFU\\n    \\\\if use_calc_and_gar\\n      \\\\** overload when option is on **\\\\ \\n      (g,gg,cg)      --> GAR\\n    \\\\endif\\n    \\n    (h,hh,ç,χ)     --> HAEGL\\n    (j,jj,ĭ)       --> GER\\n    (l,ll)         --> LAGU\\n    (m,mm)         --> MAN\\n    (n,nn)         --> NYD\\n    (p,pp)         --> PEORTH\\n    (r,rr)         --> RAD\\n    (s,ss,z)       --> SIGEL\\n    (t,tt)         --> TIR\\n    (þ,þþ,ð,ðð)    --> THORN\\n    (w,ww)         --> WYNN\\n  \\n    \\\\** OLD ENGLISH AND **\\\\\\n    \\n    ⁊             --> OS NYD DAEG\\n      \\n    \\\\**  CLUSTERS WITH ING **\\\\    \\n    \\n    \\\\** ng            --> ING GAR **\\\\\\n    \\\\** nġ            --> ING GYFU **\\\\\\n    ng            --> ING GYFU\\n    nġ            --> ING GYFU\\n    \\\\if use_calc_and_gar\\n      ng            --> ING GAR\\n    \\\\endif\\n      \\n    \\\\** nc            --> ING CALC **\\\\\\n    \\\\** (nċ,nk,nq)    --> ING CEN  **\\\\\\n    nc            --> ING CEN\\n    (nċ,nk,nq)    --> ING CEN\\n    \\\\if use_calc_and_gar\\n      ng            --> ING CALC\\n    \\\\endif     \\n      \\n    \\\\**  CLUSTERS WITH S **\\\\   \\n    x             --> EOLHX\\n    (z,ts)        --> TIR SIGEL\\n    \\n    \\\\**  ADDITIONAL RUNES **\\\\    \\n    \\\\if use_cweorth \\n      (cw,qu,ccw,cqu)   --> CWEORTH\\n    \\\\endif\\n    \\\\if use_stan\\n      st                --> STAN\\n    \\\\endif\\n      \\n  \\\\end\\n  \\n  \\\\beg    rules  punctuation\\n    , --> RUNIC_SINGLE_PUNCTUATION\\n    ; --> RUNIC_SINGLE_PUNCTUATION\\n    : --> RUNIC_MULTIPLE_PUNCTUATION\\n    . --> RUNIC_MULTIPLE_PUNCTUATION\\n    ! --> RUNIC_MULTIPLE_PUNCTUATION\\n    ? --> RUNIC_CROSS_PUNCTUATION \\n    “ --> {NULL}\\n    ” --> {NULL}\\n    « --> {NULL}\\n    » --> {NULL}\\n  \\\\end\\n\\\\end\\n  \\n    \\n      \"\nGlaemscribe.resource_manager.raw_modes[\"old_english-tengwar-mercian\"] = \"\\\\**\\n\\nGlǽmscribe (also written Glaemscribe) is a software dedicated to\\nthe transcription of texts between writing systems, and more \\nspecifically dedicated to the transcription of J.R.R. Tolkien\\'s \\ninvented languages to some of his devised writing systems.\\n\\nCopyright (C) 2015 Benjamin Babut (Talagan).\\n\\nThis program is free software: you can redistribute it and/or modify\\nit under the terms of the GNU Affero General Public License as published by\\nthe Free Software Foundation, either version 3 of the License, or\\nany later version.\\n\\nThis program is distributed in the hope that it will be useful,\\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\nGNU Affero General Public License for more details.\\n\\nYou should have received a copy of the GNU Affero General Public License\\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\\n\\n**\\\\\\n\\n\\\\beg changelog\\n  \\\\entry \\\"0.0.2\\\" \\\"Porting to virtual chars\\\"\\n  \\\\entry \\\"0.1.1\\\" \\\"Added support for inlined raw tengwar\\\"\\n  \\\\entry \\\"0.1.2\\\" \\\"Doing some cleaning\\\"\\n  \\\\entry \\\"0.1.3\\\" \\\"Added support for non-breaking spaces\\\"     \\n  \\\\entry \\\"0.1.4\\\" \\\"Added support for new unicode charsets\\\"\\n\\\\end\\n\\n\\\\language \\\"Old English\\\"\\n\\\\writing  \\\"Tengwar\\\"\\n\\\\mode     \\\"Old English Tengwar - \\'Mercian\\' Usage\\\"\\n\\\\version  \\\"0.1.4\\\"\\n\\\\authors  \\\"J.R.R. Tolkien, impl. Talagan (Benjamin Babut)\\\"\\n\\n\\\\world      primary_related_to_arda\\n\\\\invention  jrrt\\n\\n\\\\raw_mode \\\"raw-tengwar\\\"\\n\\n\\\\charset  tengwar_ds_annatar false\\n\\\\charset  tengwar_ds_eldamar true\\n\\\\charset  tengwar_ds_parmaite false\\n\\\\charset  tengwar_ds_annatar  false\\n\\\\charset  tengwar_ds_elfica   false\\n\\n\\\\charset  tengwar_guni_sindarin false\\n\\\\charset  tengwar_guni_parmaite false\\n\\\\charset  tengwar_guni_eldamar  false\\n\\\\charset  tengwar_guni_annatar  false\\n\\\\charset  tengwar_guni_elfica   false\\n\\n\\n\\\\** List of features that would prevent use of other charsets \\n  \\\\charset  tengwar_freemono    false\\n  \\\\charset  tengwar_telcontar   false\\n\\n   Free Mono Tengwar : missing [OLD_ENGLISH_AND,SARINCE_FLOURISHED] / sa-rince management not accurate\\n**\\\\\\n\\n\\n\\\\beg options\\n  \\\\beg option consonant_modification_style CONSONANT_MODIFICATION_STYLE_WAVE\\n    \\\\value CONSONANT_MODIFICATION_STYLE_WAVE 0\\n    \\\\value CONSONANT_MODIFICATION_STYLE_BAR 1\\n  \\\\end\\n\\\\end\\n\\n\\\\beg      preprocessor\\n  \\\\** Work exclusively downcase **\\\\\\n  \\\\downcase\\n  \\n  \\\\** Simplify trema vowels **\\\\\\n  \\\\substitute ä a\\n  \\\\substitute ë e\\n  \\\\substitute ï i\\n  \\\\substitute ö o\\n  \\\\substitute ü u\\n  \\\\substitute ÿ y\\n\\n  \\\\substitute \\\"ae\\\"  \\\"æ\\\"\\n  \\\\substitute \\\"ea\\\"  \\\"æa\\\"\\n  \\\\substitute \\\"éa\\\"  \\\"ǽa\\\"\\n  \\\\substitute \\\"7\\\"   \\\"⁊\\\"\\n  \\n  \\\\** Dis-ambiguate long vowels **\\\\\\n  \\\\rxsubstitute \\\"(ā|â|aa)\\\" \\\"á\\\"\\n  \\\\rxsubstitute \\\"(ē|ê|ee)\\\" \\\"é\\\"\\n  \\\\rxsubstitute \\\"(ī|î|ii)\\\" \\\"í\\\"\\n  \\\\rxsubstitute \\\"(ō|ô|oo)\\\" \\\"ó\\\"\\n  \\\\rxsubstitute \\\"(ū|û|uu)\\\" \\\"ú\\\"\\n  \\\\rxsubstitute \\\"(ȳ|ŷ|yy)\\\" \\\"ý\\\"\\n\\\\end\\n  \\n\\\\beg      processor\\n\\n  \\\\beg    rules litteral\\n  \\n    {_GEMINATE_} === E_TEHTA_DOUBLE_INF\\n    \\n    \\\\if \\\"consonant_modification_style == CONSONANT_MODIFICATION_STYLE_WAVE\\\"\\n      {_NASAL_}    === NASALIZE_SIGN_TILD\\n    \\\\else\\n      {_NASAL_}    === NASALIZE_SIGN\\n    \\\\endif\\n  \\n    {A}   === a\\n    {AA}  === á\\n    {E}   === e\\n    {EE}  === é\\n    {I}   === i\\n    {II}  === í\\n    {O}   === o\\n    {OO}  === ó\\n    {U}   === u\\n    {UU}  === ú\\n    {Y}   === y\\n    {YY}  === ý\\n\\n    {AE}    === (æ,ae)\\n    {AEAE}  === (ǽ,ǣ)\\n\\n    {OE}    === (ø,œ)\\n    {OEOE}  === (ǿ,œ́)\\n\\n    \\\\** Diphtongs are always splitted, so consider we don\\'t have any. **\\\\\\n    \\\\** @ is the phantom vowel added by the preprocessor **\\\\\\n\\n    {S_VOWELS_NP_KERNEL}   === {A} * {AE} * {OE} * {E} * {I}   * {O} * {U} * {Y}\\n    {S_VOWELS_WP_KERNEL}   === {S_VOWELS_NP_KERNEL} * @                           \\n\\n    \\\\** UP TEHTAS **\\\\    \\n    {TEHTAR_UP_NP}  === A_TEHTA    * Y_TEHTA     * E_TEHTA_DOUBLE   * E_TEHTA   *   I_TEHTA    * O_TEHTA    * U_TEHTA   * WA_TEHTA \\n \\n    {TEHTAR_UP}     === {TEHTAR_UP_NP}  * {NULL}\\n\\n    \\\\** FOR LONG VOWELS **\\\\\\n    {LVOWELS}       === {AA}           * {AEAE}       * {OEOE}             * {EE}         * {II}         * {OO}          * {UU}         * {YY}  \\n    {LTEHTAR}       === ARA A_TEHTA    * ARA Y_TEHTA  * ARA E_TEHTA_DOUBLE * ARA E_TEHTA  * ARA I_TEHTA  * ARA O_TEHTA   * ARA U_TEHTA  * ARA WA_TEHTA    \\n\\n    {LVOWEL_MARKER}  === THINNAS\\n  \\n    \\\\** DOWN TEHTAS **\\\\\\n    {DTEHTAR}        === A_TEHTA_INF   * Y_TEHTA_INF  * CIRC_TEHTA_INF     * E_TEHTA_INF  * I_TEHTA_INF  * O_TEHTA_INF  * U_TEHTA_INF   * THINNAS   * {NULL}\\n  \\n\\n    {S_VOWELS_NP}       === [ {S_VOWELS_NP_KERNEL} ]\\n    {S_VOWELS_NP_WN}    === [ {S_VOWELS_NP_KERNEL} * {NULL} ]\\n    {S_VOWELS}          === [ {S_VOWELS_WP_KERNEL} ]\\n    {S_VOWELS_WN}       === [ {S_VOWELS_WP_KERNEL} * {NULL} ]\\n\\n    \\\\** IMG Sheaves for all vowels **\\\\\\n    {_S_VOWELS_UP_}        === [ {TEHTAR_UP} ]\\n    {_S_VOWELS_DN_}        === [ {DTEHTAR} ]\\n\\n    {_S_VOWELS_UP_WN_}     === [ {TEHTAR_UP} * {NULL} ]\\n    {_S_VOWELS_DN_WN_}     === [ {DTEHTAR} * {NULL} ]\\n\\n    \\\\** Fallback rule for all vowels **\\\\\\n    [ {LVOWELS} ] --> [ {LTEHTAR} ]            \\\\** If found alone, long vowel will have a long carrier **\\\\\\n\\n    \\\\** Fallback rule for short vowels **\\\\\\n    @                   --> {NULL}                     \\\\**  If found alone, put nothing **\\\\\\n    [ {S_VOWELS_NP_KERNEL} ]   --> TELCO [ {TEHTAR_UP_NP} ]   \\\\**  If found alone, a vowel will have a short carrier **\\\\\\n    _{A}                --> VILYA                      \\\\**  We don\\'t want a short carrier for _a **\\\\\\n    (w,u)_              --> VALA                       \\\\**  Only resolved after vowels **\\\\\\n\\n    \\\\** Next rule not valid in mercian mode **\\\\\\n    \\\\** {UU} -> yU - Nope in mercian **\\\\\\n\\n\\n    \\\\** ========== **\\\\\\n    \\\\** CONSONANTS **\\\\\\n    \\\\** ========== **\\\\\\n\\n    \\\\** ========== **\\\\\\n    \\\\** 1st Line (Voiceless occlusives) **\\\\\\n    \\\\** Short upper dash for nasalisation **\\\\\\n\\n    {L1_KER_1}      === t     * p \\n    {L1_IMG_1}      === TINCO * PARMA\\n\\n    {L1_KER_2}      === ċ     * c       * k\\n    {L1_IMG_2}      === CALMA * QUESSE  * QUESSE\\n    \\n    {L1_KER_1_GEMS} === tt                  * pp   \\n    {L1_IMG_1_GEMS} === TINCO {_GEMINATE_}  * PARMA {_GEMINATE_}\\n\\n    {L1_KER_2_GEMS} === ċċ                  * cc                  * kk \\n    {L1_IMG_2_GEMS} === CALMA {_GEMINATE_}  * QUESSE {_GEMINATE_} * QUESSE {_GEMINATE_}\\n  \\n    \\\\** C, CV, CVV. Rules are declared to avoid conflicts between [C, NULLV, V] and [C, V, NULLV] **\\\\\\n    \\\\** We also have rules for long vowels **\\\\\\n    [{L1_KER_1}]                                  --> [{L1_IMG_1}]\\n    [{L1_KER_2}]                                  --> [{L1_IMG_2}]\\n    [{L1_KER_1}]{S_VOWELS}{S_VOWELS_WN}           --> [{L1_IMG_1}]{_S_VOWELS_UP_}{_S_VOWELS_DN_WN_}\\n    [{L1_KER_2}]{S_VOWELS}{S_VOWELS_WN}           --> [{L1_IMG_2}]{_S_VOWELS_UP_}{_S_VOWELS_DN_WN_}\\n    [{L1_KER_1}][{LVOWELS}]                       --> [{L1_IMG_1}][{TEHTAR_UP_NP}]{LVOWEL_MARKER}\\n    [{L1_KER_2}][{LVOWELS}]                       --> [{L1_IMG_2}][{TEHTAR_UP_NP}]{LVOWEL_MARKER}\\n\\n    \\\\** Geminateds (double sign below) **\\\\\\n    \\\\** C², C²V **\\\\\\n    \\\\** NOT C²V² (cannot put second tehta below due to gemination sign) **\\\\\\n    \\\\** NOT C²L (long vowel not possible with gemination sign) **\\\\\\n    [{L1_KER_1_GEMS}]{S_VOWELS_WN}          --> [{L1_IMG_1_GEMS}]{_S_VOWELS_UP_WN_}\\n    [{L1_KER_2_GEMS}]{S_VOWELS_WN}          --> [{L1_IMG_2_GEMS}]{_S_VOWELS_UP_WN_}\\n\\n    \\\\** Nasals (tild above) **\\\\\\n    \\\\** nC, nCV, nCVV **\\\\\\n    \\\\** We also have rules for long vowels **\\\\\\n    [ nt * mp ]                                       -->  [ TINCO * PARMA  ] {_NASAL_} \\n    [ nċ * nc ]                                       -->  [ CALMA * QUESSE ] {_NASAL_} \\n    [ nt * mp ]{S_VOWELS}{S_VOWELS_WN}                -->  [ TINCO * PARMA  ] {_NASAL_} {_S_VOWELS_UP_} {_S_VOWELS_DN_WN_}\\n    [ nċ * nc ]{S_VOWELS}{S_VOWELS_WN}                -->  [ CALMA * QUESSE ] {_NASAL_} {_S_VOWELS_UP_} {_S_VOWELS_DN_WN_}\\n    [ nt * mp ][{LVOWELS}]                            -->  [ TINCO * PARMA  ] {_NASAL_} [{TEHTAR_UP_NP}] {LVOWEL_MARKER}\\n    [ nċ * nc ][{LVOWELS}]                            -->  [ CALMA * QUESSE ] {_NASAL_} [{TEHTAR_UP_NP}] {LVOWEL_MARKER}\\n\\n    \\\\** ========== **\\\\\\n    \\\\** 2nd Line (Voiced occlusives) **\\\\\\n    \\\\** Long upper dash for nasalisation **\\\\\\n\\n    {L2_KER}        === d     * b     * ġ     * g\\n    {L2_IMG}        === ANDO  * UMBAR * ANGA  * UNGWE\\n    \\n    {L2_KER_GEMS}   === dd                 * bb                 * (ċġ,ġġ)            * (cg,gg)\\n    {L2_IMG_GEMS}   === ANDO {_GEMINATE_}  * UMBAR {_GEMINATE_} * ANGA {_GEMINATE_}  * UNGWE {_GEMINATE_}\\n\\n    \\\\** C, CV, CVV **\\\\\\n    [{L2_KER}]                                        --> [{L2_IMG}]\\n    [{L2_KER}]{S_VOWELS}{S_VOWELS_WN}                 --> [{L2_IMG}]{_S_VOWELS_UP_}{_S_VOWELS_DN_WN_}\\n    [{L2_KER}][{LVOWELS}]                             --> [{L2_IMG}][{TEHTAR_UP_NP}]{LVOWEL_MARKER}\\n\\n    \\\\** Geminated sign below, cannot treat diphthongs or long vowels **\\\\\\n    [{L2_KER_GEMS}]{S_VOWELS_WN}                      --> [{L2_IMG_GEMS}]{_S_VOWELS_UP_WN_}\\n\\n    \\\\** Nasals, with diphthongs! **\\\\\\n    [ nd * mb * nġ * ng ]                             -->  [ {L2_IMG} ] {_NASAL_}\\n    [ nd * mb * nġ * ng ]{S_VOWELS}{S_VOWELS_WN}      -->  [ {L2_IMG} ] {_NASAL_} {_S_VOWELS_UP_}{_S_VOWELS_DN_WN_}\\n    [ nd * mb * nġ * ng ][{LVOWELS}]                  -->  [ {L2_IMG} ] {_NASAL_} [{TEHTAR_UP_NP}]{LVOWEL_MARKER}\\n\\n    \\\\** ========== **\\\\\\n    \\\\** 3rd Line (Voiceless fricatives) **\\\\\\n    \\\\** Short upper dash for nasalisation **\\\\\\n    {L3_KER_1}      === þ     * f\\n    {L3_IMG_1}      === SULE  * FORMEN\\n    \\n    {L3_KER_2}      === ç     * (χ,ħ)\\n    {L3_IMG_2}      === AHA   * HWESTA\\n    \\n    {L3_KER_1_GEMS} === þþ                * ff\\n    {L3_IMG_1_GEMS} === SULE {_GEMINATE_} * FORMEN {_GEMINATE_}\\n    \\n    {L3_KER_2_GEMS} === çç                * (χχ,ħħ)\\n    {L3_IMG_2_GEMS} === AHA {_GEMINATE_}  * HWESTA {_GEMINATE_}\\n\\n    [{L3_KER_1}]                              --> [{L3_IMG_1}]\\n    [{L3_KER_2}]                              --> [{L3_IMG_2}]\\n    [{L3_KER_1}]{S_VOWELS}{S_VOWELS_WN}       --> [{L3_IMG_1}]{_S_VOWELS_UP_}{_S_VOWELS_DN_WN_}\\n    [{L3_KER_2}]{S_VOWELS}{S_VOWELS_WN}       --> [{L3_IMG_2}]{_S_VOWELS_UP_}{_S_VOWELS_DN_WN_}\\n    [{L3_KER_1}][{LVOWELS}]                   --> [{L3_IMG_1}][{TEHTAR_UP_NP}]{LVOWEL_MARKER}\\n    [{L3_KER_2}][{LVOWELS}]                   --> [{L3_IMG_2}][{TEHTAR_UP_NP}]{LVOWEL_MARKER}\\n\\n    \\\\** Geminated sign below, cannot treat diphthongs or long vowels **\\\\\\n    [{L3_KER_1_GEMS}]{S_VOWELS_WN}            --> [{L3_IMG_1_GEMS}]{_S_VOWELS_UP_WN_}\\n    [{L3_KER_2_GEMS}]{S_VOWELS_WN}            --> [{L3_IMG_2_GEMS}]{_S_VOWELS_UP_WN_}\\n  \\n  \\n    \\\\** ========== **\\\\\\n    \\\\** 4th Line (Voiced fricatives) **\\\\\\n    \\\\** Long upper dash for nasalisation **\\\\\\n\\n    {L4_KER}        === ð     * v     * j     * ȝ\\n    {L4_IMG}        === ANTO  * AMPA  * ANCA  * UNQUE\\n    \\n    {L4_KER_GEMS}   === ðð                 * vv                 * jj                 * ȝȝ\\n    {L4_IMG_GEMS}   === ANTO {_GEMINATE_}  * AMPA {_GEMINATE_}  * ANCA {_GEMINATE_}  * UNQUE {_GEMINATE_}\\n\\n    [{L4_KER}]                                --> [{L4_IMG}]\\n    [{L4_KER}]{S_VOWELS}{S_VOWELS_WN}         --> [{L4_IMG}]{_S_VOWELS_UP_}{_S_VOWELS_DN_WN_}\\n    [{L4_KER}][{LVOWELS}]                     --> [{L4_IMG}][{TEHTAR_UP_NP}]{LVOWEL_MARKER}\\n\\n    \\\\** Geminated sign below, cannot treat diphthongs or long vowels **\\\\\\n    [{L4_KER_GEMS}]{S_VOWELS_WN}              --> [{L4_IMG_GEMS}]{_S_VOWELS_UP_WN_}\\n\\n\\n    \\\\** ========== **\\\\\\n    \\\\** 5th Line (Nasals) **\\\\\\n    \\\\** Long upper dash for nasalisation (wins on gemination) **\\\\\\n\\n    {L5_KER}        === n * m\\n    {L5_IMG}        === NUMEN * MALTA\\n\\n    [{L5_KER}]                                --> [{L5_IMG}]\\n    [{L5_KER}]{S_VOWELS}{S_VOWELS_WN}         --> [{L5_IMG}]{_S_VOWELS_UP_}{_S_VOWELS_DN_WN_}\\n    [{L5_KER}][{LVOWELS}]                     --> [{L5_IMG}][{TEHTAR_UP_NP}]{LVOWEL_MARKER}\\n\\n    \\\\** Gemination === nasalisation **\\\\\\n    \\\\** So prefer using tild to put tehtas up and down for diphthongs and long vowels **\\\\\\n\\n    [ nn * mm ]                               --> [{L5_IMG}] {_NASAL_} \\n    [ nn * mm ]{S_VOWELS}{S_VOWELS_WN}        --> [{L5_IMG}] {_NASAL_} {_S_VOWELS_UP_}{_S_VOWELS_DN_WN_}\\n    [ nn * mm ][{LVOWELS}]                    --> [{L5_IMG}] {_NASAL_} [{TEHTAR_UP_NP}]{LVOWEL_MARKER}\\n\\n    \\\\** ========== **\\\\\\n    \\\\** 6th Line (Approximants == fr : Spirantes) **\\\\\\n    \\\\** Short upper dash for nasalisation **\\\\\\n\\n    {L6_KER}        === r * ĭ\\n    {L6_IMG}        === ORE * ANNA\\n    {L6_KER_GEMS}   === rr * ĭĭ\\n    {L6_IMG_GEMS}   === ORE {_GEMINATE_} * ANNA {_GEMINATE_}\\n\\n    [{L6_KER}]                                --> [{L6_IMG}]\\n    [{L6_KER}]{S_VOWELS}{S_VOWELS_WN}         --> [{L6_IMG}]{_S_VOWELS_UP_}{_S_VOWELS_DN_WN_}\\n    [{L6_KER}][{LVOWELS}]                     --> [{L6_IMG}][{TEHTAR_UP_NP}]{LVOWEL_MARKER}\\n\\n    \\\\** Geminated sign below, cannot treat diphthongs or long vowels **\\\\\\n    [{L6_KER_GEMS}]{S_VOWELS_WN}              --> [{L6_IMG_GEMS}]{_S_VOWELS_UP_WN_}\\n\\n    \\\\** ========== **\\\\\\n    \\\\** Liquids **\\\\\\n\\n    w                                         --> ROMEN\\n    w{S_VOWELS}{S_VOWELS_WN}                  --> ROMEN {_S_VOWELS_UP_}{_S_VOWELS_DN_WN_}\\n    w[{LVOWELS}]                              --> ROMEN [{TEHTAR_UP_NP}]{LVOWEL_MARKER}\\n\\n    \\\\** Geminated sign below, cannot treat diphthongs or long vowels **\\\\\\n    ww{S_VOWELS_WN}                           --> ROMEN {_GEMINATE_} {_S_VOWELS_UP_WN_}\\n\\n    \\\\** L and LL and ld are too big to receive tehtas under, so no diphthongs, no long vowels **\\\\\\n    [l * ll * ld] {S_VOWELS_WN}               --> [LAMBE * LAMBE {_GEMINATE_} * ALDA] {_S_VOWELS_UP_WN_}\\n\\n    \\\\** ========== **\\\\\\n    \\\\** sibilant (sifflantes) **\\\\\\n    \\n    {L8_KER}      ===  s * z \\n    {L8_IMG}      ===  SILME_NUQUERNA * ESSE_NUQUERNA \\n    {L8_KER_GEMS} ===  ss * zz \\n    {L8_IMG_GEMS} ===  SILME_NUQUERNA {_GEMINATE_} * ESSE_NUQUERNA {_GEMINATE_}\\n\\n    [{L8_KER}]                                --> [{L8_IMG}]\\n    [{L8_KER}]{S_VOWELS}{S_VOWELS_WN}         --> [{L8_IMG}]{_S_VOWELS_UP_}{_S_VOWELS_DN_WN_}\\n    [{L8_KER}][{LVOWELS}]                     --> [{L8_IMG}][{TEHTAR_UP_NP}]{LVOWEL_MARKER}\\n\\n    \\\\** Geminated sign under, cannot treat diphthongs or long vowels **\\\\\\n    [{L8_KER_GEMS}]{S_VOWELS_WN}              --> [{L8_IMG_GEMS}]{_S_VOWELS_UP_WN_}\\n\\n    \\\\**  Final s (Challenging!) **\\\\\\n    s_                --> SARINCE_FLOURISHED                       \\\\** Final rule for s **\\\\\\n    {S_VOWELS}s_      --> TELCO {_S_VOWELS_UP_} SILME_NUQUERNA     \\\\** Rule es_ **\\\\\\n    [{LVOWELS}]s_     --> [{LTEHTAR}] SILME_NUQUERNA               \\\\** Rule és_ **\\\\\\n\\n    s --> SILME    \\\\** Overload lonely s **\\\\\\n    z --> ESSE    \\\\** Overload lonely z **\\\\\\n\\n    \\\\** ========== **\\\\\\n    \\\\** Ligatures **\\\\\\n    \\n    {LINE_VARIOUS_1_KER}      ===  sċ \\n    {LINE_VARIOUS_1_IMG}      ===  ANCA_CLOSED  \\n    {LINE_VARIOUS_2_KER}      ===  hw * çt * (χt,ħt)\\n    {LINE_VARIOUS_2_IMG}      ===  HARP_SHAPED  * AHA_TINCO  * HWESTA_TINCO  \\n\\n    [{LINE_VARIOUS_1_KER}]                                --> [{LINE_VARIOUS_1_IMG}]\\n    [{LINE_VARIOUS_2_KER}]                                --> [{LINE_VARIOUS_2_IMG}]\\n    [{LINE_VARIOUS_1_KER}]{S_VOWELS}{S_VOWELS_WN}         --> [{LINE_VARIOUS_1_IMG}]{_S_VOWELS_UP_}{_S_VOWELS_DN_WN_}\\n    [{LINE_VARIOUS_2_KER}]{S_VOWELS}{S_VOWELS_WN}         --> [{LINE_VARIOUS_2_IMG}]{_S_VOWELS_UP_}{_S_VOWELS_DN_WN_}\\n    [{LINE_VARIOUS_1_KER}][{LVOWELS}]                     --> [{LINE_VARIOUS_1_IMG}][{TEHTAR_UP_NP}]{LVOWEL_MARKER}\\n    [{LINE_VARIOUS_2_KER}][{LVOWELS}]                     --> [{LINE_VARIOUS_2_IMG}][{TEHTAR_UP_NP}]{LVOWEL_MARKER}\\n\\n    \\\\** No nasals, no geminated **\\\\\\n\\n    \\\\** ========== **\\\\\\n    \\\\** Various **\\\\\\n   \\n    h                                            --> HYARMEN\\n    h{S_VOWELS}{S_VOWELS_WN}                     --> HYARMEN {_S_VOWELS_UP_}{_S_VOWELS_DN_WN_}\\n    h[{LVOWELS}]                                 --> HYARMEN [{TEHTAR_UP_NP}]{LVOWEL_MARKER}\\n\\n    \\\\** Geminated sign below, cannot treat diphthongs or long vowels **\\\\\\n    hh{S_VOWELS_WN}                              --> HYARMEN {_GEMINATE_} {_S_VOWELS_UP_WN_}\\n\\n    \\\\** ========== **\\\\\\n    \\\\** X **\\\\\\n    \\\\** For x, due to the cedilla, we cannot put tehtas under the tengwa (so no need to treat diphthongs or long vowels) **\\\\\\n\\n    x{S_VOWELS_WN}                               --> QUESSE SARINCE {_S_VOWELS_UP_WN_}\\n    xx{S_VOWELS_WN}                              --> QUESSE SARINCE {_GEMINATE_} {_S_VOWELS_UP_WN_}\\n    nx{S_VOWELS_WN}                              --> QUESSE SARINCE {_NASAL_} {_S_VOWELS_UP_WN_}     \\n    \\n    \\n  \\\\end\\n  \\n  \\\\beg    rules punctuation \\n    ⁊ --> OLD_ENGLISH_AND\\n\\n    . --> PUNCT_DDOT\\n    .. --> PUNCT_DOT PUNCT_DDOT PUNCT_DOT\\n    …  --> PUNCT_TILD\\n    ... --> PUNCT_TILD\\n    .... --> PUNCT_TILD\\n    ..... --> PUNCT_TILD\\n    ...... --> PUNCT_TILD\\n    ....... --> PUNCT_TILD\\n\\n    , --> PUNCT_DOT\\n    : --> PUNCT_DOT\\n    ; --> PUNCT_DOT\\n    ! --> PUNCT_EXCLAM\\n    ? --> PUNCT_INTERR\\n    · --> PUNCT_DOT\\n\\n    \\\\** Apostrophe **\\\\\\n\\n    \\' --> {NULL}\\n    ’ --> {NULL}\\n    \\n    \\\\** NBSP **\\\\\\n    {NBSP} --> NBSP\\n    \\n    \\\\** Quotes **\\\\\\n\\n    “ --> DQUOT_OPEN\\n    ” --> DQUOT_CLOSE\\n    « --> DQUOT_OPEN \\n    » --> DQUOT_CLOSE \\n\\n    - --> PUNCT_DOT    \\n    – --> PUNCT_TILD  \\n    — --> PUNCT_TILD\\n\\n    [ --> PUNCT_PAREN_L\\n    ] --> PUNCT_PAREN_R\\n    ( --> PUNCT_PAREN_L_ALT \\\\** TODO : Remove alt ? **\\\\\\n    ) --> PUNCT_PAREN_R_ALT \\\\** TODO : Remove alt ? **\\\\\\n    { --> PUNCT_PAREN_L\\n    } --> PUNCT_PAREN_R\\n    < --> PUNCT_PAREN_L\\n    > --> PUNCT_PAREN_R  \\n\\n    \\\\** Not universal between fonts ... **\\\\\\n    $ --> ELVISH_PAREN\\n    ≤ --> RING_MARK_L \\\\** Ring inscription left beautiful stuff **\\\\\\n    ≥ --> RING_MARK_R \\\\** Ring inscription right beautiful stuff **\\\\\\n  \\\\end  \\n\\\\end\\n\\n\\\\beg postprocessor\\n  \\\\resolve_virtuals\\n\\\\end\"\nGlaemscribe.resource_manager.raw_modes[\"old_english-tengwar-westsaxon\"] = \"\\\\**\\n\\nGlǽmscribe (also written Glaemscribe) is a software dedicated to\\nthe transcription of texts between writing systems, and more \\nspecifically dedicated to the transcription of J.R.R. Tolkien\\'s \\ninvented languages to some of his devised writing systems.\\n\\nCopyright (C) 2015 Benjamin Babut (Talagan).\\n\\nThis program is free software: you can redistribute it and/or modify\\nit under the terms of the GNU Affero General Public License as published by\\nthe Free Software Foundation, either version 3 of the License, or\\nany later version.\\n\\nThis program is distributed in the hope that it will be useful,\\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\nGNU Affero General Public License for more details.\\n\\nYou should have received a copy of the GNU Affero General Public License\\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\\n\\n**\\\\\\n\\n\\\\beg changelog\\n  \\\\entry \\\"0.0.2\\\" \\\"Porting to virtual chars\\\"\\n  \\\\entry \\\"0.1.1\\\" \\\"Added support for inlined raw tengwar\\\"  \\n  \\\\entry \\\"0.1.2\\\" \\\"Doing some cleaning\\\"\\n  \\\\entry \\\"0.1.3\\\" \\\"Added support for non-breaking spaces\\\"     \\n  \\\\entry \\\"0.1.4\\\" \\\"Added support for new unicode charsets\\\"\\n\\\\end\\n\\n\\\\language \\\"Old English\\\"\\n\\\\writing  \\\"Tengwar\\\"\\n\\\\mode     \\\"Old English Tengwar - \\'West Saxon\\' Usage\\\"\\n\\\\version  \\\"0.1.4\\\"\\n\\\\authors  \\\"J.R.R. Tolkien, impl. Talagan (Benjamin Babut)\\\"\\n\\n\\\\world      primary_related_to_arda\\n\\\\invention  jrrt\\n\\n\\\\raw_mode \\\"raw-tengwar\\\"\\n\\n\\\\charset  tengwar_ds_annatar false\\n\\\\charset  tengwar_ds_eldamar true\\n\\\\charset  tengwar_ds_parmaite false\\n\\\\charset  tengwar_ds_annatar  false\\n\\\\charset  tengwar_ds_elfica   false\\n\\n\\\\charset  tengwar_guni_sindarin false\\n\\\\charset  tengwar_guni_parmaite false\\n\\\\charset  tengwar_guni_eldamar  false\\n\\\\charset  tengwar_guni_annatar  false\\n\\\\charset  tengwar_guni_elfica   false\\n\\n\\\\** List of features that would prevent use of other charsets \\n  \\\\charset  tengwar_freemono    false\\n  \\\\charset  tengwar_telcontar   false\\n\\n   Free Mono Tengwar : missing [OLD_ENGLISH_AND,SARINCE_FLOURISHED] / sa-rince management not accurate\\n**\\\\\\n\\n\\\\beg options\\n  \\\\beg option consonant_modification_style CONSONANT_MODIFICATION_STYLE_WAVE\\n    \\\\value CONSONANT_MODIFICATION_STYLE_WAVE 0\\n    \\\\value CONSONANT_MODIFICATION_STYLE_BAR 1\\n  \\\\end\\n\\\\end\\n\\n\\\\beg      preprocessor\\n  \\\\** Work exclusively downcase **\\\\\\n  \\\\downcase\\n  \\n  \\\\** Simplify trema vowels **\\\\\\n  \\\\substitute ä a\\n  \\\\substitute ë e\\n  \\\\substitute ï i\\n  \\\\substitute ö o\\n  \\\\substitute ü u\\n  \\\\substitute ÿ y\\n\\n  \\\\substitute \\\"ae\\\"  \\\"æ\\\"\\n  \\\\substitute \\\"ea\\\"  \\\"æa\\\"\\n  \\\\substitute \\\"éa\\\"  \\\"ǽa\\\"\\n  \\\\substitute \\\"7\\\"   \\\"⁊\\\"\\n  \\n  \\\\** Dis-ambiguate long vowels **\\\\\\n  \\\\rxsubstitute \\\"(ā|â|aa)\\\" \\\"á\\\"\\n  \\\\rxsubstitute \\\"(ē|ê|ee)\\\" \\\"é\\\"\\n  \\\\rxsubstitute \\\"(ī|î|ii)\\\" \\\"í\\\"\\n  \\\\rxsubstitute \\\"(ō|ô|oo)\\\" \\\"ó\\\"\\n  \\\\rxsubstitute \\\"(ū|û|uu)\\\" \\\"ú\\\"\\n  \\\\rxsubstitute \\\"(ȳ|ŷ|yy)\\\" \\\"ý\\\"\\n  \\n  \\\\up_down_tehta_split \\\"æ,ǽ,a,ä,á,e,ë,é,i,ï,í,o,ö,ó,u,ü,ú,y,ÿ,ý,ø,ǿ,œ,œ́\\\" \\\"t,p,ċ,c,d,b,ġ,g,þ,f,ç,χ,ħ,ð,v,j,ȝ,n,m,r,ĭ,w,l,ld,s,z,h,x,sċ,hw,çt,χt,ħt\\\"\\n\\\\end\\n\\n\\\\beg      processor\\n\\n  \\\\beg rules litteral\\n  \\n    {_GEMINATE_} === E_TEHTA_DOUBLE_INF\\n  \\n    \\\\if \\\"consonant_modification_style == CONSONANT_MODIFICATION_STYLE_WAVE\\\"\\n      {_NASAL_}    === NASALIZE_SIGN_TILD\\n    \\\\else\\n      {_NASAL_}    === NASALIZE_SIGN\\n    \\\\endif\\n  \\n    {A}   === a\\n    {AA}  === á\\n    {E}   === e\\n    {EE}  === é\\n    {I}   === i\\n    {II}  === í\\n    {O}   === o\\n    {OO}  === ó\\n    {U}   === u\\n    {UU}  === ú\\n    {Y}   === y\\n    {YY}  === ý\\n\\n    {AE}    === (æ,ae)\\n    {AEAE}  === (ǽ,ǣ)\\n\\n    {OE}    === (ø,œ)\\n    {OEOE}  === (ǿ,œ́)\\n\\n    \\\\** Diphtongs are always splitted, so consider we don\\'t have any. **\\\\\\n    \\\\** @ is the phantom vowel **\\\\\\n\\n    {S_VOWELS_NP_KERNEL}   === {A} * {AE} * {OE} * {E} * {I}   * {O} * {U} * {Y} * {A}_\\n    {S_VOWELS_WP_KERNEL}   === {S_VOWELS_NP_KERNEL} * @ \\n    \\n    \\\\** UP TEHTAS **\\\\    \\n    {TEHTAR_UP_NP}  === E_TEHTA    * A_TEHTA    * E_TEHTA_DOUBLE   * Y_TEHTA      * I_TEHTA    * O_TEHTA    * U_TEHTA    * WA_TEHTA   * VILYA    \\n    {TEHTAR_UP}     === {TEHTAR_UP_NP}  * {NULL}\\n  \\n    \\\\** FOR LONG VOWELS **\\\\\\n    {L_VOWELS}      === {AA}              * {AEAE}          * {OEOE}                * {EE}            * {II}            * {OO}              * {UU}            * {YY}  \\n    {L_TEHTAR}      === ARA E_TEHTA       * ARA A_TEHTA     * ARA E_TEHTA_DOUBLE    * ARA Y_TEHTA     * ARA I_TEHTA     * ARA O_TEHTA       * ARA U_TEHTA     * ARA WA_TEHTA       \\n\\n    \\\\** DOWN TEHTAS **\\\\\\n    {TEHTAR_DN}     === E_TEHTA_INF       * A_TEHTA_INF     * CIRC_TEHTA_INF        * Y_TEHTA_INF     * I_TEHTA_INF     * TELCO O_TEHTA     * TELCO U_TEHTA   * THINNAS   * VILYA * {NULL}\\n    \\n    {S_VOWELS_NP}       === [ {S_VOWELS_NP_KERNEL} ]\\n    {S_VOWELS_NP_WN}    === [ {S_VOWELS_NP_KERNEL} * {NULL} ]\\n    {S_VOWELS}          === [ {S_VOWELS_WP_KERNEL} ]\\n    {S_VOWELS_WN}       === [ {S_VOWELS_WP_KERNEL} * {NULL} ]\\n\\n    \\\\**  Img bundles for all vowels **\\\\\\n    {_S_VOWELS_UP_}     === [ {TEHTAR_UP} ]\\n    {_S_VOWELS_DN_}     === [ {TEHTAR_DN} ]\\n \\n    {_S_VOWELS_UP_WN_}  === [ {TEHTAR_UP} * {NULL} ]\\n    {_S_VOWELS_DN_WN_}  === [ {TEHTAR_DN} * {NULL} ]\\n\\n    \\\\**  Rule for long vowels **\\\\\\n    [ {L_VOWELS} ]  --> [ {L_TEHTAR} ] \\n    {UU}            --> VALA U_TEHTA   \\\\** # Special treatment **\\\\\\n\\n    \\\\**  Fallback rule for short vowels **\\\\\\n    @                          --> {NULL}                            \\\\** # If found alone, put nothing **\\\\\\n    [ {S_VOWELS_NP_KERNEL} ]   --> TELCO [ {TEHTAR_UP_NP} ]  \\n    {A}_                       --> VILYA                                 \\\\** # We don\\'t want a short carrier for a_ **\\\\\\n    (w,u)_                     --> VALA                                 \\\\** # Only resolved after vowels **\\\\\\n\\n    \\\\** ############# **\\\\\\n    \\\\**  CONSONANTS # **\\\\\\n    \\\\** ############# **\\\\\\n\\n    \\\\** ## 1st Line (Voiceless occlusives) **\\\\\\n    \\\\** ## Short upper dash for nasalisation **\\\\\\n    {L1_KER_1}      === t     * p \\n    {L1_IMG_1}      === TINCO * PARMA \\n    {L1_KER_2}      === ċ     * c       * k\\n    {L1_IMG_2}      === CALMA * QUESSE  * QUESSE\\n        \\n    {L1_KER_1_GEMS} === tt                  * pp   \\n    {L1_IMG_1_GEMS} === TINCO {_GEMINATE_}  * PARMA {_GEMINATE_}\\n    {L1_KER_2_GEMS} === ċċ                  * cc                  * kk \\n    {L1_IMG_2_GEMS} === CALMA {_GEMINATE_}  * QUESSE {_GEMINATE_} * QUESSE {_GEMINATE_}\\n\\n  \\n    {S_VOWELS_WN}[{L1_KER_1}]{S_VOWELS_WN}  --> 2,1,3 --> [{L1_IMG_1}]{_S_VOWELS_UP_WN_}{_S_VOWELS_DN_WN_}\\n    {S_VOWELS_WN}[{L1_KER_1_GEMS}]          --> 2,1   --> [{L1_IMG_1_GEMS}]{_S_VOWELS_UP_WN_}\\n    {S_VOWELS_WN}[{L1_KER_2}]{S_VOWELS_WN}  --> 2,1,3 --> [{L1_IMG_2}]{_S_VOWELS_UP_WN_}{_S_VOWELS_DN_WN_}\\n    {S_VOWELS_WN}[{L1_KER_2_GEMS}]          --> 2,1   --> [{L1_IMG_2_GEMS}]{_S_VOWELS_UP_WN_}\\n\\n    {S_VOWELS_WN}[ nt * mp ]{S_VOWELS_WN}   --> 2,1,3 -->  [ {L1_IMG_1} ]  {_NASAL_} {_S_VOWELS_UP_WN_} {_S_VOWELS_DN_WN_}\\n    {S_VOWELS_WN}[ nċ * nc ]{S_VOWELS_WN}   --> 2,1,3 -->  [ CALMA  * QUESSE ] {_NASAL_} {_S_VOWELS_UP_WN_} {_S_VOWELS_DN_WN_}\\n\\n\\n    \\\\** ## 2nd Line (Voiced occlusives) **\\\\\\n    \\\\** ## Long upper dash for nasalisation **\\\\\\n    {L2_KER}        === d     * b     * ġ     * g\\n    {L2_IMG}        === ANDO  * UMBAR * ANGA  * UNGWE\\n                    \\n    {L2_KER_GEMS}   === dd                 * bb                 * (ċġ,ġġ)            * (cg,gg)\\n    {L2_IMG_GEMS}   === ANDO {_GEMINATE_}  * UMBAR {_GEMINATE_} * ANGA {_GEMINATE_}  * UNGWE {_GEMINATE_}\\n    \\n\\n    {S_VOWELS_WN}[{L2_KER}]{S_VOWELS_WN}            --> 2,1,3 --> [{L2_IMG}] {_S_VOWELS_UP_WN_}{_S_VOWELS_DN_WN_}\\n    {S_VOWELS_WN}[{L2_KER_GEMS}]                    --> 2,1   --> [{L2_IMG_GEMS}] {_S_VOWELS_UP_WN_}\\n\\n    {S_VOWELS_WN}[ nd * mb * nġ * ng ]{S_VOWELS_WN} --> 2,1,3 -->  [ {L2_IMG} ] {_NASAL_} {_S_VOWELS_UP_WN_} {_S_VOWELS_DN_WN_}\\n\\n\\n    \\\\** ## 3rd Line (Voiceless fricatives) **\\\\\\n    \\\\** ## Short upper dash for nasalisation **\\\\\\n    {L3_KER_1}      === þ     * f\\n    {L3_IMG_1}      === SULE  * FORMEN    \\n    {L3_KER_2}      === ç     * (χ,ħ)\\n    {L3_IMG_2}      === AHA   * HWESTA\\n    \\n    {L3_KER_1_GEMS} === þþ                * ff\\n    {L3_IMG_1_GEMS} === SULE {_GEMINATE_} * FORMEN {_GEMINATE_}   \\n    {L3_KER_2_GEMS} === çç                * (χχ,ħħ)\\n    {L3_IMG_2_GEMS} === AHA {_GEMINATE_}  * HWESTA {_GEMINATE_}\\n\\n    {S_VOWELS_WN}[{L3_KER_1}]{S_VOWELS_WN}  --> 2,1,3 --> [{L3_IMG_1}]{_S_VOWELS_UP_WN_}{_S_VOWELS_DN_WN_}\\n    {S_VOWELS_WN}[{L3_KER_1_GEMS}]          --> 2,1   --> [{L3_IMG_1_GEMS}]{_S_VOWELS_UP_WN_}\\n    {S_VOWELS_WN}[{L3_KER_2}]{S_VOWELS_WN}  --> 2,1,3 --> [{L3_IMG_2}]{_S_VOWELS_UP_WN_}{_S_VOWELS_DN_WN_}\\n    {S_VOWELS_WN}[{L3_KER_2_GEMS}]          --> 2,1   --> [{L3_IMG_2_GEMS}]{_S_VOWELS_UP_WN_}\\n\\n  \\n    \\\\** ## 4th Line (Voiced fricatives) **\\\\\\n    \\\\** ## Long upper dash for nasalisation **\\\\\\n    \\n    {L4_KER}        === ð     * v     * j     * ȝ\\n    {L4_IMG}        === ANTO  * AMPA  * ANCA  * UNQUE\\n    \\n    {L4_KER_GEMS}   === ðð                 * vv                 * jj                 * ȝȝ\\n    {L4_IMG_GEMS}   === ANTO {_GEMINATE_}  * AMPA {_GEMINATE_}  * ANCA {_GEMINATE_}  * UNQUE {_GEMINATE_}\\n    \\n\\n    {S_VOWELS_WN}[{L4_KER}]{S_VOWELS_WN}  --> 2,1,3 --> [{L4_IMG}]{_S_VOWELS_UP_WN_}{_S_VOWELS_DN_WN_}\\n    {S_VOWELS_WN}[{L4_KER_GEMS}]          --> 2,1   --> [{L4_IMG_GEMS}]{_S_VOWELS_UP_WN_}\\n\\n\\n    \\\\** ## 5th Line (Nasals) **\\\\\\n    \\\\** ## Long upper dash for nasalisation (wins on gemination) **\\\\\\n\\n    {L5_KER}        === n * m\\n    {L5_IMG}        === NUMEN * MALTA\\n\\n    {S_VOWELS_WN}[{L5_KER}]{S_VOWELS_WN}  --> 2,1,3 --> [{L5_IMG}]{_S_VOWELS_UP_WN_}{_S_VOWELS_DN_WN_}\\n    {S_VOWELS_WN}[ nn * mm ]{S_VOWELS_WN} --> 2,1,3 --> [ {L5_IMG} ] {_NASAL_} {_S_VOWELS_UP_WN_}{_S_VOWELS_DN_WN_}\\n\\n\\n    \\\\** ## 6th Line (Approximants == fr : Spirantes) **\\\\\\n    \\\\** ## Short upper dash for nasalisation **\\\\\\n\\n    {L6_KER}        === r                 * ĭ\\n    {L6_IMG}        === ORE               * ANNA\\n    {L6_KER_GEMS}   === rr                * ĭĭ\\n    {L6_IMG_GEMS}   === ORE {_GEMINATE_}  * ANNA {_GEMINATE_}\\n\\n    {S_VOWELS_WN}[{L6_KER}]{S_VOWELS_WN}  --> 2,1,3 --> [{L6_IMG}]{_S_VOWELS_UP_WN_}{_S_VOWELS_DN_WN_}\\n    {S_VOWELS_WN}[{L6_KER_GEMS}]          --> 2,1   --> [{L6_IMG_GEMS}]{_S_VOWELS_UP_WN_}\\n\\n\\n    \\\\** ## Liquids **\\\\\\n    \\\\** ## **\\\\\\n\\n    {S_VOWELS_WN}w{S_VOWELS_WN}             --> ROMEN {_S_VOWELS_UP_WN_}{_S_VOWELS_DN_WN_}\\n    {S_VOWELS_WN}ww                         --> ROMEN {_GEMINATE_} {_S_VOWELS_UP_WN_}\\n    {S_VOWELS_WN}[l * ll]         --> 2,1   --> [LAMBE * LAMBE {_GEMINATE_}]{_S_VOWELS_UP_WN_}\\n    {S_VOWELS_WN}ld                         --> ALDA {_S_VOWELS_UP_WN_}\\n\\n\\n    \\\\** ## Sibilant (sifflantes) **\\\\\\n    \\\\** ## **\\\\\\n    {L8_KER}      ===  s * z \\n    {L8_IMG}      ===  SILME_NUQUERNA * ESSE_NUQUERNA \\n    {L8_KER_GEMS} ===  ss * zz \\n    {L8_IMG_GEMS} ===  SILME_NUQUERNA {_GEMINATE_} * ESSE_NUQUERNA {_GEMINATE_}\\n    \\n    {S_VOWELS_WN}[{L8_KER}]{S_VOWELS_WN}  --> 2,1,3 --> [{L8_IMG}]{_S_VOWELS_UP_WN_}{_S_VOWELS_DN_WN_}\\n    {S_VOWELS_WN}[{L8_KER_GEMS}]          --> 2,1   --> [{L8_IMG_GEMS}]{_S_VOWELS_UP_WN_}\\n\\n\\n    \\\\** ## FINAL S (Challenging!) **\\\\\\n    {S_VOWELS_WN}s_                               --> SARINCE_FLOURISHED {_S_VOWELS_UP_WN_} \\\\** # Final rule for s **\\\\\\n    _{S_VOWELS_WN}s_                              --> SILME_NUQUERNA {_S_VOWELS_UP_WN_} \\\\** # Rule _es_ **\\\\\\n    [{L_VOWELS} * _ ]{S_VOWELS_WN}s_              --> [{L_TEHTAR} * {NULL} ] SILME_NUQUERNA {_S_VOWELS_UP_WN_} \\\\** # Rule for éis_, és_ **\\\\\\n    {NULL}[ {S_VOWELS_NP_KERNEL} ]{S_VOWELS}s_    --> TELCO [ {TEHTAR_UP_NP} ] SILME_NUQUERNA {_S_VOWELS_UP_} \\\\** # Rule for ies_   **\\\\\\n\\n    s --> SILME \\\\** # Overload lonely s **\\\\\\n    z --> ESSE  \\\\** # Overload lonely z **\\\\\\n\\n    \\\\** ## Ligatures **\\\\\\n    \\\\** ## **\\\\\\n    {LINE_VARIOUS_KER}      ===  sċ * hw * çt * (χt,ħt)\\n    {LINE_VARIOUS_IMG}      ===  ANCA_CLOSED * TW_HW_LOWDHAM  * AHA_TINCO  * HWESTA_TINCO \\n \\n    {S_VOWELS_WN}[{LINE_VARIOUS_KER}]{S_VOWELS_WN} --> 2,1,3 --> [{LINE_VARIOUS_IMG}]{_S_VOWELS_UP_WN_}{_S_VOWELS_DN_WN_}\\n  \\n    \\\\** ## Various **\\\\\\n    \\\\** ## **\\\\\\n    {S_VOWELS_WN}h{S_VOWELS_WN}   --> HYARMEN {_S_VOWELS_UP_WN_}{_S_VOWELS_DN_WN_}\\n    {S_VOWELS_WN}hh               --> HYARMEN {_GEMINATE_} {_S_VOWELS_UP_WN_}\\n\\n\\n    \\\\** ## X **\\\\\\n    \\\\** ## For x, due to the cedilla, we cannot put tehtas under the tengwa. **\\\\\\n    {S_VOWELS_WN}x  --> QUESSE SARINCE {_S_VOWELS_UP_WN_}\\n    {S_VOWELS_WN}xx --> QUESSE SARINCE {_GEMINATE_} {_S_VOWELS_UP_WN_}\\n    {S_VOWELS_WN}nx --> QUESSE SARINCE {_NASAL_} {_S_VOWELS_UP_WN_}\\n  \\\\end\\n  \\n  \\\\beg rules punctuation \\n    ⁊ --> OLD_ENGLISH_AND\\n  \\n    . --> PUNCT_DDOT\\n    .. --> PUNCT_DOT PUNCT_DDOT PUNCT_DOT\\n    …  --> PUNCT_TILD\\n    ... --> PUNCT_TILD\\n    .... --> PUNCT_TILD\\n    ..... --> PUNCT_TILD\\n    ...... --> PUNCT_TILD\\n    ....... --> PUNCT_TILD\\n\\n    , --> PUNCT_DOT\\n    : --> PUNCT_DOT\\n    ; --> PUNCT_DOT\\n    ! --> PUNCT_EXCLAM\\n    ? --> PUNCT_INTERR\\n    · --> PUNCT_DOT\\n\\n    \\\\** Apostrophe **\\\\\\n\\n    \\' --> {NULL}\\n    ’ --> {NULL}\\n\\n    \\\\** NBSP **\\\\\\n    {NBSP} --> NBSP\\n    \\n    \\\\** Quotes **\\\\\\n\\n    “ --> DQUOT_OPEN\\n    ” --> DQUOT_CLOSE\\n    « --> DQUOT_OPEN \\n    » --> DQUOT_CLOSE \\n\\n    - --> {NULL}\\n    – --> PUNCT_TILD  \\n    — --> PUNCT_TILD\\n  \\n    [ --> PUNCT_PAREN_L\\n    ] --> PUNCT_PAREN_R\\n    ( --> PUNCT_PAREN_L_ALT \\\\** TODO : Remove alt ? **\\\\\\n    ) --> PUNCT_PAREN_R_ALT \\\\** TODO : Remove alt ? **\\\\\\n    { --> PUNCT_PAREN_L\\n    } --> PUNCT_PAREN_R\\n    < --> PUNCT_PAREN_L\\n    > --> PUNCT_PAREN_R  \\n\\n    \\\\** Not universal between fonts ... **\\\\\\n    $ --> ELVISH_PAREN\\n    ≤ --> RING_MARK_L \\\\** Ring inscription left beautiful stuff **\\\\\\n    ≥ --> RING_MARK_R \\\\** Ring inscription right beautiful stuff **\\\\\\n\\n  \\\\end\\n  \\n\\\\end\\n\\n\\\\beg postprocessor\\n  \\\\resolve_virtuals\\n\\\\end\"\nGlaemscribe.resource_manager.raw_modes[\"old_norse-futhark-runicus\"] = \"\\\\**\\n\\nGlǽmscribe (also written Glaemscribe) is a software dedicated to\\nthe transcription of texts between writing systems, and more \\nspecifically dedicated to the transcription of J.R.R. Tolkien\\'s \\ninvented languages to some of his devised writing systems.\\n\\nCopyright (C) 2015 Benjamin Babut (Talagan).\\n\\nThis program is free software: you can redistribute it and/or modify\\nit under the terms of the GNU Affero General Public License as published by\\nthe Free Software Foundation, either version 3 of the License, or\\nany later version.\\n\\nThis program is distributed in the hope that it will be useful,\\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\nGNU Affero General Public License for more details.\\n\\nYou should have received a copy of the GNU Affero General Public License\\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\\n\\n**\\\\\\n\\n\\\\beg changelog\\n  \\\\entry \\\"0.0.1\\\" \\\"Initial version\\\"\\n  \\\\entry \\\"0.0.2\\\" \\\"Adding quotes handling\\\"\\n\\\\end\\n\\n\\\\language \\\"Old Norse\\\"\\n\\\\writing  \\\"Runes\\\"\\n\\\\mode     \\\"Old Norse Futhark - Codex Runicus\\\"\\n\\\\version  \\\"0.0.2\\\"\\n\\\\authors  \\\"Historical, impl. Talagan (Benjamin Babut)\\\"\\n\\n\\\\world      primary_related_to_arda\\n\\\\invention  historical\\n\\n\\\\charset  unicode_runes true\\n\\n\\\\beg      preprocessor\\n  \\\\downcase\\n\\\\end\\n\\n\\\\beg      processor\\n    \\n  \\\\beg    rules litteral\\n    {A}       === (a,á) \\n    {E}       === (e,é) \\n    {I}       === (i,í,j)\\n    {O}       === (o,ó,ą,ą́)\\n    {U}       === (u,ú)\\n    {Y}       === (y,ý)\\n\\n    {AE}      === (æ,ǽ,ę)\\n    {OE}      === (ø,ǿ,œ)\\n    {OTREM}   === (ö,ǫ,ǫ́,ǭ)\\n    {AEI}     === (æi,ei)\\n\\n    \\\\**  VOWELS **\\\\\\n    \\n    \\\\**  ą (> a, o, á, ó plus tard)   **\\\\\\n\\n    {A}       --> SHORT_TWIG_AR\\n    {E}       --> RUNIC_E\\n    {I}       --> ISS \\n    {O}       --> RUNIC_O\\n    {U}       --> UR\\n    {Y}       --> LONG_BRANCH_YR\\n    {AE}      --> LONG_BRANCH_AR\\n    {OE}      --> RUNIC_OE\\n    {OTREM}   --> RUNIC_O       \\\\** # ö en islandais **\\\\\\n    ǭ         --> SHORT_TWIG_AR \\\\** # á en islandais  **\\\\\\n    {AEI}     --> LONG_BRANCH_AR ISS    \\n    \\n    \\\\**  au: ok    **\\\\\\n    {E}{Y}    --> LONG_BRANCH_AR LONG_BRANCH_YR\\n    {OE}{Y}   --> LONG_BRANCH_AR LONG_BRANCH_YR                       \\n\\n    \\\\**  CONSONANTS **\\\\\\n  \\n    b         --> BJARKAN\\n    c         --> RUNIC_C\\n    \\\\**  bb: ok **\\\\\\n    \\\\**  mb: ok **\\\\\\n    d         --> RUNIC_D\\n    \\\\**  dd: ok **\\\\\\n    \\\\**  nd: ok **\\\\\\n    ð         --> THORN\\n    (f,f_)    --> FEHU \\\\** # Second part is unuseful but exists in other modes **\\\\\\n    _g        --> RUNIC_G \\\\** # Initial / After prefix **\\\\\\n    (g,g_)    --> LONG_BRANCH_HAGALL \\\\** # Median / Final Spirant **\\\\\\n    gg        --> RUNIC_G RUNIC_G\\n    ng        --> SHORT_TWIG_NAUD RUNIC_G\\n    h         --> LONG_BRANCH_HAGALL\\n    k         --> KAUN\\n    \\\\**  kk: ok **\\\\\\n    \\\\**  nk: ok **\\\\\\n    l         --> LOGR\\n    \\\\**  ll: ok **\\\\\\n    m         --> LONG_BRANCH_MADR\\n    \\\\**  mm: ok **\\\\\\n    n         --> SHORT_TWIG_NAUD\\n    \\\\**  nn: ok **\\\\\\n    p         --> DOTTED_P\\n    \\\\**  pp: ok **\\\\\\n    \\\\**  mp: ok **\\\\\\n    (r,ř)     --> REID\\n    \\\\**  rr: ok **\\\\\\n    \\\\**  ř < z = rune ýr, none in this mode **\\\\\\n    s         --> SIGEL\\n    \\\\**  ss: ok **\\\\\\n    t         --> SHORT_TWIG_TYR\\n    nt        --> SHORT_TWIG_TYR\\n    \\\\**  tt: ok **\\\\\\n    þ        --> THORN\\n    vv       --> FEHU  \\\\** # v (< f) **\\\\\\n    v        --> URUZ  \\\\** # v (< w)  **\\\\\\n    w        --> URUZ  \\\\** # Should not exist but let\\'s handle it **\\\\\\n    x        --> RUNIC_X                 \\n    z        --> RUNIC_Z\\n  \\\\end\\n  \\n  \\\\beg    rules  punctuation\\n    , --> RUNIC_SINGLE_PUNCTUATION\\n    ; --> RUNIC_SINGLE_PUNCTUATION\\n    : --> RUNIC_MULTIPLE_PUNCTUATION\\n    . --> RUNIC_MULTIPLE_PUNCTUATION\\n    ! --> RUNIC_MULTIPLE_PUNCTUATION\\n    ? --> RUNIC_CROSS_PUNCTUATION\t\\n    “ --> {NULL}\\n    ” --> {NULL}\\n    « --> {NULL} \\n    » --> {NULL} \\n  \\\\end\\n\\\\end\\n  \\n    \\n      \"\nGlaemscribe.resource_manager.raw_modes[\"old_norse-futhark-younger\"] = \"\\\\**\\n\\nGlǽmscribe (also written Glaemscribe) is a software dedicated to\\nthe transcription of texts between writing systems, and more \\nspecifically dedicated to the transcription of J.R.R. Tolkien\\'s \\ninvented languages to some of his devised writing systems.\\n\\nCopyright (C) 2015 Benjamin Babut (Talagan).\\n\\nThis program is free software: you can redistribute it and/or modify\\nit under the terms of the GNU Affero General Public License as published by\\nthe Free Software Foundation, either version 3 of the License, or\\nany later version.\\n\\nThis program is distributed in the hope that it will be useful,\\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\nGNU Affero General Public License for more details.\\n\\nYou should have received a copy of the GNU Affero General Public License\\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\\n\\n**\\\\\\n\\n\\\\beg changelog\\n  \\\\entry \\\"0.0.1\\\" \\\"Initial version\\\"\\n  \\\\entry \\\"0.0.2\\\" \\\"Adding quotes handling\\\"\\n\\\\end\\n\\n\\\\language \\\"Old Norse\\\"\\n\\\\writing  \\\"Runes\\\"\\n\\\\mode     \\\"Old Norse Futhark - Younger Futhark\\\"\\n\\\\version  \\\"0.0.2\\\"\\n\\\\authors  \\\"Historical impl. Bertrand Bellet\\\"\\n\\n\\\\world      primary_related_to_arda\\n\\\\invention  historical\\n\\n\\\\charset  unicode_runes true\\n\\n\\\\beg options \\n  \\\\beg option runic_style RUNIC_STYLE_LONG_BRANCH \\n    \\\\value RUNIC_STYLE_LONG_BRANCH 0\\n    \\\\value RUNIC_STYLE_SHORT_TWIG  1\\n  \\\\end\\n\\\\end\\n\\n\\\\beg      preprocessor\\n  \\\\downcase\\n  \\n  \\\\** Dis-ambiguate q,c,k **\\\\\\n  \\\\rxsubstitute \\\"(q|c|k)\\\" \\\"k\\\"\\n\\\\end\\n\\n\\\\beg      processor\\n    \\n  \\\\beg    rules litteral\\n    {A}       === (a,á,æ,ǽ,ę) \\n    {I}       === (i,í,j,e,é)\\n    {O}       === (ą,ą́,ö,ǫ,ǫ́,ǭ)\\n    {U}       === (u,ú,o,ó,y,ý,ø,ǿ,œ)\\n    {AI}      === (æi,ei)\\n  \t{AU}      === (au,ǫu,ey,æy,øy,œy)\\n\\n    \\\\**  VOWELS **\\\\\\n    \\\\if \\\"runic_style == RUNIC_STYLE_LONG_BRANCH\\\"\\n      {AR}      === LONG_BRANCH_AR\\n      {OSS}     === LONG_BRANCH_OSS     \\n    \\\\else\\n      {AR}      === SHORT_TWIG_AR\\n      {OSS}     === SHORT_TWIG_OSS\\n    \\\\endif\\n    \\n    {A}       --> {AR}\\n    {I}       --> ISS \\n    {O}       --> {OSS}\\n    {U}       --> UR\\n    {AI}      --> {AR} ISS \\n\t  {AU}      --> {OSS} UR\\n    \\n    \\\\** CONSONANTS **\\\\\\n    \\\\if \\\"runic_style == RUNIC_STYLE_LONG_BRANCH\\\"\\n      {BJARKAN} === BJARKAN\\n      {HAGALL}  === LONG_BRANCH_HAGALL\\n      {MADR}    === LONG_BRANCH_MADR\\n      {NAUD}    === NAUD\\n      {YR}      === LONG_BRANCH_YR\\n      {SOL}     === LONG_BRANCH_SOL\\n      {TYR}     === TYR\\n    \\\\else\\n      {BJARKAN} === SHORT_TWIG_BJARKAN\\n      {HAGALL}  === SHORT_TWIG_HAGALL\\n      {MADR}    === SHORT_TWIG_MADR\\n      {NAUD}    === SHORT_TWIG_NAUD\\n      {YR}      === SHORT_TWIG_YR\\n      {SOL}     === SHORT_TWIG_SOL\\n      {TYR}     === SHORT_TWIG_TYR\\n    \\\\endif\\n    \\n    (b,bb,mb,p,pp,mp) --> {BJARKAN}\\n    (f,ff)            --> FE\\n    _g                --> KAUN      \\\\** # Initial / After prefix **\\\\\\n    (g,g_)            --> {HAGALL}  \\\\** # Median or final spirant **\\\\\\n    (h,hh)            --> {HAGALL}\\n    (k,nk,kk,gg,ng)   --> KAUN\\n    (l,ll)            --> LOGR\\n    (m,mm)            --> {MADR}\\n    (n,nn)            --> {NAUD}\\n    (r,rr)            --> REID\\n    (ř)               --> {YR} \\\\**  ř < Germanic z **\\\\\\n    (s,ss)            --> {SOL}\\n\t  (t,tt,nt,d,dd,nd) --> {TYR}\\n    (þ,þþ,ð,ðð)       --> THURS\\n    (v,vv,w,ww)       --> URUZ\\n    x                 --> KAUN {SOL}                 \\n    z                 --> {TYR} {SOL}\\n\t\\n    \\\\**  nasalization of a **\\\\\\n\t\t{A}(m,mm)        --> {OSS} {MADR}\\n\t\t{A}(n,nn)        --> {OSS} {NAUD}\\n\t\t{A}(mp,mb)       --> {OSS} {BJARKAN}\\n\t\t{A}(nt,nd)       --> {OSS} {TYR}\\n\t\t{A}(nk,ng)       --> {OSS} KAUN\t\t\t\t\\n  \\\\end\\n  \\n  \\\\beg    rules  punctuation\\n    , --> RUNIC_SINGLE_PUNCTUATION\\n    ; --> RUNIC_SINGLE_PUNCTUATION\\n    : --> RUNIC_MULTIPLE_PUNCTUATION\\n    . --> RUNIC_MULTIPLE_PUNCTUATION\\n    ! --> RUNIC_MULTIPLE_PUNCTUATION\\n    ? --> RUNIC_CROSS_PUNCTUATION\t\\n    “ --> {NULL}\\n    ” --> {NULL}\\n    « --> {NULL} \\n    » --> {NULL} \\n  \\\\end\\n\\\\end\\n  \\n    \\n      \"\nGlaemscribe.resource_manager.raw_modes[\"quenya-sarati\"] = \"\\\\**\\n\\nGlǽmscribe (also written Glaemscribe) is a software dedicated to\\nthe transcription of texts between writing systems, and more \\nspecifically dedicated to the transcription of J.R.R. Tolkien\\'s \\ninvented languages to some of his devised writing systems.\\n\\nCopyright (C) 2015 Benjamin Babut (Talagan).\\n\\nThis program is free software: you can redistribute it and/or modify\\nit under the terms of the GNU Affero General Public License as published by\\nthe Free Software Foundation, either version 3 of the License, or\\nany later version.\\n\\nThis program is distributed in the hope that it will be useful,\\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\nGNU Affero General Public License for more details.\\n\\nYou should have received a copy of the GNU Affero General Public License\\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\\n\\n**\\\\\\n\\n\\\\** Changelog **\\\\\\n\\\\**\\n\\\\beg changelog\\n  \\\\entry \\\"0.0.2\\\", \\\"Moved outspace character to general element\\\"\\n\\\\end\\n**\\\\\\n\\n\\\\language \\\"Quenya\\\"\\n\\\\writing  \\\"Sarati\\\"\\n\\\\mode     \\\"Quenya Sarati - Quenya Usage\\\"\\n\\\\version  \\\"0.0.3\\\"\\n\\\\authors  \\\"J.R.R. Tolkien, impl. Talagan (Benjamin Babut)\\\"\\n\\n\\\\world      arda\\n\\\\invention  jrrt\\n\\n\\\\beg changelog\\n  \\\\entry \\\"0.0.1\\\" \\\"Initial version\\\"\\n  \\\\entry \\\"0.0.2\\\" \\\"Adding quotes handling\\\"\\n  \\\\entry \\\"0.0.3\\\" \\\"Adding simple punctuation. Correcting \\'qui\\' by changing rule order for \\'qu\\' in preprocessor. Adding hl/hr.\\\"\\n\\\\end\\n\\n\\\\charset  sarati_eldamar true\\n\\n\\\\outspace SARATI_SPACE\\n\\n\\\\beg      preprocessor\\n  \\\\** Work exclusively downcase **\\\\\\n  \\\\downcase\\n  \\n  \\\\** Simplify trema vowels **\\\\\\n  \\\\** Removed ï and ü, not quite sure how to treat them for qenya : ex : oïkta diphthong or not ?  **\\\\\\n  \\\\substitute ä a\\n  \\\\substitute ë e\\n  \\\\substitute ö o\\n  \\\\substitute ÿ y\\n  \\n  \\\\** Dis-ambiguate long vowels **\\\\\\n  \\\\rxsubstitute \\\"(ā|â|aa)\\\"          \\\"á\\\"\\n  \\\\rxsubstitute \\\"(ē|ê)\\\"             \\\"é\\\" \\\\** ee is allowed in qenya **\\\\\\n  \\\\rxsubstitute \\\"(ī|î|iï|ïi|ïï|ii)\\\" \\\"í\\\"\\n  \\\\rxsubstitute \\\"(ō|ô|oo)\\\"          \\\"ó\\\"\\n  \\\\rxsubstitute \\\"(ū|û|uü|üu|üü|uu)\\\" \\\"ú\\\"\\n  \\\\rxsubstitute \\\"(ȳ|ŷ|yy)\\\"          \\\"ý\\\"\\n\\n  \\\\** Dis-ambiguate qu. Should come BEFORE correcting diphthongs. **\\\\\\n  \\\\substitute   \\\"qu\\\" \\\"q\\\" \\n\\n  \\\\** Dis-ambiguate old qenya diphthongs **\\\\\\n  \\\\** AT: The Quenya diphthongs are iu, eu, au, ai, oi, ui. \\n      In the Quenya Usage, u is treated as w, and i is treated as y, \\n      when they are the second element in diphthongs. \\n      Other than that, the standard conventions of each document apply. **\\\\\\n  \\\\substitute   \\\"iu\\\" \\\"iw\\\"\\n  \\\\substitute   \\\"eu\\\" \\\"ew\\\"\\n  \\\\substitute   \\\"au\\\" \\\"aw\\\"\\n  \\\\substitute   \\\"ai\\\" \\\"ay\\\"\\n  \\\\substitute   \\\"oi\\\" \\\"oy\\\"\\n  \\\\substitute   \\\"ui\\\" \\\"uy\\\"\\n\\n  \\\\** Split long a  **\\\\\\n  \\\\substitute   \\\"á\\\" \\\"aa\\\" \\n\\\\end\\n\\n\\\\beg      processor\\n\\n  \\n  \\\\beg    rules litteral \\n    {A}                           === a\\n    {AA}                          === aa     \\n    {E}                           === e\\n    {EE}                          === é     \\n    {I}                           === (i,ï) \\n    {II}                          === í     \\n    {O}                           === o \\n    {OO}                          === ó     \\n    {U}                           === (u,ü) \\n    {UU}                          === ú     \\n                                      \\n    {K}                           === (c,k)\\n    {MB}                          === (b,mb)\\n    {SS}                          === (z,ss)\\n\\n    {VOWELS}                      === {A}                             * {E}                           * {I}                             * {O}                             * {U}\\n    {LVOWELS}                     === {AA}                            * {EE}                          * {II}                            * {OO}                            * {UU}\\n    {TEHTAS_}                     === SARATI_QUENYA_A                 * SARATI_QUENYA_E               * SARATI_QUENYA_I                 * SARATI_QUENYA_O                 * SARATI_QUENYA_U \\n    {STEHTAS}                     === {NULL}                          * SARATI_QUENYA_E               * SARATI_QUENYA_I                 * SARATI_QUENYA_O                 * SARATI_QUENYA_U \\n    {LTEHTAS}                     === SARATI_QUENYA_A SARATI_DASH_U   * SARATI_QUENYA_E SARATI_DASH_U * SARATI_QUENYA_I SARATI_DASH_U   * SARATI_QUENYA_O SARATI_DASH_U   * SARATI_QUENYA_U SARATI_DASH_U \\n    {LTEHTAS_FOR_CONSONANTS}      === SARATI_QUENYA_A                 * SARATI_QUENYA_E SARATI_DASH_U * SARATI_QUENYA_I SARATI_DASH_U   * SARATI_QUENYA_O SARATI_DASH_U   * SARATI_QUENYA_U SARATI_DASH_U\\n\\n    {V_L_KER_WN}                  === [ {VOWELS}  * {LVOWELS}                 * {NULL} ]\\n    {V_IMG_FOR_CONSONNANTS_WN}    === [ {STEHTAS} * {LTEHTAS_FOR_CONSONANTS}  * SARATI_DOT_D ] \\\\** No vowel == dot below **\\\\\\n\\n    \\\\**  RULES   **\\\\\\n\\n    [{VOWELS}]            -->   [{TEHTAS_}] SARATI_QUENYA_LONG_VOWEL_CARRIER  \\\\** Isolated vowels : use short carrier (reversed order RTL) **\\\\\\n    [{LVOWELS}]           -->   [{LTEHTAS}] SARATI_QUENYA_LONG_VOWEL_CARRIER  \\\\** Long vowels: carrier + dash + tehta **\\\\\\n\\n    \\\\**  FIRST LINE **\\\\\\n\\n    {L1_KER}              === t         * p         * {K}             * q                 * tt                      * pp                      * {K}{K}  \\n    {L1_IMG}              === SARATI_T  * SARATI_P  * SARATI_QUENYA_C * SARATI_QUENYA_QU  * SARATI_DASH_D SARATI_T  * SARATI_DASH_D SARATI_P  * SARATI_DASH_D SARATI_QUENYA_C \\n\\n    [{L1_KER}]{V_L_KER_WN}    --> 2,1 --> {V_IMG_FOR_CONSONNANTS_WN}[{L1_IMG}]\\n\\n    ty{V_L_KER_WN}            --> {V_IMG_FOR_CONSONNANTS_WN} SARATI_QUENYA_TY\\n    ts{V_L_KER_WN}            --> {V_IMG_FOR_CONSONNANTS_WN} SARATI_QUENYA_TS\\n\\n    \\\\** Missing py, ps? **\\\\\\n\\n    \\\\**  SECOND LINE **\\\\\\n\\n    {L2_KER}        === nd                * {MB}              * ng        * ngw\\n    {L2_IMG}        === SARATI_QUENYA_ND  * SARATI_QUENYA_MB  * SARATI_NG * SARATI_QUENYA_NGW\\n\\n    [{L2_KER}]{V_L_KER_WN}    --> 2,1 --> {V_IMG_FOR_CONSONNANTS_WN}[{L2_IMG}]\\n\\n    ndy{V_L_KER_WN}           --> {V_IMG_FOR_CONSONNANTS_WN} SARATI_QUENYA_NDY\\n\\n    \\\\** ########### **\\\\\\n    \\\\**  THIRD LINE **\\\\\\n\\n    {L3_KER}        === (th,þ)            * f                   * (h,χ)     *  hw\\n    {L3_IMG}        === SARATI_QUENYA_S   * SARATI_QUENYA_F_ALT * SARATI_H  *  SARATI_QUENYA_HW\\n\\n    [{L3_KER}]{V_L_KER_WN}    --> 2,1 --> {V_IMG_FOR_CONSONNANTS_WN}[{L3_IMG}]\\n\\n    hy{V_L_KER_WN}            --> {V_IMG_FOR_CONSONNANTS_WN} SARATI_QUENYA_HY\\n\\n    \\\\** # The two following are not treated the same way in tengwar **\\\\\\n    ht{V_L_KER_WN}            --> {V_IMG_FOR_CONSONNANTS_WN} SARATI_QUENYA_HT_ALT_1\\n    hty{V_L_KER_WN}           --> {V_IMG_FOR_CONSONNANTS_WN} SARATI_QUENYA_HTY\\n   \\n    \\n    hl{V_L_KER_WN}            --> {V_IMG_FOR_CONSONNANTS_WN} SARATI_QUENYA_HL\\n    hr{V_L_KER_WN}            --> {V_IMG_FOR_CONSONNANTS_WN} SARATI_QUENYA_HR\\n    \\n    \\n\\n    \\\\** ########### **\\\\\\n    \\\\**  FOURTH LINE **\\\\\\n\\n    {LINE_4TH_KER}        === nt                * mp                * nc                * nq \\\\** # Not nqu, due to preprocessor **\\\\\\n    {LINE_4TH_IMG}        === SARATI_QUENYA_NT  * SARATI_QUENYA_MP  * SARATI_QUENYA_NC  * SARATI_QUENYA_NQU\\n    \\n    [{LINE_4TH_KER}]{V_L_KER_WN}  --> 2,1 --> {V_IMG_FOR_CONSONNANTS_WN}[{LINE_4TH_IMG}]\\n    nty{V_L_KER_WN}               --> {V_IMG_FOR_CONSONNANTS_WN} SARATI_QUENYA_NTY\\n\\n    \\\\** ########### **\\\\\\n    \\\\**  FIFTH LINE **\\\\\\n\\n    {LINE_5TH_KER}        === n         * m         * ñ                         * ñw                * _nw                 * nn                      * mm\\n    {LINE_5TH_IMG}        === SARATI_N  * SARATI_M  * SARATI_QUENYA_VELAR_NASAL * SARATI_QUENYA_NW  * SARATI_QUENYA_NW    * SARATI_DASH_D SARATI_N  * SARATI_DASH_D SARATI_M\\n\\n    [{LINE_5TH_KER}]{V_L_KER_WN}  --> 2,1 --> {V_IMG_FOR_CONSONNANTS_WN}[{LINE_5TH_IMG}]\\n    ny{V_L_KER_WN}                -->  {V_IMG_FOR_CONSONNANTS_WN} SARATI_QUENYA_NY\\n\\n    \\\\** Missing my ? **\\\\\\n\\n    \\\\** ########### **\\\\\\n    \\\\**  SIXTH LINE **\\\\\\n\\n    {LINE_6TH_KER}                === r        * v                    * y               * w         * rr  \\n    {LINE_6TH_IMG}                === SARATI_R * SARATI_QUENYA_V_ALT  * SARATI_QUENYA_Y * SARATI_W  * SARATI_DASH_D SARATI_R \\n\\n    [{LINE_6TH_KER}]{V_L_KER_WN}  --> 2,1 --> {V_IMG_FOR_CONSONNANTS_WN}[{LINE_6TH_IMG}]\\n\\n    \\\\** Weak r is not distinguished **\\\\\\n    \\\\** Missing ry? rd?  **\\\\\\n\\n    \\\\** ########### **\\\\\\n    \\\\**  L Line **\\\\\\n\\n    {LINE_L_KER}                === l         * ll                      * d\\n    {LINE_L_IMG}                === SARATI_L  * SARATI_DASH_D SARATI_L  * SARATI_D\\n\\n    [{LINE_L_KER}]{V_L_KER_WN}  --> 2,1 --> {V_IMG_FOR_CONSONNANTS_WN}[{LINE_L_IMG}]\\n\\n    \\\\**  Missing ld, ly, hl, hr ? **\\\\\\n\\n    \\\\** ########### **\\\\\\n    \\\\**  S/Z line **\\\\\\n\\n    \\\\** st v **\\\\\\n    \\\\** sty … **\\\\\\n    \\\\** ss ¦ ou w ou i  **\\\\\\n\\n    \\\\**  For s, use the same sarat as for th **\\\\\\n\\n    {LINE_8TH_KER}        === s                 * {SS}   \\n    {LINE_8TH_IMG}        === SARATI_QUENYA_S   * SARATI_QUENYA_SS_ALT_1 \\n\\n    [{LINE_8TH_KER}]{V_L_KER_WN} --> 2,1 --> {V_IMG_FOR_CONSONNANTS_WN}[{LINE_8TH_IMG}]\\n\\n    {LINE_8PTH_KER}        === st                 * sty\\n    {LINE_8PTH_IMG}        === SARATI_QUENYA_ST   * SARATI_QUENYA_STY \\n\\n    [{LINE_8PTH_KER}]{V_L_KER_WN} --> 2,1 --> {V_IMG_FOR_CONSONNANTS_WN}[{LINE_8PTH_IMG}]\\n\\n    \\\\** ############ **\\\\\\n    \\\\**  OTHERS **\\\\\\n\\n    x {V_L_KER_WN}   --> {V_IMG_FOR_CONSONNANTS_WN} SARATI_QUENYA_X\\n  \\\\end\\n    \\n  \\\\beg    rules punctuation\\n    . --> PUNCT_2_DOT\\n    ! --> PUNCT_2_DOT\\n    ? --> PUNCT_2_DOT\\n    \\n    , --> PUNCT_DOT\\n    ; --> PUNCT_DOT\\n    : --> PUNCT_DOT\\n    \\n    - --> SARATI_SPACE\\n    – --> SARATI_SPACE\\n    \\n    · --> {NULL}\\n    \\' --> {NULL}\\n    [ --> {NULL}\\n    ] --> {NULL}\\n    ‘ --> {NULL}\\n    ’ --> {NULL}\\n    “ --> {NULL}\\n    ” --> {NULL}\\n    « --> {NULL}\\n    » --> {NULL}\\n  \\\\end\\n  \\n\\\\end\\n\\n\\\\beg postprocessor\\n  \\\\reverse\\n\\\\end\\n\\n\\\\**  Ponctuation **\\\\\\n\\n\\n\\n\\\\** ############### **\\\\\\n\\\\**  Helpers, transcribed from amanye tenceli **\\\\\\n\\n\\\\** ########### **\\\\\\n\\\\** # p Z **\\\\\\n\\\\** # t \\\" **\\\\\\n\\\\** # c # **\\\\\\n\\\\** # q p **\\\\\\n\\n\\\\** # ty ± **\\\\\\n\\\\** # ts g **\\\\\\n\\n\\\\** ########### **\\\\\\n\\\\** # mb _ **\\\\\\n\\\\** # nd € **\\\\\\n\\\\** # ndy ³ **\\\\\\n\\\\** # ng & **\\\\\\n\\\\** # ngw s **\\\\\\n\\n\\\\** ########### **\\\\\\n\\n\\\\** # f \\\\ ou [ ## Aside or below **\\\\\\n\\\\** # s (th) Ÿ **\\\\\\n\\\\** # hy ½ **\\\\\\n\\\\** # h Ë **\\\\\\n\\\\** # hw º **\\\\\\n\\n\\\\** # ht ² ou ‚ **\\\\\\n\\\\** # hty Œ **\\\\\\n\\n\\\\** ########### **\\\\\\n\\n\\\\** # mp d **\\\\\\n\\\\** # nt ª **\\\\\\n\\\\** # nty „ **\\\\\\n\\\\** # nc — **\\\\\\n\\\\** # nq ˜ **\\\\\\n\\n\\\\** ########### **\\\\\\n\\n\\\\** # m P **\\\\\\n\\\\** # n À **\\\\\\n\\\\** # ny ‰ **\\\\\\n\\\\** # ñ + **\\\\\\n\\\\** # nw , **\\\\\\n\\n\\\\** ########### **\\\\\\n\\n\\\\** # v a ou ` ## Aside or below **\\\\\\n\\\\** # r F **\\\\\\n\\\\** # y » **\\\\\\n\\\\** # w ¹ **\\\\\\n\\n\\\\** ########### **\\\\\\n\\n\\\\** # l ? **\\\\\\n\\n\\\\** ########### **\\\\\\n\\n\\\\** # st v **\\\\\\n\\\\** # sty … **\\\\\\n\\\\** # ss ¦ ou w ou i  **\\\\\\n\\n\\\\** ################ **\\\\\\n\\n\\\\** # x (ks) y **\\\\\\n\\n\\n\\\\** # GEMINATION -> ó **\\\\\\n\\\\** # PRECEDING S -> ý **\\\\\\n\\\\** # SHORT CARRIER -> È **\\\\\\n\\\\** #  **\\\\\\n\\\\** # Vowels : **\\\\\\n\\\\** # Stop Vowel: Ó **\\\\\\n\\\\** # i   Ò **\\\\\\n\\\\** # e   è ou Ô **\\\\\\n\\\\** # a   Ö **\\\\\\n\\\\** # o   Ü **\\\\\\n\\\\** # u   Þ **\\\\\\n\\\\** #  **\\\\\\n\\\\** # Long Vowels: **\\\\\\n\\\\** # Carrier dash : ò **\\\\\\n\\\\** # Always use carrier dashes EXCEPT for a **\\\\\\n\\n      \\n\\n\"\nGlaemscribe.resource_manager.raw_modes[\"quenya-tengwar-classical\"] = \"\\\\**\\n\\nGlǽmscribe (also written Glaemscribe) is a software dedicated to\\nthe transcription of texts between writing systems, and more\\nspecifically dedicated to the transcription of J.R.R. Tolkien\\'s\\ninvented languages to some of his devised writing systems.\\n\\nCopyright (C) 2015 Benjamin Babut (Talagan).\\n\\nThis program is free software: you can redistribute it and/or modify\\nit under the terms of the GNU Affero General Public License as published by\\nthe Free Software Foundation, either version 3 of the License, or\\nany later version.\\n\\nThis program is distributed in the hope that it will be useful,\\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\nGNU Affero General Public License for more details.\\n\\nYou should have received a copy of the GNU Affero General Public License\\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\\n\\n**\\\\\\n\\n\\\\**\\n  TODO : Option for dot or not in \\'a implicit\\' option before long vowels ?\\n  TODO : bb, dd etc ? (for noobs)\\n**\\\\\\n\\n\\\\beg changelog\\n  \\\\entry \\\"0.0.2\\\" \\\"added χ for the word χarina, correcting ts/ps sequences to work better with eldamar\\\"\\n  \\\\entry \\\"0.0.3\\\" \\\"added o/u curl option\\\"\\n  \\\\entry \\\"0.0.4\\\" \\\"added voiced plosives corner cases treatment and option to chose method\\\"\\n  \\\\entry \\\"0.0.5\\\" \\\"fixing h+long vowel medially\\\"\\n  \\\\entry \\\"0.0.6\\\" \\\"adding option for alveolarized consonants  st (t+t), pt (p+t), ht (c+t)\\\"\\n  \\\\entry \\\"0.0.7\\\" \\\"Fixing rb/lb, to be treated as r+mb and l+mb\\\"\\n  \\\\entry \\\"0.0.8\\\" \\\"Correcting double dot version for ry (aesthetics)\\\"\\n  \\\\entry \\\"0.0.9\\\" \\\"Adding \\'implicit a\\' option.\\\"\\n  \\\\entry \\\"0.1.0\\\" \\\"Simplified diacritic use by using new post-processor directive\\\"\\n  \\\\entry \\\"0.1.1\\\" \\\"Added default option for voiced plosives : use mb, nd, ng, ngw\\\"\\n  \\\\entry \\\"0.1.2\\\" \\\"Added a tehta shape selection\\\"\\n  \\\\entry \\\"0.1.3\\\" \\\"Fixing ks, ps, ts. Fixing dot under ore, romen in implicit a mode.\\\"\\n  \\\\entry \\\"0.1.4\\\" \\\"Conforming to the new csub format. Cleaning with new csub classes.\\\"\\n  \\\\entry \\\"0.1.5\\\" \\\"csub removed. Now using virtual chars defined in charsets.\\\"\\n  \\\\entry \\\"0.1.6\\\" \\\"Removing unutixe under óre for coherency in implicit a submode.\\\"\\n  \\\\entry \\\"0.9.0\\\" \\\"Adding double tehtar support\\\"\\n  \\\\entry \\\"0.9.1\\\" \\\"Added support for the FreeMonoTengwar font\\\"\\n  \\\\entry \\\"0.9.2\\\" \\\"Added support for the Tengwar Elfica font\\\"\\n  \\\\entry \\\"0.9.4\\\" \\\"Adding Vanyarin ldy, rdy, lg, rg, ff\\\"\\n  \\\\entry \\\"0.9.5\\\" \\\"Added support for inlined raw tengwar\\\"\\n  \\\\entry \\\"0.9.6\\\" \\\"Added support for non-breaking spaces\\\"     \\n  \\\\entry \\\"0.9.7\\\" \\\"Correcting visibility options to conform to new glaeml args strict syntax\\\"\\n  \\\\entry \\\"0.9.8\\\" \\\"Adding palatalized geminates (requested)\\\"\\n  \\\\entry \\\"0.9.9\\\" \\\"Hotfix on 0.9.8\\\"\\n  \\\\entry \\\"0.9.10\\\" \\\"Removing option on palatalized geminates (always accumulate)\\\"\\n  \\\\entry \\\"0.9.11\\\" \\\"Added support for new unicode charsets\\\"\\n  \\\\entry \\\"0.9.12\\\" \\\"Added support for the Tengwar Telcontar font\\\"\\n\\\\end\\n\\\\version  \\\"0.9.12\\\"\\n\\n\\\\language \\\"Quenya\\\"\\n\\\\writing  \\\"Tengwar\\\"\\n\\\\mode     \\\"Quenya Tengwar - Classical\\\"\\n\\\\authors  \\\"J.R.R. Tolkien, impl. Talagan (Benjamin Babut)\\\"\\n\\n\\\\world      arda\\n\\\\invention  jrrt\\n\\n\\\\charset  tengwar_ds_sindarin true\\n\\\\charset  tengwar_ds_parmaite false\\n\\\\charset  tengwar_ds_eldamar  false\\n\\\\charset  tengwar_ds_annatar  false\\n\\\\charset  tengwar_ds_elfica   false\\n\\n\\\\charset  tengwar_guni_sindarin false\\n\\\\charset  tengwar_guni_parmaite false\\n\\\\charset  tengwar_guni_eldamar  false\\n\\\\charset  tengwar_guni_annatar  false\\n\\\\charset  tengwar_guni_elfica   false\\n\\n\\\\charset  tengwar_freemono    false\\n\\\\charset  tengwar_telcontar   false\\n\\n\\\\raw_mode \\\"raw-tengwar\\\"\\n\\n\\\\beg      options\\n  \\\\option implicit_a false\\n  \\n  \\\\beg option a_tetha_shape A_SHAPE_THREE_DOTS\\n    \\\\value A_SHAPE_THREE_DOTS 1\\n    \\\\value A_SHAPE_CIRCUMFLEX 2\\n  \\\\end\\n  \\\\beg option reverse_o_u_tehtar U_UP_O_DOWN\\n    \\\\value O_UP_U_DOWN 1\\n    \\\\value U_UP_O_DOWN 2\\n  \\\\end\\n  \\\\beg option long_vowels_format LONG_VOWELS_USE_LONG_CARRIER\\n    \\\\value LONG_VOWELS_USE_LONG_CARRIER 1\\n    \\\\value LONG_VOWELS_USE_DOUBLE_TEHTAR 2\\n  \\\\end  \\n  \\n  \\\\** REMOVED BECAUSE UNATTESTED\\n  \\\\beg option double_tehta_a false\\n    \\\\visible_when \\\"long_vowels_format == LONG_VOWELS_USE_DOUBLE_TEHTAR\\\"\\n  \\\\end\\n  **\\\\\\n  \\\\beg option double_tehta_e false\\n    \\\\visible_when \\\"long_vowels_format == LONG_VOWELS_USE_DOUBLE_TEHTAR\\\"\\n  \\\\end\\n  \\\\beg option double_tehta_i false\\n    \\\\visible_when \\\"long_vowels_format == LONG_VOWELS_USE_DOUBLE_TEHTAR\\\"\\n  \\\\end\\n  \\\\beg option double_tehta_o true\\n    \\\\visible_when \\\"long_vowels_format == LONG_VOWELS_USE_DOUBLE_TEHTAR\\\"\\n  \\\\end\\n  \\\\beg option double_tehta_u true\\n    \\\\visible_when \\\"long_vowels_format == LONG_VOWELS_USE_DOUBLE_TEHTAR\\\"\\n  \\\\end\\n  \\n  \\\\option split_diphthongs false\\n  \\\\option always_use_romen_for_r false\\n  \\n  \\\\beg option voiced_plosives_treatment VOICED_PLOSIVES_AS_NASALIZED\\n    \\\\value VOICED_PLOSIVES_AS_NASALIZED 0\\n    \\\\value VOICED_PLOSIVES_WITH_STROKE 1\\n    \\\\value VOICED_PLOSIVES_WITH_XTD 2\\n  \\\\end\\n  \\\\beg option st_pt_ht ST_PT_HT_SEPARATED\\n    \\\\value ST_PT_HT_SEPARATED 1\\n    \\\\value ST_PT_HT_WITH_XTD 2\\n  \\\\end\\n    \\n  \\\\beg option consonant_modification_style CONSONANT_MODIFICATION_STYLE_BAR\\n    \\\\value CONSONANT_MODIFICATION_STYLE_WAVE 0\\n    \\\\value CONSONANT_MODIFICATION_STYLE_BAR 1\\n  \\\\end\\n  \\n  \\\\option reverse_numbers true\\n  \\\\beg option numbers_base BASE_12\\n    \\\\value    BASE_10 10\\n    \\\\value    BASE_12 12\\n  \\\\end\\n\\\\end\\n\\n\\\\beg      preprocessor\\n  \\\\** Work exclusively downcase **\\\\\\n  \\\\downcase\\n\\n  \\\\** Simplify trema vowels **\\\\\\n  \\\\substitute ä a\\n  \\\\substitute ë e\\n  \\\\substitute ï i\\n  \\\\substitute ö o\\n  \\\\substitute ü u\\n  \\\\substitute ÿ y\\n\\n  \\\\** Dis-ambiguate long vowels **\\\\\\n  \\\\rxsubstitute \\\"(ā|â|aa)\\\" \\\"á\\\"\\n  \\\\rxsubstitute \\\"(ē|ê|ee)\\\" \\\"é\\\"\\n  \\\\rxsubstitute \\\"(ī|î|ii)\\\" \\\"í\\\"\\n  \\\\rxsubstitute \\\"(ō|ô|oo)\\\" \\\"ó\\\"\\n  \\\\rxsubstitute \\\"(ū|û|uu)\\\" \\\"ú\\\"\\n  \\\\rxsubstitute \\\"(ȳ|ŷ|yy)\\\" \\\"ý\\\"\\n\\n  \\\\** Dis-ambiguate qu **\\\\\\n  \\\\substitute   \\\"qu\\\" \\\"q\\\" \\n    \\n  \\\\elvish_numbers \\\"\\\\\\\\eval numbers_base\\\" \\\"\\\\\\\\eval reverse_numbers\\\"\\n\\\\end\\n\\n\\n\\\\beg processor\\n\\n  \\\\beg    rules litteral\\n    \\n    {K}                 ===  (c,k)\\n    {SS}                ===  (z,ss)\\n    \\n    \\\\if \\\"consonant_modification_style == CONSONANT_MODIFICATION_STYLE_WAVE\\\"\\n      {GEMINATE} === GEMINATE_SIGN_TILD\\n    \\\\else\\n      {GEMINATE} === GEMINATE_SIGN\\n    \\\\endif\\n    \\n    {PALATAL} === PALATAL_SIGN\\n\\n    {VOWELS}            === a               *  e              * i              * o              *  u\\n    {LVOWELS}           === á               *  é              * í              * ó              *  ú\\n\\n    \\\\if \\\"reverse_o_u_tehtar == U_UP_O_DOWN\\\"\\n      {O_LOOP}        === O_TEHTA\\n      {O_LOOP_DOUBLE} === O_TEHTA_DOUBLE\\n      {U_LOOP}        === U_TEHTA\\n      {U_LOOP_DOUBLE} === U_TEHTA_DOUBLE\\n    \\\\else\\n      {O_LOOP}        === U_TEHTA\\n      {O_LOOP_DOUBLE} === U_TEHTA_DOUBLE\\n      {U_LOOP}        === O_TEHTA\\n      {U_LOOP_DOUBLE} === O_TEHTA_DOUBLE\\n    \\\\endif\\n\\n    \\\\if \\\"a_tetha_shape == A_SHAPE_THREE_DOTS\\\"\\n      {A_SHAPE}         === A_TEHTA\\n    \\\\else\\n      {A_SHAPE}         === A_TEHTA_CIRCUM\\n    \\\\endif\\n\\n    \\\\if implicit_a\\n      {_A_}              === {NULL}\\n      {_NVOWEL_}         === NO_VOWEL_DOT\\n    \\\\else\\n      {_A_}              === {A_SHAPE}\\n      {_NVOWEL_}         === {NULL}\\n    \\\\endif\\n\\n    {_TEHTAR_}          === {_A_}      *  E_TEHTA     *  I_TEHTA    * {O_LOOP}    *  {U_LOOP}\\n\\n    \\\\if split_diphthongs\\n      {WDIPHTHONGS}     === {NULL}\\n      {_WDIPHTHONGS_}   === {NULL}\\n    \\\\else\\n      {DIPHTHONGS}      === ai            * au            * eu            * iu             * oi               * ui\\n      {_DIPHTHONGS_}    === YANTA {_A_}   * URE {_A_}     * URE E_TEHTA   * URE I_TEHTA    * YANTA {O_LOOP}   * YANTA {U_LOOP}\\n      {WDIPHTHONGS}     === * {DIPHTHONGS}   \\\\** groovy! **\\\\\\n      {_WDIPHTHONGS_}   === * {_DIPHTHONGS_} \\\\** same thing **\\\\\\n    \\\\endif\\n    \\n\t\t{_LONG_A_}      === ARA {A_SHAPE}\\n\t\t{_LONG_E_}      === ARA E_TEHTA\t\\n\t\t{_LONG_I_}      === ARA I_TEHTA\\n\t\t{_LONG_O_}      === ARA {O_LOOP}\t\\n\t\t{_LONG_U_}      === ARA {U_LOOP}\\n\t\t{_LONE_LONG_A_} === {_LONG_A_}\\n\t\t{_LONE_LONG_E_} === {_LONG_E_}\\n\t\t{_LONE_LONG_I_} === {_LONG_I_}\\n\t\t{_LONE_LONG_O_} === {_LONG_O_}\\n\t\t{_LONE_LONG_U_} === {_LONG_U_}\\n    \\n    {LTEHTAR}       === {NULL}\\n    {_LTEHTAR_}     === {NULL} \t\t\t\t\\n    \t\\n\t\t\\\\if implicit_a\\n     \t{_LONG_A_}         === {A_SHAPE}        \\\\** Eat the long a **\\\\\\n  \t\t{_LONE_LONG_A_}    === TELCO {A_SHAPE}  \\\\** Eat the long a **\\\\\\n      {LTEHTAR}          === {LTEHTAR}   * á\\n      {_LTEHTAR_}        === {_LTEHTAR_} * {_LONG_A_}\\n    \\\\endif\\n \t\t\\n\t\t\\\\if \\\"long_vowels_format == LONG_VOWELS_USE_DOUBLE_TEHTAR\\\"\\n    \\\\** REMOVED BECAUSE UNATTESTED\\n\t    \\\\if \\\"double_tehta_a && !implicit_a\\\"\\n\t\t    {_LONG_A_}       === A_TEHTA_DOUBLE\\n\t\t\t  {_LONE_LONG_A_}  === TELCO {_LONG_A_}\\n        {LTEHTAR}        === {LTEHTAR}   * á\\n        {_LTEHTAR_}      === {_LTEHTAR_} * {_LONG_A_}\\n  \t  \\\\endif\t\t\\n    **\\\\\\n\t    \\\\if double_tehta_e\\n\t\t    {_LONG_E_}       === E_TEHTA_DOUBLE\\n\t\t    {_LONE_LONG_E_}  === TELCO {_LONG_E_}\\n        {LTEHTAR}        === {LTEHTAR}   * é\\n        {_LTEHTAR_}      === {_LTEHTAR_} * {_LONG_E_}\\n\t\t\t\\\\endif\\n\t\t  \\\\if double_tehta_i\\n\t\t    {_LONG_I_}       === I_TEHTA_DOUBLE\\n\t\t    {_LONE_LONG_I_}  === TELCO {_LONG_I_}\\n        {LTEHTAR}        === {LTEHTAR}   * í\\n        {_LTEHTAR_}      === {_LTEHTAR_} * {_LONG_I_}\\n\t\t  \\\\endif\\n\t\t  \\\\if double_tehta_o\\n\t\t    {_LONG_O_}       === {O_LOOP_DOUBLE}\\n\t\t    {_LONE_LONG_O_}  === TELCO {_LONG_O_}\\n        {LTEHTAR}        === {LTEHTAR}   * ó\\n        {_LTEHTAR_}      === {_LTEHTAR_} * {_LONG_O_}\\n\t\t  \\\\endif\\n\t\t  \\\\if double_tehta_u\\n\t\t    {_LONG_U_}       === {U_LOOP_DOUBLE}\\n\t\t    {_LONE_LONG_U_}  === TELCO {_LONG_U_}\\n        {LTEHTAR}        === {LTEHTAR}   * ú\\n        {_LTEHTAR_}      === {_LTEHTAR_} * {_LONG_U_}\\n\t\t  \\\\endif\\n    \\\\endif  \\n       \t\t\\n    \\\\** images of long vowels, either tehtar or ara versions **\\\\\\n    {_LVOWELS_}     === {_LONG_A_} * {_LONG_E_} * {_LONG_I_} * {_LONG_O_} * {_LONG_U_}      \\n\\n\t\t{WLONG}         === * {LVOWELS} \\n\t\t{_WLONG_}       === * {_LVOWELS_}\\n\\n    {V_D}           === [ {VOWELS} {WLONG} {WDIPHTHONGS} ]\\n    {V_D_WN}        === [ {VOWELS} {WLONG} {WDIPHTHONGS} * {NULL} ]\\n\\n    {_V_D_}         === [ {_TEHTAR_} {_WLONG_} {_WDIPHTHONGS_} ]\\n    {_V_D_WN_}      === [ {_TEHTAR_} {_WLONG_} {_WDIPHTHONGS_} * {_NVOWEL_} ]\\n\t\t\\n\t\t\\\\** LONE SHORT VOWELS **\\\\\\n    [{VOWELS}]    --> TELCO [{_TEHTAR_}]  \\\\** Replace isolated short vowels **\\\\\\n    \\n\t\t\\\\** LONE LONG VOWELS **\\\\\t\\n\t\t[{LVOWELS}]   --> [{_LONE_LONG_A_} * {_LONE_LONG_E_} * {_LONE_LONG_I_} * {_LONE_LONG_O_} * {_LONE_LONG_U_}]\\n\\n    \\\\if !split_diphthongs\\n      [{DIPHTHONGS}]    -->   [{_DIPHTHONGS_}]     \\\\**  Replace diphthongs **\\\\\\n    \\\\endif\\n\\n    \\\\** ===================== **\\\\\\n    \\\\**     1ST LINE RULES    **\\\\\\n    \\\\** ===================== **\\\\\\n    {L1}          === t     * p       * {K}   * q\\n    {_L1_}        === TINCO * PARMA   * CALMA * QUESSE\\n\\n    \\\\** GEMINATED **\\\\\\n    {L1_1_GEMS}   === tt               * pp                 * {K}{K}\\n    {_L1_1_GEMS_} === TINCO {GEMINATE} * PARMA {GEMINATE}   * CALMA {GEMINATE}\\n\\n    \\\\** NORMAL **\\\\\\n    [ {L1} * {L1_1_GEMS} ] {V_D_WN} --> [ {_L1_} * {_L1_1_GEMS_} ] {_V_D_WN_}\\n\\n    \\\\** PALATAL **\\\\\\n    [t * p * {K}] y {V_D_WN} --> [TINCO * PARMA * CALMA] {PALATAL} {_V_D_WN_}\\n\\n    \\\\** PALATAL GEMINATES **\\\\\\n    [tt * pp * {K}{K}] y {V_D_WN} --> [TINCO * PARMA * CALMA] {GEMINATE} {PALATAL} {_V_D_WN_}\\n    \\n    \\\\** For alveolarized consonants, we must put the SARINCE just after the tengwa\\n        because else, FreeMonoTengwar will not handle well the ligature. Anyway, this is\\n        more logical, but the tehta placement will not be perfect for older fonts **\\\\\\n    ts{V_D_WN}          --> TINCO SARINCE {_V_D_WN_} \\n    ps{V_D_WN}          --> PARMA SARINCE {_V_D_WN_} \\n    {K}s{V_D_WN}        --> CALMA SARINCE {_V_D_WN_}   \\n    x{V_D_WN}           --> CALMA SARINCE {_V_D_WN_}   \\\\** render ks for x **\\\\\\n\\n    \\\\** ===================== **\\\\\\n    \\\\**     2ND LINE RULES    **\\\\\\n    \\\\** ===================== **\\\\\\n    {L2}          === nd      * mb        * ng      * ngw\\n    {_L2_}        === ANDO    * UMBAR     * ANGA    * UNGWE\\n\\n    \\\\** STANDARD **\\\\\\n    [{L2}]{V_D_WN}  --> [{_L2_}]{_V_D_WN_}\\n\\n    \\\\** Palatalized **\\\\\\n    ndy{V_D_WN} --> ANDO {PALATAL} {_V_D_WN_}\\n\\n    \\\\** PALATAL GEMINATES **\\\\\\n    [nnd] y {V_D_WN} --> [ANDO] {GEMINATE} {PALATAL} {_V_D_WN_}\\n\\n    \\\\** Have some rules for d,b,g,gw although there are not theoritically possible, aldudénie e.g needs it **\\\\\\n    {L2_UN}               === d       * b         * g       * gw\\n\\n    \\\\if \\\"voiced_plosives_treatment == VOICED_PLOSIVES_AS_NASALIZED\\\"\\n      [{L2_UN}]{V_D_WN}   --> [{_L2_}] {_V_D_WN_}\\n    \\\\elsif \\\"voiced_plosives_treatment == VOICED_PLOSIVES_WITH_STROKE\\\"\\n      [{L2_UN}]{V_D_WN}   --> [{_L2_}] THINF_STROKE {_V_D_WN_}\\n    \\\\else\\n      {_L2_UN_}            === TW_EXT_21 * TW_EXT_22 * TW_EXT_23 * TW_EXT_24\\n      [{L2_UN}]{V_D_WN}    --> [{_L2_UN_}] {_V_D_WN_}\\n    \\\\endif\\n\\n    \\\\if \\\"st_pt_ht == ST_PT_HT_WITH_XTD\\\"\\n      {L2_ALVEOLARIZED}     === st        * pt        * ht\\n      {_L2_ALVEOLARIZED_}   === TW_EXT_11 * TW_EXT_12 * TW_EXT_13\\n\\n      [{L2_ALVEOLARIZED}]{V_D_WN}  --> [{_L2_ALVEOLARIZED_}] {_V_D_WN_}\\n    \\\\endif\\n\\n    \\\\** ===================== **\\\\\\n    \\\\**     3RD LINE RULES    **\\\\\\n    \\\\** ===================== **\\\\\\n    {L3}      === (th,þ) * f       * (h,χ)  * hw\\n    {_L3_}    === SULE   * FORMEN  * AHA    * HWESTA\\n\\n    {L3_GEMS}   === ff\\n    {_L3_GEMS_} === FORMEN {GEMINATE}\\n\\n    \\\\** NORMAL **\\\\\\n    [{L3}]{V_D_WN}        --> [{_L3_}]{_V_D_WN_}\\n    [{L3_GEMS}]{V_D_WN}   --> [{_L3_GEMS_}]{_V_D_WN_}\\n\\n    \\\\** OTHERS **\\\\\\n    hy{V_D_WN}      --> HYARMEN {PALATAL} {_V_D_WN_}\\n\\n    \\\\** Override h with vowels (descendent of hy) **\\\\\\n    _h{V_D}         --> HYARMEN {_V_D_}\\n    \\\\** Starting voiced h before long vowels **\\\\\\n    _h[{LVOWELS}]   --> HYARMEN [{_LVOWELS_}]\\n\\n    (h,χ)           --> AHA\\n\\n    \\\\** ===================== **\\\\\\n    \\\\**     4TH LINE RULES    **\\\\\\n    \\\\** ===================== **\\\\\\n    {L4}   === nt    * mp    * nc    * nq      \\\\** Not nqu, due to preprocessor **\\\\\\n    {_L4_} === ANTO  * AMPA  * ANCA  * UNQUE\\n\\n    \\\\** NORMAL **\\\\\\n    [{L4}]{V_D_WN}    --> [{_L4_}]{_V_D_WN_}\\n\\n    \\\\** PALATAL **\\\\\\n    nty {V_D_WN}       --> ANTO {PALATAL} {_V_D_WN_}\\n\\n    \\\\** PALATAL GEMINATES **\\\\\\n    [nnt] y {V_D_WN} --> [ANTO] {GEMINATE} {PALATAL} {_V_D_WN_}\\n\\n    \\\\** ===================== **\\\\\\n    \\\\**     5TH LINE RULES    **\\\\\\n    \\\\** ===================== **\\\\\\n    {L5}   === n     * m     * ñ     * ñw      * _nw\\n    {_L5_} === NUMEN * MALTA * NOLDO * NWALME  * NWALME\\n\\n    [{L5}]{V_D_WN}  --> [{_L5_}]{_V_D_WN_}\\n\\n    nn{V_D_WN}          --> NUMEN {GEMINATE}   {_V_D_WN_}\\n    mm{V_D_WN}          --> MALTA {GEMINATE}   {_V_D_WN_}\\n    \\n    ny{V_D_WN}          --> NUMEN {PALATAL} {_V_D_WN_}\\n    my{V_D_WN}          --> MALTA {PALATAL} {_V_D_WN_}\\n\\n    \\\\** PALATAL GEMINATES **\\\\\\n    [nn * mm] y {V_D_WN} --> [NUMEN * MALTA] {GEMINATE} {PALATAL} {_V_D_WN_}\\n\\n    \\\\** ===================== **\\\\\\n    \\\\**     6TH LINE RULES    **\\\\\\n    \\\\** ===================== **\\\\\\n\\n    {_LONE_R_} === ORE \\\\** TODO: Add dot for full unutixe, don\\'t add dot for lazy unutixe **\\\\\\n    \\\\if always_use_romen_for_r\\n      \\\\** Override lone r if option is on **\\\\\\n      {_LONE_R_} === ROMEN {_NVOWEL_} \\n    \\\\endif\\n\\n    {L6}        === r     * v     * y                * w\\n    {_L6_}      === ROMEN * VALA  * ANNA {PALATAL}   * VILYA\\n    \\n    \\\\**  PE19:94 **\\\\\\n    {L6}   === {L6} * rg * lg\\n    {_L6_} === {_L6_} * {_LONE_R_} NOLDO * LAMBE NOLDO\\n    \\n    [{L6}]{V_D_WN} --> [{_L6_}]{_V_D_WN_}\\n\\n    \\\\** Override rule r + null **\\\\\\n    r                 --> {_LONE_R_}\\n \\n    rd{V_D_WN}        --> ARDA {_V_D_WN_}\\n \\n    rr{V_D_WN}        --> ROMEN {GEMINATE} {_V_D_WN_}\\n    rrd{V_D_WN}       --> ARDA {GEMINATE} {_V_D_WN_}\\n    \\n    ry{V_D_WN}        --> ROMEN {PALATAL} {_V_D_WN_}\\n    rdy{V_D_WN}       --> ARDA {PALATAL} {_V_D_WN_}\\n    \\n    \\\\** PALATAL GEMINATES **\\\\\\n    [rr * rrd] y {V_D_WN} --> [ROMEN * ARDA] {GEMINATE} {PALATAL} {_V_D_WN_}\\n\\n    \\\\** ===================== **\\\\\\n    \\\\**     L  LINE RULES     **\\\\\\n    \\\\** ===================== **\\\\\\n    {LINE_L}          === l     * ld      * ll                * lld\\n    {_LINE_L_}        === LAMBE * ALDA    * LAMBE {GEMINATE}  * ALDA {GEMINATE}\\n\\n    [{LINE_L}]{V_D_WN}    --> [{_LINE_L_}]{_V_D_WN_}\\n\\n    ly{V_D_WN}            --> LAMBE {PALATAL} {_V_D_WN_}\\n    ldy{V_D_WN}           --> ALDA  {PALATAL} {_V_D_WN_}\\n    \\n    \\\\** PALATAL GEMINATES **\\\\\\n    [ll * lld] y {V_D_WN} --> [LAMBE * ALDA] {GEMINATE} {PALATAL} {_V_D_WN_}\\n    \\n    hl{V_D_WN}            --> HALLA LAMBE {_V_D_WN_}\\n    hr{V_D_WN}            --> HALLA ROMEN {_V_D_WN_}\\n\\n    \\\\** ===================== **\\\\\\n    \\\\**   S/Z LINE RULES      **\\\\\\n    \\\\** ===================== **\\\\\\n    \\n    \\\\** SILME is a bit tricky : the shape is not linked to voicing but to a tehta presence or not **\\\\\\n    {L8}              === s               * {SS}\\n    {_L8_TEHTAR_}     === SILME_NUQUERNA  * ESSE_NUQUERNA\\n    {_L8_NO_TEHTAR_}  === SILME           * ESSE\\n\\n    [{L8}][{VOWELS}]   --> [{_L8_TEHTAR_}][{_TEHTAR_}]\\n    [{L8}][{LTEHTAR}]  --> [{_L8_TEHTAR_}][{_LTEHTAR_}]\\n    \\n    {L8}               --> {_L8_NO_TEHTAR_}\\n    {L8}[{DIPHTHONGS}] --> {_L8_NO_TEHTAR_}[{_DIPHTHONGS_}]\\n    \\n  \\\\end\\n\\n  \\\\beg    rules punctuation\\n    . --> PUNCT_DDOT\\n    .. --> PUNCT_DOT PUNCT_DDOT PUNCT_DOT\\n    …  --> PUNCT_TILD\\n    ... --> PUNCT_TILD\\n    .... --> PUNCT_TILD\\n    ..... --> PUNCT_TILD\\n    ...... --> PUNCT_TILD\\n    ....... --> PUNCT_TILD\\n\\n    , --> PUNCT_DOT\\n    : --> PUNCT_DOT\\n    ; --> PUNCT_DOT\\n    ! --> PUNCT_EXCLAM\\n    ? --> PUNCT_INTERR\\n    · --> PUNCT_DOT\\n\\n    \\\\** Apostrophe **\\\\\\n\\n    \\' --> {NULL}\\n    ’ --> {NULL}\\n    \\n    \\\\** NBSP **\\\\\\n    {NBSP} --> NBSP\\n    \\n    \\\\** Quotes **\\\\\\n\\n    “ --> DQUOT_OPEN\\n    ” --> DQUOT_CLOSE\\n    « --> DQUOT_OPEN\\n    » --> DQUOT_CLOSE\\n\\n    - --> {NULL}\\n    – --> PUNCT_TILD\\n    — --> PUNCT_TILD\\n\\n    [ --> PUNCT_PAREN_L\\n    ] --> PUNCT_PAREN_R\\n    ( --> PUNCT_PAREN_L\\n    ) --> PUNCT_PAREN_R\\n    { --> PUNCT_PAREN_L\\n    } --> PUNCT_PAREN_R\\n    < --> PUNCT_PAREN_L\\n    > --> PUNCT_PAREN_R\\n\\n    \\\\** Not universal between fonts ... **\\\\\\n    $ --> ELVISH_PAREN\\n    ≤ --> RING_MARK_L \\\\** Ring inscription left beautiful stuff **\\\\\\n    ≥ --> RING_MARK_R \\\\** Ring inscription right beautiful stuff **\\\\\\n\\n  \\\\end\\n\\n  \\\\beg    rules  numbers\\n    0 --> NUM_0\\n    1 --> NUM_1\\n    2 --> NUM_2\\n    3 --> NUM_3\\n    4 --> NUM_4\\n    5 --> NUM_5\\n    6 --> NUM_6\\n    7 --> NUM_7\\n    8 --> NUM_8\\n    9 --> NUM_9\\n    A --> NUM_10\\n    B --> NUM_11\\n  \\\\end\\n\\n\\\\end\\n\\n\\\\beg postprocessor\\n  \\\\resolve_virtuals\\n\\\\end\\n\\n\"\nGlaemscribe.resource_manager.raw_modes[\"raw-tengwar\"] = \"\\\\**\\n\\nGlǽmscribe (also written Glaemscribe) is a software dedicated to\\nthe transcription of texts between writing systems, and more\\nspecifically dedicated to the transcription of J.R.R. Tolkien\\'s\\ninvented languages to some of his devised writing systems.\\n\\nCopyright (C) 2015 Benjamin Babut (Talagan).\\n\\nThis program is free software: you can redistribute it and/or modify\\nit under the terms of the GNU Affero General Public License as published by\\nthe Free Software Foundation, either version 3 of the License, or\\nany later version.\\n\\nThis program is distributed in the hope that it will be useful,\\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\nGNU Affero General Public License for more details.\\n\\nYou should have received a copy of the GNU Affero General Public License\\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\\n\\n**\\\\\\n\\n\\\\beg changelog\\n  \\\\entry \\\"0.0.1\\\" \\\"Initial version.\\\"\\n  \\\\entry \\\"0.0.2\\\" \\\"Added missing extended tengwar.\\\"\\n  \\\\entry \\\"0.0.3\\\" \\\"Added support for non-breaking spaces\\\"  \\n  \\\\entry \\\"0.0.4\\\" \\\"Added support for new unicode charsets\\\"  \\n  \\\\entry \\\"0.0.5\\\" \\\"Added support for the Tengwar Telcontar font\\\"\\n  \\\\entry \\\"0.0.6\\\" \\\"Added support for Bombadil W/HW\\\"\\n\\\\end\\n\\n\\\\language \\\"Raw Tengwar\\\"\\n\\\\writing  \\\"Tengwar\\\"\\n\\\\mode     \\\"Raw Tengwar\\\"\\n\\\\version  \\\"0.0.6\\\"\\n\\\\authors  \\\"Talagan (Benjamin Babut)\\\"\\n\\n\\\\world      arda\\n\\\\invention  experimental\\n\\n\\\\metamode true\\n\\n\\\\charset  tengwar_ds_sindarin true\\n\\\\charset  tengwar_ds_parmaite false\\n\\\\charset  tengwar_ds_eldamar  false\\n\\\\charset  tengwar_ds_annatar  false\\n\\\\charset  tengwar_ds_elfica   false\\n\\n\\\\charset  tengwar_guni_sindarin false\\n\\\\charset  tengwar_guni_parmaite false\\n\\\\charset  tengwar_guni_eldamar  false\\n\\\\charset  tengwar_guni_annatar  false\\n\\\\charset  tengwar_guni_elfica   false\\n\\n\\\\charset  tengwar_freemono    false\\n\\\\charset  tengwar_telcontar   false\\n\\n\\n\\\\beg      options\\n  \\\\beg option consonant_modification_style CONSONANT_MODIFICATION_STYLE_WAVE\\n    \\\\value CONSONANT_MODIFICATION_STYLE_WAVE 0\\n    \\\\value CONSONANT_MODIFICATION_STYLE_BAR 1\\n  \\\\end\\n\\\\end\\n\\n\\\\beg      preprocessor\\n  \\\\** Work exclusively downcase **\\\\\\n  \\\\downcase\\n\\\\end\\n\\n\\n\\\\beg processor\\n\\n  \\\\beg    rules litteral\\n\\n    \\\\if \\\"consonant_modification_style == CONSONANT_MODIFICATION_STYLE_WAVE\\\"\\n      {GEMINATE} === GEMINATE_SIGN_TILD\\n      {NASAL}    === NASALIZE_SIGN_TILD\\n    \\\\else\\n      {GEMINATE} === GEMINATE_SIGN\\n      {NASAL}    === NASALIZE_SIGN\\n    \\\\endif\\n\\n    _a_      --> A_TEHTA\\n    _acirc_  --> A_TEHTA_CIRCUM\\n    _arev_   --> A_TEHTA_REVERSED\\n\\n    _e_       --> E_TEHTA\\n    _egrave_  --> E_TEHTA_GRAVE\\n    \\n    _breve_   --> TEHTA_BREVE\\n    \\n    _i_      --> I_TEHTA\\n    _o_      --> O_TEHTA\\n    _u_      --> U_TEHTA\\n\\n    _a<_     --> A_TEHTA_INF\\n    _e<_     --> E_TEHTA_INF\\n    _i<_     --> I_TEHTA_INF\\n    _o<_     --> O_TEHTA_INF\\n    _u<_     --> U_TEHTA_INF\\n\\n    _unutixe_ --> I_TEHTA_INF\\n    \\n    _thinnas_ --> THINNAS\\n\\n    _ee_    --> E_TEHTA_DOUBLE\\n    _ii_    --> I_TEHTA_DOUBLE\\n    _oo_    --> O_TEHTA_DOUBLE\\n    _uu_    --> U_TEHTA_DOUBLE\\n\\n    _ee<_    --> E_TEHTA_DOUBLE_INF\\n    _ii<_    --> I_TEHTA_DOUBLE_INF\\n\\n    _(tinco,tw11)_   --> TINCO\\n    _(parma,tw12)_   --> PARMA\\n    _(calma,tw13)_   --> CALMA\\n    _(quesse,tw14)_  --> QUESSE\\n\\n    _(ando,tw21)_    --> ANDO\\n    _(umbar,tw22)_   --> UMBAR\\n    _(anga,tw23)_    --> ANGA\\n    _(ungwe,tw24)_   --> UNGWE\\n\\n    _(sule,súle,thule,thúle,tw31)_    --> SULE\\n    _(formen,tw32)_                   --> FORMEN\\n    _(aha,harma,tw33)_                --> AHA\\n    _(hwesta,tw34)_                   --> HWESTA\\n\\n    _(anto,tw41)_   --> ANTO\\n    _(ampa,tw42)_   --> AMPA\\n    _(anca,tw43)_   --> ANCA\\n    _(unque,tw44)_  --> UNQUE\\n\\n    _(numen,númen,tw51)_     --> NUMEN\\n    _(malta,tw52)_           --> MALTA\\n    _(noldo,ñoldo,tw53)_     --> NOLDO\\n    _(nwalme,ñwalme,tw54)_   --> NWALME\\n\\n    _(ore,óre,tw61)_          --> ORE\\n    _(vala,tw62)_             --> VALA\\n    _(anna,tw63)_             --> ANNA\\n    _(vilya,wilya,tw64)_      --> VILYA\\n\\n    _(romen,rómen,tw71)_      --> ROMEN\\n    _(arda,tw72)_             --> ARDA\\n    _(lambe,tw73)_            --> LAMBE\\n    _(alda,tw74)_             --> ALDA\\n\\n    _(silme,tw81)_                  --> SILME\\n    _(silmenuquerna,silmen,tw82)_   --> SILME_NUQUERNA\\n    _(esse,tw83)_                   --> ESSE\\n    _(essenuquerna,essen,tw84)_     --> ESSE_NUQUERNA\\n\\n    _(hyarmen,tw91)_                   --> HYARMEN\\n    _(hwestasindarinwa,hwestas,tw92)_  --> HWESTA_SINDARINWA\\n    _(yanta,tw93)_                     --> YANTA\\n    _(ure,úre,tw94)_                   --> URE\\n\\n    \\\\** Extended tengwar **\\\\\\n    _(xtinco,xsule,xsúle,xthule,xthúle,xtw11)_        --> TW_EXT_11\\n    _(xparma,xformen,xtw12)_                          --> TW_EXT_12\\n    _(xcalma,xaha,xharma,xtw13)_                      --> TW_EXT_13\\n    _(xquesse,xhwesta,xtw14)_                         --> TW_EXT_14\\n    _(xando,xanto,xtw21)_                             --> TW_EXT_21\\n    _(xumbar,xampa,xtw22)_                            --> TW_EXT_22\\n    _(xanga,xanca,xtw23)_                             --> TW_EXT_23\\n    _(xungwe,xunque,xtw24)_                           --> TW_EXT_24\\n\\n    \\\\** Others more exotic tengwar **\\\\\\n    _(osse)_              --> OSSE\\n    _(vaia,vaiya)_        --> VAIA\\n    _(mh)_                --> TW_MH\\n    _(mhbeleriandic,mhb)_ --> TW_MH_BELERIANDIC\\n    _(hwlowdham,hwl)_     --> TW_HW_LOWDHAM\\n    _(hwbombadil,hwbom)_  --> BOMBADIL_HW\\n    _(wbombadil,wbom)_    --> BOMBADIL_W\\n\\n    \\\\** ligatures **\\\\\\n    _(harmasilme,ahasilme,silmeharma,silmeaha)_ --> ANCA_CLOSED\\n    _(hwestatinco,tincohwesta)_                 --> HWESTA_TINCO\\n    _(harmatinco,ahatinco,tincoharma,tincoaha)_ --> AHA_TINCO\\n\\n    \\\\** bearers **\\\\\\n    _(telco)_   --> TELCO\\n    _(ara,ára)_ --> ARA\\n    _(halla,gasdil)_ --> HALLA\\n\\n    \\\\** consonant modifiers **\\\\\\n    _(geminate)_  --> {GEMINATE}\\n    _(nasal)_     --> {NASAL}\\n    _(palatal)_   --> PALATAL_SIGN\\n    _(labial)_    --> WA_TEHTA \\n    \\n    \\\\** SA-Rincer to be enhanced ... **\\\\\\n    _(sarince)_           --> SARINCE\\n    _(arrince,sarincef)_  --> SARINCE_FLOURISHED\\n \\n    _0_ --> NUM_0\\n    _1_ --> NUM_1\\n    _2_ --> NUM_2\\n    _3_ --> NUM_3\\n    _4_ --> NUM_4\\n    _5_ --> NUM_5\\n    _6_ --> NUM_6\\n    _7_ --> NUM_7\\n    _8_ --> NUM_8\\n    _9_ --> NUM_9\\n    _10_ --> NUM_10\\n    _11_ --> NUM_11\\n    _12_ --> NUM_12\\n    \\n    _(lsd)_ --> CIRC_TEHTA_INF\\n\\n  \\\\end\\n\\n  \\\\beg    rules punctuation\\n    \\n    \\\\** Allow / as word breaker **\\\\\\n    / --> {NULL}\\n    - --> {NULL}\\n\\n    ·   --> PUNCT_DOT\\n    ,   --> PUNCT_DOT\\n    :   --> PUNCT_DOT\\n    ;   --> PUNCT_DOT\\n\\n    .   --> PUNCT_DDOT\\n    ..  --> PUNCT_DDOT\\n    \\n    ...   --> PUSTA_3\\n    ....  --> PUSTA_4\\n    \\n    ::    --> PUSTA_4_SQUARED\\n    \\\\** PUSTA_4_HALFED ? **\\\\\\n    \\n    ..... --> PUSTA_5\\n    \\n    …  --> PUNCT_TILD\\n    ~  --> PUNCT_TILD\\n    –  --> PUNCT_TILD\\n    —  --> PUNCT_TILD\\n    \\n    ! --> PUNCT_EXCLAM\\n    ? --> PUNCT_INTERR\\n   \\n    \\\\** Apostrophe **\\\\\\n\\n    \\' --> {NULL}\\n    ’ --> {NULL}\\n    \\n    \\\\** NBSP **\\\\\\n    {NBSP} --> NBSP\\n    \\n    \\\\** Quotes **\\\\\\n\\n    “ --> DQUOT_OPEN\\n    ” --> DQUOT_CLOSE\\n    « --> DQUOT_OPEN\\n    » --> DQUOT_CLOSE\\n\\n    [ --> PUNCT_PAREN_L\\n    ] --> PUNCT_PAREN_R\\n    ( --> PUNCT_PAREN_L\\n    ) --> PUNCT_PAREN_R\\n    { --> PUNCT_PAREN_L\\n    } --> PUNCT_PAREN_R\\n\\\\**    < --> PUNCT_PAREN_L : cannot be used since it is already used as a letter in group litteral **\\\\\\n\\\\**    > --> PUNCT_PAREN_R : cannot be used since it is already used as a letter in group litteral **\\\\\\n\\n    \\\\** Not universal between fonts ... **\\\\\\n    $ --> ELVISH_PAREN\\n    ≤ --> RING_MARK_L \\\\** Ring inscription left beautiful stuff **\\\\\\n    ≥ --> RING_MARK_R \\\\** Ring inscription right beautiful stuff **\\\\\\n\\n  \\\\end\\n\\n\\\\end\\n\\n\\\\beg postprocessor\\n  \\\\resolve_virtuals\\n\\\\end\\n\\n\"\nGlaemscribe.resource_manager.raw_modes[\"rlyehian-tengwar\"] = \"\\\\**\\n\\nGlǽmscribe (also written Glaemscribe) is a software dedicated to\\nthe transcription of texts between writing systems, and more \\nspecifically dedicated to the transcription of J.R.R. Tolkien\\'s \\ninvented languages to some of his devised writing systems.\\n\\nCopyright (C) 2015 Benjamin Babut (Talagan).\\n\\nThis program is free software: you can redistribute it and/or modify\\nit under the terms of the GNU Affero General Public License as published by\\nthe Free Software Foundation, either version 3 of the License, or\\nany later version.\\n\\nThis program is distributed in the hope that it will be useful,\\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\nGNU Affero General Public License for more details.\\n\\nYou should have received a copy of the GNU Affero General Public License\\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\\n\\n**\\\\\\n\\n\\\\** largely based on the Cthuvian dictionary compiled by cyberangel at yog-sothoth forums **\\\\\\n\\\\** Discussion on the incatena forum : http://www.incatena.org/viewtopic.php?f=4&t=37194&start=1225 **\\\\\\n\\\\** This reconstruction : http://conworkshop.info/view_language.php?l=RLH **\\\\\\n\\n\\\\** Changelog **\\\\\\n\\n\\\\**  R\\'lyehian mode for glaemscribe : a non-euclidian joke, muhahahaha **\\\\\\n\\n\\\\beg changelog\\n  \\\\entry \\\"0.0.1\\\" \\\"First version\\\"\\n\t\\\\entry \\\"0.0.2\\\" \\\"Ported to virtual chars\\\"\\n\t\\\\entry \\\"0.0.3\\\" \\\"Ported to various charsets\\\"\\n  \\\\entry \\\"0.1.1\\\" \\\"Added support for inlined raw tengwar\\\"\\n  \\\\entry \\\"0.1.2\\\" \\\"Added support for new unicode charsets\\\"   \\n  \\\\entry \\\"0.1.3\\\" \\\"Added support for the Tengwar Telcontar font\\\"\\n\\\\end\\n\\n\\\\language \\\"R\\'lyehian\\\"\\n\\\\writing  \\\"Tengwar\\\"\\n\\\\mode     \\\"R\\'lyehian Tengwar - G*\\\"\\n\\\\version  \\\"0.1.3\\\"\\n\\\\authors  \\\"H.P.Lovecraft & The Great Ancient Gods, impl. Fthalagn\\\"\\n\\n\\\\world      other_world\\n\\\\invention  experimental\\n\\n\\\\raw_mode \\\"raw-tengwar\\\"\\n\\n\\\\charset  tengwar_ds_sindarin true\\n\\\\charset  tengwar_ds_parmaite false\\n\\\\charset  tengwar_ds_eldamar  false\\n\\\\charset  tengwar_ds_annatar  false\\n\\\\charset  tengwar_ds_elfica   false\\n\\n\\\\charset  tengwar_guni_sindarin false\\n\\\\charset  tengwar_guni_parmaite false\\n\\\\charset  tengwar_guni_eldamar  false\\n\\\\charset  tengwar_guni_annatar  false\\n\\\\charset  tengwar_guni_elfica   false\\n\\n\\\\charset  tengwar_freemono    false\\n\\\\charset  tengwar_telcontar   false\\n\\n\\n\\\\beg      options\\n\\\\end\\n\\n\\\\beg      preprocessor\\n  \\\\** Work exclusively downcase **\\\\\\n  \\\\downcase\\n  \\n  \\\\** Simplify trema vowels **\\\\\\n  \\\\substitute \\\"ä\\\" \\\"a\\\"\\n  \\\\substitute \\\"ë\\\" \\\"e\\\"\\n  \\\\substitute \\\"ï\\\" \\\"i\\\"\\n  \\\\substitute \\\"ö\\\" \\\"o\\\"\\n  \\\\substitute \\\"ü\\\" \\\"u\\\"\\n  \\\\substitute \\\"ÿ\\\" \\\"y\\\"\\n\\\\end\\n\\n\\\\** Use H as gutturals **\\\\\\n\\n\\n\\\\**\\n\\nHPL :\\n-----\\nPh\\'nglui mglw\\'nafh Cthulhu R\\'lyeh wgah\\'nagl fhtagn\\nYgnaiih ... ygnaiih ... thflthkh\\'ngha ... Yog-Sothoth ... y\\'bthnk .. h\\'ehye-n\\'grkdl\\'lh\\nN\\'gai, n\\'gha\\'ghaa, bugg-shoggog, y\\'hah, Yog-Sothoth\\nY\\'ai \\'ng\\'ngah, Yog-Sothoth h\\'ee - l\\'geb f\\'ai throdog uaaah\\nogthrod ai\\'f geb\\'l - ee\\'h Yog-Sothoth \\'ngah\\'ng ai\\'y zhro\\n\\n\\nDERLETH (The Return of Hastur) :\\n--------------------------------\\nCthulhu naflfhtagn\\n\\nCAMPBELL (The Moon-Lens) :\\n--------------------------\\nGof\\'nn hupadgh Shub-Niggurath\\n\\nBRUNNER (Concerning the Forthcoming) :\\n--------------------------------------\\nLlllll-nglui, nnnn-lagl, fhtagn-ngah, ai Yog-Sothoth!\\n\\nPEREZ (The Likeness) :\\n----------------------\\nIa! Vthyarilops! Ut ftaghu wk\\'hmr Vthyarilops! Ia! Ia!\\n\\nGLASBY (Return to Y\\'ha-nthlei) :\\n--------------------------------\\nShtunggli grah\\'nn fhhui Y\\'ha-nthlei vra Dagon chtenff.\\n\\nKUTTNER (The Salem Horror):\\n---------------------------\\nYa na kadishtu nilgh\\'ri \\nstell\\'bsna kn\\'aa Nyogtha \\nk\\'yarnak phlegethor\\n\\nLUMLEY (The Burrowers Beneath):\\n-------------------------------\\nYa na kadishtu nilgh\\'ri stell\\'bsna Nyogtha, \\nK\\'yarnak phlegethor l\\'ebumna syha\\'h n\\'ghft, \\nYa hai kadishtu ep r\\'luh-eeh Nyogtha eeh, \\ns\\'uhn-ngh athg li\\'hee orr\\'e syha\\'h.\\n\\nRUSSELL (Faith):\\n----------------\\nCthugha fm\\'latgh mnahn\\' hlirgh! \\nCthugha ch\\'nw hafh\\'drn! \\nCthugha fm\\'latgh uh\\'e wfaqa!\\n\\nVESTER (Innsmouth\\'s gold):\\n--------------------------\\nCthulhu fhtagn - G\\'thugha w\\'gah! \\nNg\\'goka y\\'gotha ooboshu R\\'lyeh! \\nCthulhu fhtagn! Fhtagn!\\n\\nCLORE (The Dying God):\\n----------------------\\nsll\\'ha-gn\\'wgn-ll\\'ah-sgn\\'wahl\\n\\nI vs Y :\\n========\\nY looks like a semi vowel after consonants (r\\'lyeh) but \\nsometimes found as a vowel  \\n\\nC vs K : \\n========\\nWe should probably use c == k\\n\\n\\n\\'  Glottal stop\\n+h cthuvianisation (aspiration + pharyngalisation)\\n\\na i u o e w\\n\\n\\nb\\nd\\nc ch\\nk kh\\ng gh\\nh hh hy\\nl lh ly\\nf fh\\nn \\nm\\np ph\\nr rh\\ns sh\\nt th\\nz zh\\n\\ny palatal semi vowel ?\\n\\n**\\\\\\n\\n\\\\beg      processor\\n\\n  \\\\beg    rules litteral  \\n    {VOWELS}            === a               *  e              * i              * o              *  u  * w\\n\\n    {O_LOOP}        === O_TEHTA\\n    {U_LOOP}        === U_TEHTA\\n       \\n    {TEHTAR}            === A_TEHTA      * E_TEHTA      * I_TEHTA    * O_TEHTA     * U_TEHTA * WA_TEHTA\\n  \\n    [{VOWELS}]          --> TELCO [{TEHTAR}]  \\\\** Replace isolated short vowels **\\\\\\n  \\n    {WDIPHTHONGS}       === {NULL} \\n    {WDIPHTHENGS}       === {NULL}\\n      \\n    {V_D_KER}           === [ {VOWELS} {WDIPHTHONGS} ]\\n    {V_D_KER_WN}        === [ {VOWELS} {WDIPHTHONGS} * {NULL} ]\\n\\n    {V_D_IMG}        === [ {TEHTAR} {WDIPHTHENGS} ]\\n    {V_D_IMG_WN}     === [ {TEHTAR} {WDIPHTHENGS} * {NULL} ] \\n  \\n    {L1_KER_1}        === t                   * p  \\n    {L1_IMG_1}        === TINCO               * PARMA\\n    {L1_KER_2}        === (c,k)                   \\n    {L1_IMG_2}        === CALMA               \\n    \\n    \\\\** NORMAL **\\\\\\n    [ {L1_KER_1} ] [{NULL} * h] {V_D_KER_WN}  --> [ {L1_IMG_1} ] [{NULL} * GEMINATE_SIGN_TILD] {V_D_IMG_WN}\\n    [ {L1_KER_2} ] [{NULL} * h] {V_D_KER_WN}  --> [ {L1_IMG_2} ] [{NULL} * GEMINATE_SIGN_TILD] {V_D_IMG_WN}\\n\\n    {L2_KER}        === d      * b        * g      \\n    {L2_IMG}        === ANDO   * UMBAR    * ANGA    \\n    [ {L2_KER} ] [{NULL} * h] {V_D_KER_WN}  --> [ {L2_IMG} ] [{NULL} * GEMINATE_SIGN_TILD] {V_D_IMG_WN}\\n  \\n    {L3_KER} === f\\n    {L3_IMG} === FORMEN\\n    [ {L3_KER} ] [{NULL} * h] {V_D_KER_WN}  --> [ {L3_IMG} ] [{NULL} * GEMINATE_SIGN_TILD] {V_D_IMG_WN}\\n \\n    {L5_KER}  === n     * m     \\n    {L5_IMG}  === NUMEN * MALTA \\n    [ {L5_KER} ] [{NULL} * h] {V_D_KER_WN}  --> [ {L5_IMG} ] [{NULL} * GEMINATE_SIGN_TILD] {V_D_IMG_WN}\\n  \\n    r [{NULL} * y * h] {V_D_KER_WN} --> ROMEN [{NULL} * PALATAL_SIGN * GEMINATE_SIGN_TILD] {V_D_IMG_WN}\\n    s {V_D_KER_WN} --> SILME_NUQUERNA {V_D_IMG_WN}\\n    z {V_D_KER_WN} --> ESSE_NUQUERNA {V_D_IMG_WN}\\n\\n    l [{NULL} * y * h] {V_D_KER_WN} --> LAMBE [{NULL} * PALATAL_SIGN * GEMINATE_SIGN_TILD] {V_D_IMG_WN}\\n    h [{NULL} * y * h] {V_D_KER_WN} --> AHA [{NULL} * PALATAL_SIGN * GEMINATE_SIGN_TILD] {V_D_IMG_WN}\\n    v [{NULL} * y * h] {V_D_KER_WN} --> VALA [{NULL} * PALATAL_SIGN * GEMINATE_SIGN_TILD] {V_D_IMG_WN}\\n \\n    y {V_D_KER_WN} --> VILYA {V_D_IMG_WN}\\n\\n    \\' --> HARP_SHAPED\\n    ’ --> HARP_SHAPED\\n\\n  \\\\end\\n  \\n  \\\\beg rules punctutation\\n    . --> PUNCT_DDOT\\n    .. --> PUNCT_DOT PUNCT_DDOT PUNCT_DOT\\n    …  --> PUNCT_TILD\\n    ... --> PUNCT_TILD\\n    .... --> PUNCT_TILD\\n    ..... --> PUNCT_TILD\\n    ...... --> PUNCT_TILD\\n    ....... --> PUNCT_TILD\\n\\n    , --> PUNCT_DOT\\n    : --> PUNCT_DOT\\n    ; --> PUNCT_DOT\\n    ! --> PUNCT_EXCLAM\\n    ? --> PUNCT_INTERR\\n    · --> PUNCT_DOT\\n    \\n    \\\\** NBSP **\\\\\\n    {NBSP} --> NBSP\\n    \\n    \\\\** Quotes **\\\\\\n\\n    “ --> DQUOT_OPEN\\n    ” --> DQUOT_CLOSE\\n    « --> DQUOT_OPEN \\n    » --> DQUOT_CLOSE \\n    \\n    - --> PUNCT_DOT    \\n    – --> PUNCT_TILD  \\n    — --> PUNCT_DTILD\\n \\n    [ --> PUNCT_PAREN_L\\n    ] --> PUNCT_PAREN_R\\n    ( --> PUNCT_PAREN_L\\n    ) --> PUNCT_PAREN_R\\n    { --> PUNCT_PAREN_L\\n    } --> PUNCT_PAREN_R\\n    < --> PUNCT_PAREN_L\\n    > --> PUNCT_PAREN_R  \\n\\n    \\\\** Not universal between fonts ... **\\\\\\n    $ --> ELVISH_PAREN\\n    ≤ --> RING_MARK_L \\\\** Ring inscription left beautiful stuff **\\\\\\n    ≥ --> RING_MARK_R \\\\** Ring inscription right beautiful stuff **\\\\\\n  \\\\end\\n\\n  \\\\beg rules numbers\\n    0 --> NUM_0\\n    1 --> NUM_1\\n    2 --> NUM_2\\n    3 --> NUM_3\\n    4 --> NUM_4\\n    5 --> NUM_5\\n    6 --> NUM_6\\n    7 --> NUM_7\\n    8 --> NUM_8\\n    9 --> NUM_9\\n    A --> NUM_10\\n    B --> NUM_11   \\n  \\\\end\\n\t\\n\\\\end\\n\\n\\n\\\\beg postprocessor\\n  \\\\resolve_virtuals\\n\\\\end  \\n\"\nGlaemscribe.resource_manager.raw_modes[\"sindarin-cirth-daeron\"] = \"\\\\**\\n\\nGlǽmscribe (also written Glaemscribe) is a software dedicated to\\nthe transcription of texts between writing systems, and more \\nspecifically dedicated to the transcription of J.R.R. Tolkien\\'s \\ninvented languages to some of his devised writing systems.\\n\\nCopyright (C) 2015 Benjamin Babut (Talagan).\\n\\nThis program is free software: you can redistribute it and/or modify\\nit under the terms of the GNU Affero General Public License as published by\\nthe Free Software Foundation, either version 3 of the License, or\\nany later version.\\n\\nThis program is distributed in the hope that it will be useful,\\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\nGNU Affero General Public License for more details.\\n\\nYou should have received a copy of the GNU Affero General Public License\\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\\n\\n**\\\\\\n\\n\\\\** Sindarin Angerthas Daeron mode for glaemscribe **\\\\\\n\\n\\\\beg changelog\\n  \\\\entry 0.0.2 \\\"Added thorn as equivalent for th\\\"\\n  \\\\entry 0.0.3 \\\"Moved out space to general element\\\"\\n  \\\\entry 0.0.4 \\\"Fixed wrong ch, hw, h\\\"\\n  \\\\entry 0.0.5 \\\"Added disambiguations from the tengwar modes. Reworked median point behaviour, and ng.\\\"\\n\\\\end\\n\\n\\\\language \\\"Sindarin\\\"\\n\\\\writing  \\\"Cirth\\\"\\n\\\\mode     \\\"Sindarin Cirth - Angerthas Daeron\\\"\\n\\\\version  \\\"0.0.5\\\"\\n\\\\authors  \\\"J.R.R. Tolkien, impl. Talagan (Benjamin Babut)\\\"\\n\\n\\\\world      arda\\n\\\\invention  jrrt\\n\\n\\\\charset  cirth_ds true\\n\\n\\\\** We redefine the output space to have something beautiful, especially with erebor1 and erebor2 **\\\\ \\n\\\\outspace CIRTH_SPACE_BIG\\n\\n\\\\beg options\\n  \\\\beg option hyphen HYPHEN_WORD_BREAKER\\n    \\\\value HYPHEN_WORD_BREAKER  0\\n    \\\\value HYPHEN_WORD_JOINER   1\\n  \\\\end\\n\\\\end\\n\\n\\n\\\\beg      preprocessor\\n  \\\\** Work exclusively downcase **\\\\\\n  \\\\downcase\\n  \\n  \\\\if \\\"hyphen == HYPHEN_WORD_JOINER\\\"\\n    \\\\** Replace hyphen by median point **\\\\\\n    \\\\substitute \\\"-\\\" \\\"·\\\"  \\n  \\\\else\\n    \\\\** Replace hyphen by glaemscribe\\'s word breaker **\\\\\\n    \\\\substitute \\\"-\\\" \\\"|\\\"\\n  \\\\endif\\n  \\n  \\\\** Add keyboard friendly word joiner **\\\\\\n  \\\\substitute \\\"*\\\" \\\"·\\\"\\n  \\n  \\\\** Simplify trema vowels **\\\\\\n  \\\\substitute ä a\\n  \\\\substitute ë e\\n  \\\\substitute ï i\\n  \\\\substitute ö o\\n  \\\\substitute ü u\\n  \\\\substitute ÿ y\\n  \\n  \\\\** Dis-ambiguate long vowels **\\\\\\n  \\\\rxsubstitute \\\"(ā|â|aa)\\\" \\\"á\\\"\\n  \\\\rxsubstitute \\\"(ē|ê|ee)\\\" \\\"é\\\"\\n  \\\\rxsubstitute \\\"(ī|î|ii)\\\" \\\"í\\\"\\n  \\\\rxsubstitute \\\"(ō|ô|oo)\\\" \\\"ó\\\"\\n  \\\\rxsubstitute \\\"(ū|û|uu)\\\" \\\"ú\\\"\\n  \\\\rxsubstitute \\\"(ȳ|ŷ|yy)\\\" \\\"ý\\\"\\n  \\n  \\\\** Special case of starting \\'i\\' before vowels, replace i by j **\\\\     \\n  \\\\rxsubstitute \\\"\\\\\\\\bi([aeouyáāâéēêíīîóōôúūûýȳŷ])\\\" \\\"j\\\\\\\\1\\\"\\n  \\n  \\\\** Special case of diphtong aw. Before vowels, do not treat \\'aw\\' as diphthong, \\n  since it seems more logical that aw would behave as a semi vowel **\\\\\\n  \\\\rxsubstitute \\\"aw([aeouyáāâéēêíīîóōôúūûýȳŷ])\\\" \\\"a|w\\\\\\\\1\\\"\\n\\n  \\\\** Special case for ng : before the vast majority of consonnants, treat as ŋ **\\\\\\n  \\\\** Don\\'t include r / l / lh / w **\\\\\\n  \\\\rxsubstitute \\\"ng([tpckbdfðvnmhs])\\\" \\\"ŋ\\\\\\\\1\\\"\\n  \\n  \\\\** Avoid mutated ng of being treated as strong middle word n|g (ex : i·ngelaidh [iŋɛlaið] ) **\\\\\\n  \\\\substitute \\\"·ng\\\" \\\"·ŋ\\\"  \\n  \\\\** But avoid losing the strong g in nasal mutation of g (ex : in·Gelydh [iŋgɛlyð]] ) **\\\\\\n  \\\\substitute \\\"n·g\\\" \\\"·ŋg\\\"\\n  \\\\** Use median dot as word joiner **\\\\\\n  \\\\substitute \\\"·\\\" \\\"\\\"\\n  \\n\\\\end\\n\\n\\\\beg      processor\\n  \\n  \\\\beg    rules litteral\\n  \\n    \\\\** Vowels **\\\\\\n  \\n    a     --> CIRTH_48\\n    á     --> CIRTH_49\\n  \\n    e     --> CIRTH_46\\n    é     --> CIRTH_47\\n    \\n    i     --> CIRTH_39\\n    í     --> CIRTH_39 CIRTH_39\\n    \\n    o     --> CIRTH_50\\n    ó     --> CIRTH_51 \\\\** Can use CIRTH_51_ALT **\\\\\\n    \\n    ö     --> CIRTH_52 \\\\** Can use CIRTH_52_ALT **\\\\\\n    œ     --> CIRTH_52\\n \\n    u     --> CIRTH_42\\n    ú     --> CIRTH_43\\n    \\n    ü     --> CIRTH_45_ALT \\\\** Can use CIRTH_45 **\\\\\\n    y     --> CIRTH_45_ALT \\\\** Can use CIRTH_45 **\\\\\\n  \\n    \\\\** Consonants **\\\\\\n\\n    p     --> CIRTH_1\\n    b     --> CIRTH_2\\n    t     --> CIRTH_8 \\n    d     --> CIRTH_9\\n  \\n    f     --> CIRTH_3\\n    v     --> CIRTH_4\\n    ff_   --> CIRTH_3\\n \\n    bh    --> CIRTH_4\\n    \\n    dh    --> CIRTH_11\\n    đ     --> CIRTH_11\\n    ð     --> CIRTH_11\\n    ðh    --> CIRTH_11\\n\\n    g     --> CIRTH_19\\n    gh    --> CIRTH_21\\n    (k,c)     --> CIRTH_18\\n    (kh,ch)   --> CIRTH_20\\n    \\n    \\n    h     --> CIRTH_54 \\\\**  13 is more eng. ch like in chin and 15 is more eng. sh like in shoe **\\\\\\n    \\n    j     --> CIRTH_14\\n    \\n    l     --> CIRTH_31\\n    lh    --> CIRTH_32\\n    m     --> CIRTH_6\\n    mb    --> CIRTH_7\\n    mh    --> CIRTH_7\\n    n     --> CIRTH_12\\n    nc_   --> CIRTH_22 CIRTH_18 \\\\** equals ŋc **\\\\\\n    nd    --> CIRTH_38\\n    \\n    \\\\** Normalisation of ng **\\\\\\n    (ng,ngg,ŋg,ñg)  --> CIRTH_33 \\\\** strong **\\\\\\n    (ng_,_ng,ŋ,ñ)   --> CIRTH_22 \\\\** weak **\\\\\\n  \\n    nj    --> CIRTH_17\\n    r     --> CIRTH_29\\n    rh    --> CIRTH_30\\n    s     --> CIRTH_34 \\\\** Can use CIRTH_35 **\\\\\\n    sh    --> CIRTH_15\\n    ss    --> CIRTH_36\\n    (þ,th) --> CIRTH_10\\n    zh    --> CIRTH_16\\n    \\n    \\\\** Labials **\\\\\\n    hw                --> CIRTH_5\\n    ghw               --> CIRTH_26\\n    gw                --> CIRTH_24    \\n    (ng,ngg,ŋg,ñg)w   --> CIRTH_27     \\\\** STRONG NG + W **\\\\\\n    khw               --> CIRTH_25\\n    kw                --> CIRTH_23\\n    nw                --> CIRTH_28\\n    w                 --> CIRTH_44\\n\\n  \\\\end\\n  \\n  \\\\beg    rules punctuation\\n\\n    . --> CIRTH_PUNCT_THREE_DOTS\\n    .. --> CIRTH_PUNCT_THREE_DOTS\\n    ... --> CIRTH_PUNCT_THREE_DOTS\\n    …   --> CIRTH_PUNCT_THREE_DOTS\\n    .... --> CIRTH_PUNCT_THREE_DOTS\\n    ..... --> CIRTH_PUNCT_THREE_DOTS\\n    ...... --> CIRTH_PUNCT_THREE_DOTS\\n    ....... --> CIRTH_PUNCT_THREE_DOTS\\n\\n    , --> CIRTH_PUNCT_MID_DOT\\n    : --> CIRTH_PUNCT_TWO_DOTS\\n    ; --> CIRTH_PUNCT_TWO_DOTS\\n    ! --> CIRTH_PUNCT_THREE_DOTS\\n    ? --> CIRTH_PUNCT_THREE_DOTS\\n    · --> {NULL}\\n\\n    - --> {NULL}\\n    – --> CIRTH_PUNCT_TWO_DOTS  \\n    — --> CIRTH_PUNCT_TWO_DOTS\\n\\n    \\\\** Apostrophe **\\\\\\n\\n    \\' --> {NULL}\\n    ’ --> {NULL}\\n\\n    \\\\** Quotes **\\\\\\n\\n    “ --> {NULL}\\n    ” --> {NULL}\\n    « --> {NULL} \\n    » --> {NULL} \\n\\n    [ --> CIRTH_PUNCT_THREE_DOTS_L\\n    ] --> CIRTH_PUNCT_THREE_DOTS_L\\n    ( --> CIRTH_PUNCT_THREE_DOTS_L\\n    ) --> CIRTH_PUNCT_THREE_DOTS_L\\n    { --> CIRTH_PUNCT_THREE_DOTS_L\\n    } --> CIRTH_PUNCT_THREE_DOTS_L\\n    < --> CIRTH_PUNCT_THREE_DOTS_L\\n    > --> CIRTH_PUNCT_THREE_DOTS_L\\n\\n    / --> CIRTH_PUNCT_FOUR_DOTS\\n\\n  \\\\end\\n\\\\end\\n\\n\\n    \\n\"\nGlaemscribe.resource_manager.raw_modes[\"sindarin-tengwar-beleriand\"] = \"\\\\**\\n\\nGlǽmscribe (also written Glaemscribe) is a software dedicated to\\nthe transcription of texts between writing systems, and more \\nspecifically dedicated to the transcription of J.R.R. Tolkien\\'s \\ninvented languages to some of his devised writing systems.\\n\\nCopyright (C) 2015 Benjamin Babut (Talagan).\\n\\nThis program is free software: you can redistribute it and/or modify\\nit under the terms of the GNU Affero General Public License as published by\\nthe Free Software Foundation, either version 3 of the License, or\\nany later version.\\n\\nThis program is distributed in the hope that it will be useful,\\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\nGNU Affero General Public License for more details.\\n\\nYou should have received a copy of the GNU Affero General Public License\\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\\n\\n**\\\\\\n\\n\\\\** Sindarin Beleriand mode for glaemscribe (MAY BE INCOMPLETE) **\\\\\\n\\\\beg changelog\\n  \\\\entry \\\"0.0.2\\\" \\\"Added lw\\\"\\n  \\\\entry \\\"0.0.3\\\" \\\"Added thorn as equivalent for th\\\"\\n  \\\\entry \\\"0.0.4\\\" \\\"Porting to virtual chars to simplify and beautify\\\"\\n  \\\\entry \\\"0.0.5\\\" \\\"Added charset support for Annatar\\\"\\n  \\\\entry \\\"0.0.6\\\" \\\"Added support for the FreeMonoTengwar font\\\"\\n  \\\\entry \\\"0.1.0\\\" \\\"Added support for the Tengwar Elfica font\\\"\\n  \\\\entry \\\"0.1.1\\\" \\\"Added support for inlined raw tengwar\\\"\\n  \\\\entry \\\"0.1.2\\\" \\\"Fine tuning handling of the aw diphthong (Thanks to Dmitry Kourmyshov!)\\\"\\n  \\\\entry \\\"0.1.3\\\" \\\"Merging au/aw\\\"\\n  \\\\entry \\\"0.1.4\\\" \\\"Added support for new unicode charsets\\\"   \\n  \\\\entry \\\"0.1.5\\\" \\\"Added support for the Tengwar Telcontar font\\\"\\n  \\\\entry \\\"0.1.6\\\" \\\"Corrected use of silme_nuquerna in ns / y, added a few exotic combinations. Reworked median point behaviour, and ng.\\\"\\n  \\\\entry \\\"0.1.7\\\" \\\"Added variants with dot for short vowels, added gasdil.\\\"\\n\\\\end\\n\\n\\\\language \\\"Sindarin\\\"\\n\\\\writing  \\\"Tengwar\\\"\\n\\\\mode     \\\"Sindarin Tengwar - Beleriand\\\"\\n\\\\version  \\\"0.1.6\\\"\\n\\\\authors  \\\"J.R.R. Tolkien, impl. Talagan (Benjamin Babut)\\\"\\n\\n\\\\world      arda\\n\\\\invention  jrrt\\n\\n\\\\raw_mode \\\"raw-tengwar\\\"\\n\\n\\\\charset  tengwar_ds_sindarin true\\n\\\\charset  tengwar_ds_parmaite false\\n\\\\charset  tengwar_ds_eldamar  false\\n\\\\charset  tengwar_ds_annatar  false\\n\\\\charset  tengwar_ds_elfica   false\\n\\n\\\\charset  tengwar_guni_sindarin false\\n\\\\charset  tengwar_guni_parmaite false\\n\\\\charset  tengwar_guni_eldamar  false\\n\\\\charset  tengwar_guni_annatar  false\\n\\\\charset  tengwar_guni_elfica   false\\n\\n\\\\charset  tengwar_freemono    false\\n\\\\charset  tengwar_telcontar   false\\n\\n\\\\beg      options\\n\\n  \\\\beg option short_a SHORT_A_WITHOUT_DOT\\n    \\\\radio\\n    \\\\value SHORT_A_WITHOUT_DOT 0\\n    \\\\value SHORT_A_WITH_DOT    1\\n  \\\\end\\n  \\n  \\\\beg option short_e SHORT_E_WITHOUT_DOT\\n    \\\\radio\\n    \\\\value SHORT_E_WITHOUT_DOT 0\\n    \\\\value SHORT_E_WITH_DOT    1\\n  \\\\end\\n  \\n  \\\\beg option short_i SHORT_I_WITHOUT_DOT\\n    \\\\radio\\n    \\\\value SHORT_I_WITHOUT_DOT 0\\n    \\\\value SHORT_I_WITH_DOT    1\\n  \\\\end\\n  \\n  \\\\beg option short_o SHORT_O_WITHOUT_DOT\\n    \\\\radio\\n    \\\\value SHORT_O_WITHOUT_DOT 0\\n    \\\\value SHORT_O_WITH_DOT    1\\n  \\\\end\\n  \\n  \\\\beg option short_u SHORT_U_WITHOUT_DOT\\n    \\\\radio\\n    \\\\value SHORT_U_WITHOUT_DOT 0\\n    \\\\value SHORT_U_WITH_DOT    1\\n  \\\\end\\n  \\n  \\\\beg option short_y SHORT_Y_WITHOUT_DOT\\n    \\\\radio\\n    \\\\value SHORT_Y_WITHOUT_DOT 0\\n    \\\\value SHORT_Y_WITH_DOT    1\\n  \\\\end  \\n  \\n  \\\\beg option apostrophe APOSTROPHE_IGNORED\\n    \\\\value APOSTROPHE_IGNORED 0\\n    \\\\value APOSTROPHE_GASDIL  1\\n  \\\\end\\n  \\n  \\\\beg option hyphen HYPHEN_WORD_BREAKER\\n    \\\\value HYPHEN_WORD_BREAKER  0\\n    \\\\value HYPHEN_WORD_JOINER   1\\n  \\\\end\\n\\n  \\\\beg option beleriand_aw_diphthong AW_VILYA_AT_ENDINGS_CURL_ELSE\\n    \\\\value AW_VILYA_AT_ENDINGS_CURL_ELSE 0\\n    \\\\value AW_ALWAYS_VILYA 1\\n    \\\\value AW_ALWAYS_CURL  2\\n  \\\\end\\n\\n  \\\\beg option consonant_modification_style CONSONANT_MODIFICATION_STYLE_BAR\\n    \\\\value CONSONANT_MODIFICATION_STYLE_WAVE 0\\n    \\\\value CONSONANT_MODIFICATION_STYLE_BAR 1\\n  \\\\end\\n\\n  \\\\option reverse_numbers true\\n  \\n  \\\\beg option numbers_base BASE_12\\n    \\\\value    BASE_10 10\\n    \\\\value    BASE_12 12\\n  \\\\end\\n  \\n\\\\end\\n\\n\\\\beg      preprocessor\\n  \\\\** Work exclusively downcase **\\\\\\n  \\\\downcase\\n  \\n  \\\\if \\\"hyphen == HYPHEN_WORD_JOINER\\\"\\n    \\\\** Replace hyphen by median point **\\\\\\n    \\\\substitute \\\"-\\\" \\\"·\\\"  \\n  \\\\else\\n    \\\\** Replace hyphen by glaemscribe\\'s word breaker **\\\\\\n    \\\\substitute \\\"-\\\" \\\"|\\\"\\n  \\\\endif\\n  \\n  \\\\** Add keyboard friendly word joiner **\\\\\\n  \\\\substitute \\\"*\\\" \\\"·\\\"\\n  \\n  \\\\** Simplify trema vowels **\\\\\\n  \\\\substitute ä a\\n  \\\\substitute ë e\\n  \\\\substitute ï i\\n  \\\\substitute ö o\\n  \\\\substitute ü u\\n  \\\\substitute ÿ y\\n\\n  \\\\** We should do better for that one (todo) **\\\\\\n  \\\\substitute œ e\\n\\n  \\\\** Dis-ambiguate long vowels **\\\\\\n  \\\\rxsubstitute \\\"(ā|â|aa)\\\" \\\"á\\\"\\n  \\\\rxsubstitute \\\"(ē|ê|ee)\\\" \\\"é\\\"\\n  \\\\rxsubstitute \\\"(ī|î|ii)\\\" \\\"í\\\"\\n  \\\\rxsubstitute \\\"(ō|ô|oo)\\\" \\\"ó\\\"\\n  \\\\rxsubstitute \\\"(ū|û|uu)\\\" \\\"ú\\\"\\n  \\\\rxsubstitute \\\"(ȳ|ŷ|yy)\\\" \\\"ý\\\"\\n  \\n  \\\\** Special case of starting \\'i\\' before vowels, replace i by j **\\\\     \\n  \\\\rxsubstitute \\\"\\\\\\\\bi([aeouyáāâéēêíīîóōôúūûýȳŷ])\\\" \\\"j\\\\\\\\1\\\"\\n  \\n  \\\\** Special case of diphtong aw. Before vowels, do not treat \\'aw\\' as diphthong, \\n  since it seems more logical that aw would behave as a semi vowel **\\\\\\n  \\\\rxsubstitute \\\"aw([aeouyáāâéēêíīîóōôúūûýȳŷ])\\\" \\\"a|w\\\\\\\\1\\\"\\n  \\n  \\\\** Special case for ng : before the vast majority of consonnants, treat as ŋ **\\\\\\n  \\\\** Don\\'t include r / l / lh / w **\\\\\\n  \\\\rxsubstitute \\\"ng([tpckbdfðvnmhs])\\\" \\\"ŋ\\\\\\\\1\\\"\\n  \\n  \\\\** Avoid mutated ng of being treated as strong middle word n|g (ex : i·ngelaidh [iŋɛlaið] ) **\\\\\\n  \\\\substitute \\\"·ng\\\" \\\"·ŋ\\\"  \\n  \\\\** But avoid losing the strong g in nasal mutation of g (ex : in·Gelydh [iŋgɛlyð]] ) **\\\\\\n  \\\\substitute \\\"n·g\\\" \\\"·ŋg\\\"\\n  \\\\** Use median dot as word joiner **\\\\\\n  \\\\substitute \\\"·\\\" \\\"\\\"\\n\\n  \\\\** Preprocess numbers **\\\\\\n  \\\\elvish_numbers \\\"\\\\\\\\eval numbers_base\\\" \\\"\\\\\\\\eval reverse_numbers\\\"\\n\\\\end\\n\\n\\\\beg      processor\\n\\n  \\\\beg    rules litteral\\n  \\n    \\\\if \\\"consonant_modification_style == CONSONANT_MODIFICATION_STYLE_WAVE\\\"\\n      {GEMINATE} === GEMINATE_SIGN_TILD\\n      {NASAL}    === NASALIZE_SIGN_TILD\\n    \\\\else\\n      {GEMINATE} === GEMINATE_SIGN\\n      {NASAL}    === NASALIZE_SIGN\\n    \\\\endif\\n  \\n    {A}                 === a\\n    {AA}                === á\\n    {E}                 === e\\n    {EE}                === é\\n    {I}                 === i\\n    {II}                === í\\n    {O}                 === o\\n    {OO}                === ó\\n    {U}                 === u\\n    {UU}                === ú\\n    {Y}                 === y\\n    {YY}                === ý\\n    \\n    {AE}                === {A}{E}\\n    {AI}                === {A}{I}\\n    {AU}                === {A}{U}\\n    {AW}                === {A}w\\n    {EI}                === {E}{I}\\n    {UI}                === {U}{I}\\n    {OE}                === {O}{E}\\n             \\n    {K}                 === (c,k)\\n    \\n    \\\\if \\\"short_a == SHORT_A_WITH_DOT\\\"\\n      {A}                 --> OSSE I_TEHTA\\n    \\\\else\\n      {A}                 --> OSSE\\n    \\\\endif\\n    \\n    \\\\if \\\"short_e == SHORT_E_WITH_DOT\\\"\\n      {E}                 --> YANTA I_TEHTA\\n    \\\\else\\n      {E}                 --> YANTA\\n    \\\\endif\\n    \\n    \\\\if \\\"short_i == SHORT_I_WITH_DOT\\\"\\n      {I}                 --> TELCO I_TEHTA\\n    \\\\else\\n      {I}                 --> TELCO\\n    \\\\endif\\n    \\n    \\\\if \\\"short_o == SHORT_O_WITH_DOT\\\"\\n      {O}                 --> ANNA I_TEHTA\\n    \\\\else\\n      {O}                 --> ANNA\\n    \\\\endif\\n    \\n    \\\\if \\\"short_u == SHORT_U_WITH_DOT\\\"\\n      {U}                 --> URE I_TEHTA\\n    \\\\else\\n      {U}                 --> URE\\n    \\\\endif\\n\\n    \\\\if \\\"short_y == SHORT_Y_WITH_DOT\\\"\\n      {Y}                 --> SILME_NUQUERNA I_TEHTA\\n    \\\\else\\n      {Y}                 --> SILME_NUQUERNA\\n    \\\\endif\\n\\n    {AA}                --> OSSE  E_TEHTA\\n    {EE}                --> YANTA E_TEHTA\\n    {II}                --> TELCO E_TEHTA\\n    {OO}                --> ANNA  E_TEHTA\\n    {UU}                --> URE   E_TEHTA\\n    {YY}                --> SILME_NUQUERNA E_TEHTA\\n\\n    \\\\** Should chose between OSSE YANTA and OSSE THSUP_TICK_INV. Old tengscribe had second one, amanye tenceli has first one. **\\\\ \\n    {AE}                --> OSSE  YANTA  \\n    {AI}                --> OSSE  Y_TEHTA\\n    {AU}                --> OSSE  WA_TEHTA \\n    \\n    \\\\if \\\"beleriand_aw_diphthong == AW_VILYA_AT_ENDINGS_CURL_ELSE\\\"\\n      ({AU},{AW})         --> OSSE WA_TEHTA\\n      ({AU},{AW})_        --> OSSE VILYA\\n    \\\\elsif \\\"beleriand_aw_diphthong == AW_ALWAYS_VILYA\\\"\\n      ({AU},{AW})         --> OSSE VILYA\\n    \\\\elsif \\\"beleriand_aw_diphthong == AW_ALWAYS_CURL\\\"\\n      ({AU},{AW})         --> OSSE WA_TEHTA\\n    \\\\endif\\n      \\n    {EI}                --> YANTA Y_TEHTA\\n    {UI}                --> URE   Y_TEHTA\\n    {OE}                --> ANNA  YANTA\\n\\n    \\\\** ======== **\\\\\\n    \\\\** 1ST LINE **\\\\\\n    \\\\** ======== **\\\\\\n    {L1}         === t     * p      * {K}\\n    {_L1_}       === TINCO * PARMA  * CALMA\\n\\n    [{L1}]       --> [{_L1_}]\\n \\n    nt   --> TINCO {NASAL}\\n    mp   --> PARMA {NASAL}\\n    n{K} --> CALMA {NASAL}\\n\\n    \\\\** ======== **\\\\\\n    \\\\** 2ND LINE **\\\\\\n    \\\\** ======== **\\\\\\n    {L2}   === d     * b     * g \\n    {_L2_} === ANDO  * UMBAR * ANGA \\n\\n    [{L2}] --> [{_L2_}]\\n\\n    mb          --> UMBAR  {NASAL}\\n    nd          --> ANDO   {NASAL}\\n    \\n    \\\\** /ŋg/ : this is ng in middle of words + might be found at word start on mutation.\\n    \\\\** See also final/initial ng_ / _ng below **\\\\\\n    (ng,ngg,ŋg,ñg)    --> ANGA   {NASAL} \\n    \\n    \\\\** ======== **\\\\\\n    \\\\** 3RD LINE **\\\\\\n    \\\\** ======== **\\\\\\n    {L3}   === (þ,th) * (f,ph,ff) * ch\\n    {_L3_} === SULE   * FORMEN    * AHA\\n     \\n    [{L3}] --> [{_L3_}]\\n\\n    nth   --> SULE    {NASAL}\\n    mph   --> FORMEN  {NASAL}\\n    nf    --> FORMEN  {NASAL}\\n    nch   --> AHA     {NASAL}\\n\\n    \\\\** ======== **\\\\\\n    \\\\** 4TH LINE **\\\\\\n    \\\\** ======== **\\\\\\n    {L4}    === (đ,ð,ðh,dh) * (v,bh,f_) \\n    {_L4_}  === ANTO  * AMPA \\n\\n    [{L4}] --> [{_L4_}]\\n\\n    \\\\** ======== **\\\\\\n    \\\\** 5TH LINE **\\\\\\n    \\\\** ======== **\\\\\\n    {L5}    === nn    * mm    * (ng_,_ng,ŋ,ñ)\\n    {_L5_}  === NUMEN * MALTA * NOLDO \\n\\n    [{L5}] --> [{_L5_}]\\n\\n    \\\\** ======== **\\\\\\n    \\\\** 6TH LINE **\\\\\\n    \\\\** ======== **\\\\\\n    {L6}    === n   * m     * w     * _mh \\n    {_L6_}  === ORE * VALA  * VILYA * MALTA_W_HOOK  \\n\\n    [{L6}] --> [{_L6_}]\\n\\n    \\\\** ======== **\\\\\\n    \\\\** R/L LINE **\\\\\\n    \\\\** ======== **\\\\\\n    {L_LINE}        === r     * _rh   * l     * _lh\\n    {_L_LINE_}      === ROMEN * ARDA  * LAMBE  * ALDA \\n\\n    [{L_LINE}] --> [{_L_LINE_}]\\n\\n    \\\\** ======== **\\\\\\n    \\\\** S/Z LINE **\\\\\\n    \\\\** ======== **\\\\\\n    {S_LINE}    === s\\n    {_S_LINE_}  === SILME \\n\\n    [{S_LINE}] --> [{_S_LINE_}]\\n\\n    \\\\** REMOVING NEXT ONE WHICH CLASHES WITH Y **\\\\\\n    \\\\** ns --> SILME_NUQUERNA {NASAL} **\\\\\\n\\n    \\\\** ======== **\\\\\\n    \\\\** OTHERS **\\\\\\n    \\\\** ======== **\\\\\\n\\n    j --> ARA\\n\\n    h --> HYARMEN\\n\\n    hw   --> HWESTA_SINDARINWA\\n\\n    \\\\** labialized consonants **\\\\\\n    bw              --> UMBAR  WA_TEHTA \\\\** Gnomish **\\\\\\n    dw              --> ANDO   WA_TEHTA\\n    gw              --> ANGA   WA_TEHTA\\n    lw              --> LAMBE  WA_TEHTA\\n    nw              --> ORE    WA_TEHTA\\n    rw              --> ROMEN  WA_TEHTA \\n    (ng,ngg,ŋg,ñg)w --> ANGA {NASAL} WA_TEHTA\\n    (_ng,ng_,ŋ,ñ)w  --> NOLDO  WA_TEHTA\\n    \\n    \\\\if \\\"apostrophe == APOSTROPHE_IGNORED\\\"\\n      \\' --> {NULL}\\n      ’ --> {NULL}\\n    \\\\else\\n      \\\\** use gasdil **\\\\\\n      \\' --> HALLA\\n      ’ --> HALLA\\n    \\\\endif\\n    \\n    \\\\** Forced gasdil **\\\\\\n    ° --> HALLA\\n  \\\\end\\n  \\n  \\\\beg    rules punctuation\\n    . --> PUNCT_DDOT\\n    .. --> PUNCT_DOT PUNCT_DDOT PUNCT_DOT\\n    ... --> PUNCT_TILD\\n    …   --> PUNCT_TILD\\n    .... --> PUNCT_TILD\\n    ..... --> PUNCT_TILD\\n    ...... --> PUNCT_TILD\\n    ....... --> PUNCT_TILD\\n\\n    , --> PUNCT_DOT\\n    : --> PUNCT_DOT\\n    ; --> PUNCT_DOT\\n    ! --> PUNCT_EXCLAM\\n    ? --> PUNCT_INTERR\\n    · --> {NULL}\\n\\n    - --> {NULL}\\n    – --> PUNCT_TILD  \\n    — --> PUNCT_TILD\\n\\n    \\\\** Apostrophe **\\\\\\n\\n\\n    \\n    \\\\** NBSP **\\\\\\n    {NBSP} --> NBSP\\n    \\n    \\\\** Quotes **\\\\\\n\\n    “ --> DQUOT_OPEN\\n    ” --> DQUOT_CLOSE\\n    « --> DQUOT_OPEN \\n    » --> DQUOT_CLOSE \\n\\n    [ --> PUNCT_PAREN_L\\n    ] --> PUNCT_PAREN_R\\n    ( --> PUNCT_PAREN_L\\n    ) --> PUNCT_PAREN_R\\n    { --> PUNCT_PAREN_L\\n    } --> PUNCT_PAREN_R\\n    < --> PUNCT_PAREN_L\\n    > --> PUNCT_PAREN_R\\n\\n    \\\\** Not universal between fonts ... **\\\\\\n    $ --> ELVISH_PAREN\\n    ≤ --> RING_MARK_L \\\\** Ring inscription left beautiful stuff **\\\\\\n    ≥ --> RING_MARK_R \\\\** Ring inscription right beautiful stuff **\\\\\\n  \\\\end\\n\\n  \\\\beg    rules  numbers\\n    0 --> NUM_0\\n    1 --> NUM_1\\n    2 --> NUM_2\\n    3 --> NUM_3\\n    4 --> NUM_4\\n    5 --> NUM_5\\n    6 --> NUM_6\\n    7 --> NUM_7\\n    8 --> NUM_8\\n    9 --> NUM_9\\n    A --> NUM_10\\n    B --> NUM_11      \\n  \\\\end\\n  \\n\\\\end\\n\\n\\\\beg postprocessor\\n  \\\\resolve_virtuals\\n\\\\end\\n\"\nGlaemscribe.resource_manager.raw_modes[\"sindarin-tengwar-general_use\"] = \"\\\\**\\n\\nGlǽmscribe (also written Glaemscribe) is a software dedicated to\\nthe transcription of texts between writing systems, and more \\nspecifically dedicated to the transcription of J.R.R. Tolkien\\'s \\ninvented languages to some of his devised writing systems.\\n\\nCopyright (C) 2015 Benjamin Babut (Talagan).\\n\\nThis program is free software: you can redistribute it and/or modify\\nit under the terms of the GNU Affero General Public License as published by\\nthe Free Software Foundation, either version 3 of the License, or\\nany later version.\\n\\nThis program is distributed in the hope that it will be useful,\\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\nGNU Affero General Public License for more details.\\n\\nYou should have received a copy of the GNU Affero General Public License\\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\\n\\n**\\\\\\n\\n\\\\** Sindarin Classical mode for glaemscribe (MAY BE INCOMPLETE) **\\\\\\n\\n\\\\beg changelog\\n  \\\\entry \\\"0.0.2\\\" \\\"Fixed some tehtar versions which did not look quite nice for ch, dh, v, mb. Reworked the problem of labialized consonnants (+w), adding an option for treating the u-curl + tehta combination.\\\"\\n  \\\\entry \\\"0.0.3\\\" \\\"Extended the labialized consonnants option.\\\"\\n  \\\\entry \\\"0.0.4\\\" \\\"Fixed nw (BUG : was using ORE from the beleriand mode), added lw\\\"\\n  \\\\entry \\\"0.0.5\\\" \\\"Added thorn as equivalent for th\\\"\\n  \\\\entry \\\"0.0.6\\\" \\\"Porting to virtual chars to simplify and beautify\\\"\\n  \\\\entry \\\"0.0.7\\\" \\\"Added charset support for Annatar\\\"\\n  \\\\entry \\\"0.0.8\\\" \\\"Added support for the FreeMonoTengwar font\\\" \\n  \\\\entry \\\"0.1.0\\\" \\\"Added support for the Tengwar Elfica font\\\"\\n  \\\\entry \\\"0.1.1\\\" \\\"Added support for inlined raw tengwar\\\"  \\n  \\\\entry \\\"0.1.2\\\" \\\"Added support for non-breaking spaces\\\"  \\n  \\\\entry \\\"0.1.3\\\" \\\"Added support for new unicode charsets\\\"   \\n  \\\\entry \\\"0.1.4\\\" \\\"Added support for the Tengwar Telcontar font\\\"\\n  \\\\entry \\\"0.1.5\\\" \\\"Added a few labial exotic combinations. Reworked median point behaviour, and ng.\\\"\\n  \\\\entry \\\"0.1.6\\\" \\\"Added gasdil handling.\\\"\\n\\\\end\\n\\n\\\\language \\\"Sindarin\\\"\\n\\\\writing  \\\"Tengwar\\\"\\n\\\\mode     \\\"Sindarin Tengwar - General Use\\\"\\n\\\\version  \\\"0.1.6\\\"\\n\\\\authors  \\\"J.R.R. Tolkien, impl. Talagan (Benjamin Babut)\\\"\\n\\n\\\\world      arda\\n\\\\invention  jrrt\\n\\n\\\\charset  tengwar_ds_sindarin true\\n\\\\charset  tengwar_ds_parmaite false\\n\\\\charset  tengwar_ds_eldamar  false\\n\\\\charset  tengwar_ds_annatar  false\\n\\\\charset  tengwar_ds_elfica   false\\n\\n\\\\charset  tengwar_guni_sindarin false\\n\\\\charset  tengwar_guni_parmaite false\\n\\\\charset  tengwar_guni_eldamar  false\\n\\\\charset  tengwar_guni_annatar  false\\n\\\\charset  tengwar_guni_elfica   false\\n\\n\\\\charset  tengwar_freemono    false\\n\\\\charset  tengwar_telcontar   false\\n\\n\\\\raw_mode \\\"raw-tengwar\\\"\\n\\n\\\\beg      options\\n\\n  \\\\beg option reverse_o_u_tehtar U_UP_O_DOWN\\n    \\\\value O_UP_U_DOWN 1\\n    \\\\value U_UP_O_DOWN 2\\n  \\\\end\\n\\n  \\\\beg option apostrophe APOSTROPHE_IGNORED\\n    \\\\value APOSTROPHE_IGNORED 0\\n    \\\\value APOSTROPHE_GASDIL  1\\n  \\\\end\\n  \\n  \\\\beg option hyphen HYPHEN_WORD_BREAKER\\n    \\\\value HYPHEN_WORD_BREAKER  0\\n    \\\\value HYPHEN_WORD_JOINER   1\\n  \\\\end\\n\\n  \\\\beg option consonant_modification_style CONSONANT_MODIFICATION_STYLE_BAR\\n    \\\\value CONSONANT_MODIFICATION_STYLE_WAVE 0\\n    \\\\value CONSONANT_MODIFICATION_STYLE_BAR 1\\n  \\\\end\\n\\n  \\\\beg option labialized_consonants_u_curl LABIALIZED_U_CURL_ALWAYS\\n    \\\\value    LABIALIZED_U_CURL_NONE      1\\n    \\\\value    LABIALIZED_U_CURL_NO_TEHTAR 2\\n    \\\\value    LABIALIZED_U_CURL_ALWAYS    3\\n  \\\\end\\n\\n  \\\\option reverse_numbers true\\n  \\\\beg option numbers_base BASE_12\\n    \\\\value    BASE_10 10\\n    \\\\value    BASE_12 12\\n  \\\\end\\n\\n\\\\end\\n\\n\\\\beg preprocessor\\n  \\\\** Work exclusively downcase **\\\\\\n  \\\\downcase\\n  \\n  \\\\if \\\"hyphen == HYPHEN_WORD_JOINER\\\"\\n    \\\\** Replace hyphen by median point **\\\\\\n    \\\\substitute \\\"-\\\" \\\"·\\\"  \\n  \\\\else\\n    \\\\** Replace hyphen by glaemscribe\\'s word breaker **\\\\\\n    \\\\substitute \\\"-\\\" \\\"|\\\"\\n  \\\\endif\\n  \\n  \\\\** Add keyboard friendly word joiner **\\\\\\n  \\\\substitute \\\"*\\\" \\\"·\\\"\\n  \\n  \\\\** Simplify trema vowels **\\\\\\n  \\\\substitute ä a\\n  \\\\substitute ë e\\n  \\\\substitute ï i\\n  \\\\substitute ö o\\n  \\\\substitute ü u\\n  \\\\substitute ÿ y\\n\\n  \\\\** We should do better for that one (todo) **\\\\\\n  \\\\substitute œ e\\n  \\n  \\\\** Dis-ambiguate long vowels **\\\\\\n  \\\\rxsubstitute \\\"(ā|â|aa)\\\" \\\"á\\\"\\n  \\\\rxsubstitute \\\"(ē|ê|ee)\\\" \\\"é\\\"\\n  \\\\rxsubstitute \\\"(ī|î|ii)\\\" \\\"í\\\"\\n  \\\\rxsubstitute \\\"(ō|ô|oo)\\\" \\\"ó\\\"\\n  \\\\rxsubstitute \\\"(ū|û|uu)\\\" \\\"ú\\\"\\n  \\\\rxsubstitute \\\"(ȳ|ŷ|yy)\\\" \\\"ý\\\"\\n  \\n  \\\\** Special case of starting \\'i\\' before vowels, replace i by j **\\\\     \\n  \\\\rxsubstitute \\\"\\\\\\\\bi([aeouyáāâéēêíīîóōôúūûýȳŷ])\\\" \\\"j\\\\\\\\1\\\"\\n  \\n  \\\\** Special case for ng : before the vast majority of consonnants, treat as ŋ **\\\\\\n  \\\\** Don\\'t include r / l / lh / w **\\\\\\n  \\\\rxsubstitute \\\"ng([tpckbdfðvnmhs])\\\" \\\"ŋ\\\\\\\\1\\\"\\n  \\n  \\\\** Avoid mutated ng of being treated as strong middle word n|g (ex : i·ngelaidh [iŋɛlaið] ) **\\\\\\n  \\\\substitute \\\"·ng\\\" \\\"·ŋ\\\"  \\n  \\\\** But avoid losing the strong g in nasal mutation of g (ex : in·Gelydh [iŋgɛlyð]] ) **\\\\\\n  \\\\substitute \\\"n·g\\\" \\\"·ŋg\\\"\\n  \\\\** Use median dot as word joiner **\\\\\\n  \\\\substitute \\\"·\\\" \\\"\\\"\\n  \\n  \\\\** Preprocess numbers **\\\\\\n  \\\\elvish_numbers \\\"\\\\\\\\eval numbers_base\\\" \\\"\\\\\\\\eval reverse_numbers\\\"\\n\\\\end\\n \\n\\\\beg processor\\n\\n  \\\\beg rules litteral\\n    \\n    \\\\if \\\"consonant_modification_style == CONSONANT_MODIFICATION_STYLE_WAVE\\\"\\n      {GEMINATE} === GEMINATE_SIGN_TILD\\n      {NASAL}    === NASALIZE_SIGN_TILD\\n    \\\\else\\n      {GEMINATE} === GEMINATE_SIGN\\n      {NASAL}    === NASALIZE_SIGN\\n    \\\\endif\\n    \\n    \\\\if \\\"reverse_o_u_tehtar == U_UP_O_DOWN\\\"\\n      {O_LOOP}        === O_TEHTA\\n      {U_LOOP}        === U_TEHTA\\n     \\\\else\\n      {O_LOOP}        === U_TEHTA\\n      {U_LOOP}        === O_TEHTA\\n    \\\\endif\\n    \\n    \\\\** VOWELS **\\\\\\n    {A}   === a\\n    {AA}  === á\\n    {E}   === e\\n    {EE}  === é\\n    {I}   === i\\n    {II}  === í\\n    {O}   === o\\n    {OO}  === ó\\n    {U}   === u\\n    {UU}  === ú\\n    {Y}   === y\\n    {YY}  === ý\\n\\n    {AE}  === {A}{E}\\n    {AI}  === {A}{I}\\n    {AU}  === {A}{U}\\n    {AW}  === {A}w\\n    {EI}  === {E}{I}\\n    {OE}  === {O}{E}\\n    {UI}  === {U}{I}\\n\\n    \\\\** CONSONANTS **\\\\\\n    {K}         === (c,k)\\n\\n    {VOWELS}    === {A}             * {E}             * {I}           * {O}         * {U}         * {Y} \\n    {LVOWELS}   === {AA}            * {EE}            * {II}          * {OO}        * {UU}        * {YY}   \\n\\n    {TEHTAR}    === A_TEHTA         * E_TEHTA         * I_TEHTA       * {O_LOOP}     * {U_LOOP}     * Y_TEHTA \\n  \\n    {_LTEHTAR_} === ARA A_TEHTA     * ARA E_TEHTA     * ARA I_TEHTA   * ARA {O_LOOP} * ARA {U_LOOP} * ARA Y_TEHTA \\n\\n    {DIPHTHONGS}   === {AI}            * {AU}            * {AW}            * {EI}            * {UI}         * {AE}          * {OE}              \\n    {_DIPHTHONGS_} === ANNA A_TEHTA    * VALA A_TEHTA    * VALA A_TEHTA    * ANNA E_TEHTA    * ANNA {U_LOOP} * YANTA A_TEHTA * YANTA {O_LOOP}     \\n\\n    \\\\** Consonants + Vowels, we will often need these ones **\\\\\\n    {V_D}         === [ {VOWELS} ]\\n    {V_D_WN}      === [ {VOWELS} * {NULL} ]\\n\\n    {_V_D_}       === [ {TEHTAR} ]\\n    {_V_D_WN_}    === [ {TEHTAR} * {NULL} ]\\n \\n    \\\\** Vowel rules **\\\\  \\n    [{VOWELS}]      -->   TELCO [{TEHTAR}]  \\\\** Replace isolated short vowels **\\\\\\n    [{LVOWELS}]     -->   [{_LTEHTAR_}]   \\\\** Replace long vowels **\\\\\\n    [{DIPHTHONGS}]  -->   [{_DIPHTHONGS_}]    \\\\** Replace diphthongs **\\\\\\n   \\n    \\\\** 1ST LINE **\\\\\\n    {L1}           === t     * p * {K}\\n    {_L1_}         === TINCO * PARMA * QUESSE\\n \\n    {V_D_WN}[{L1}] --> 2,1 --> [{_L1_}]{_V_D_WN_}\\n  \\n    {V_D_WN}nt   --> TINCO {NASAL} {_V_D_WN_}\\n    {V_D_WN}mp   --> PARMA {NASAL} {_V_D_WN_}\\n    {V_D_WN}n{K} --> CALMA {NASAL} {_V_D_WN_}\\n\\n    \\\\** 2ND LINE **\\\\\\n    \\\\** \\n        /ŋg/ : this is ng in middle of words + might be found at word start. \\n        See also final/initial ng_ / _ng below \\n    **\\\\\\n    {L2}        === d     * b     * g     * (ng,ngg,ŋg,ñg)              \\n    {_L2_}      === ANDO  * UMBAR * UNGWE * UNGWE {NASAL}      \\n\\n    {V_D_WN}[{L2}] --> 2,1 --> [{_L2_}]{_V_D_WN_}\\n\\n    {V_D_WN}mb   --> UMBAR  {NASAL} {_V_D_WN_}\\n    {V_D_WN}nd   --> ANDO   {NASAL} {_V_D_WN_}\\n\\n    \\\\** 3RD LINE **\\\\\\n    {L3}    === (þ,th) * (f,ph,ff) * ch \\n    {_L3_}  === SULE   * FORMEN * HWESTA\\n\\n    {V_D_WN}[{L3}] --> 2,1 --> [{_L3_}]{_V_D_WN_} \\n   \\n    {V_D_WN}nth   --> SULE   {NASAL} {_V_D_WN_}\\n    {V_D_WN}mph   --> FORMEN {NASAL} {_V_D_WN_}\\n    {V_D_WN}nf    --> FORMEN {NASAL} {_V_D_WN_}\\n    {V_D_WN}nch   --> HWESTA {NASAL} {_V_D_WN_}\\n\\n    \\\\** 4TH LINE **\\\\\\n    {L4}        === (đ,ð,ðh,dh)   * (v,bh,f_) \\\\** Some noldorin variants here ... **\\\\\\n    {_L4_}      === ANTO          * AMPA \\n\\n    {V_D_WN}[{L4}] --> 2,1 --> [{_L4_}]{_V_D_WN_}\\n\\n    \\\\** 5TH LINE **\\\\\\n    {L5}        === n     *   m       * (_ng,ng_,ŋ,ñ)   * _mh  \\\\** weak ng at initial and final **\\\\\\n    {_L5_}      === NUMEN *   MALTA   * NWALME          * MALTA_W_HOOK \\n\\n    {V_D_WN}[{L5}] --> 2,1 --> [{_L5_}]{_V_D_WN_}\\n\\n    {V_D_WN}nn        --> NUMEN {NASAL} {_V_D_WN_}\\n    {V_D_WN}mm        --> MALTA {NASAL} {_V_D_WN_}\\n\\n    \\\\** 6TH LINE **\\\\\\n\\n    \\\\** 7TH LINE **\\\\\\n    {L7}        === r_    * r     * l     * ll               * w     \\n    {_L7_}      === ORE   * ROMEN * LAMBE * LAMBE {GEMINATE} * VALA\\n        \\n    {V_D_WN}[{L7}] --> 2,1 --> [{_L7_}]{_V_D_WN_}\\n    \\n    _rh --> ARDA\\n    _lh --> ALDA\\n\\n    \\\\** S/Z LINE **\\\\\\n    {L8}    === s * y * ss\\n    {_L8_}  === SILME_NUQUERNA * SILME_NUQUERNA_ALT * ESSE_NUQUERNA \\n\\n    {V_D_WN}[{L8}]  --> 2,1 --> [{_L8_}]{_V_D_WN_}\\n\\n    {V_D_WN}ns      --> SILME_NUQUERNA {NASAL} {_V_D_WN_}\\n\\n    s --> SILME\\n\\n    \\\\** OTHERS **\\\\\\n    j --> YANTA\\n\\n    {V_D_WN}h    --> HYARMEN {_V_D_WN_}\\n    {V_D_WN}hw   --> HWESTA_SINDARINWA {_V_D_WN_}\\n\\n    \\\\** \\n        Ok here come the labialized consonants which are really tricky\\n        The fonts generally do not handle well the wa-tehta curl + tehtar, this should be one more argument for\\n        adopting open type anchors with which we can stack diacritics (see the sarati modes).\\n        For here, we cheat. Either we don\\'t have any tehta on the tengwa, and it\\'s easy.\\n        Or, we put the two signs in their small versions, side by side.\\n        We give an option not to use that trick, if the option is not set, we simply do not use\\n        the wa-tehta curl at all when there\\'s a tehta on the tengwa.\\n    **\\\\\\n    \\n    \\\\if \\\"labialized_consonants_u_curl == LABIALIZED_U_CURL_NO_TEHTAR || labialized_consonants_u_curl == LABIALIZED_U_CURL_ALWAYS\\\"\\n      bw   --> UMBAR WA_TEHTA\\n      dw   --> ANDO  WA_TEHTA  \\n      gw   --> UNGWE WA_TEHTA  \\n      lw   --> LAMBE WA_TEHTA\\n      nw   --> NUMEN WA_TEHTA   \\n      rw   --> ROMEN WA_TEHTA   \\n      (ng,ngg,ŋg,ñg)w --> UNGWE {NASAL} WA_TEHTA\\n      (_ng,ng_,ŋ,ñ)w  --> NWALME WA_TEHTA\\n    \\\\endif\\n\\n    \\\\if \\\"labialized_consonants_u_curl == LABIALIZED_U_CURL_ALWAYS\\\"    \\n      {V_D}bw               --> UMBAR WA_TEHTA {_V_D_}\\n      {V_D}dw               --> ANDO  WA_TEHTA {_V_D_}\\n      {V_D}gw               --> UNGWE WA_TEHTA {_V_D_}\\n      {V_D}lw               --> LAMBE WA_TEHTA {_V_D_}   \\n      {V_D}nw               --> NUMEN WA_TEHTA {_V_D_}\\n      {V_D}rw               --> ROMEN WA_TEHTA {_V_D_}\\n      {V_D}(ng,ngg,ŋg,ñg)w  --> UNGWE {NASAL} WA_TEHTA {_V_D_}\\n      {V_D}(_ng,ng_,ŋ,ñ)w   --> NWALME WA_TEHTA {_V_D_}\\n    \\\\endif\\n    \\n    \\\\if \\\"apostrophe == APOSTROPHE_IGNORED\\\"\\n      \\' --> {NULL}\\n      ’ --> {NULL}\\n    \\\\else\\n      \\\\** use gasdil **\\\\\\n      \\' --> HALLA\\n      ’ --> HALLA\\n    \\\\endif\\n    \\n    \\\\** Forced gasdil **\\\\\\n    ° --> HALLA\\n  \\\\end\\n  \\n  \\\\beg rules punctuation\\n    . --> PUNCT_DDOT\\n    .. --> PUNCT_DOT PUNCT_DDOT PUNCT_DOT\\n    ... --> PUNCT_TILD\\n    …   --> PUNCT_TILD\\n    .... --> PUNCT_TILD\\n    ..... --> PUNCT_TILD\\n    ...... --> PUNCT_TILD\\n    ....... --> PUNCT_TILD\\n    \\n    , --> PUNCT_DOT\\n    : --> PUNCT_DOT\\n    ; --> PUNCT_DOT\\n    ! --> PUNCT_EXCLAM\\n    ? --> PUNCT_INTERR\\n    · --> {NULL}\\n\\n    - --> {NULL} \\n    – --> PUNCT_TILD  \\n    — --> PUNCT_TILD\\n    \\n    \\\\** NBSP **\\\\\\n    {NBSP} --> NBSP\\n    \\n    \\\\** Quotes **\\\\\\n\\n    “ --> DQUOT_OPEN\\n    ” --> DQUOT_CLOSE\\n    « --> DQUOT_OPEN \\n    » --> DQUOT_CLOSE \\n\\n    [ --> PUNCT_PAREN_L\\n    ] --> PUNCT_PAREN_R\\n    ( --> PUNCT_PAREN_L\\n    ) --> PUNCT_PAREN_R\\n    { --> PUNCT_PAREN_L\\n    } --> PUNCT_PAREN_R\\n    < --> PUNCT_PAREN_L\\n    > --> PUNCT_PAREN_R\\n\\n    \\\\** Not universal between fonts ... **\\\\\\n    $ --> ELVISH_PAREN\\n    ≤ --> RING_MARK_L \\\\** Ring inscription left beautiful stuff **\\\\\\n    ≥ --> RING_MARK_R \\\\** Ring inscription right beautiful stuff **\\\\\\n  \\\\end\\n\\n  \\\\beg rules numbers\\n    0 --> NUM_0\\n    1 --> NUM_1\\n    2 --> NUM_2\\n    3 --> NUM_3\\n    4 --> NUM_4\\n    5 --> NUM_5\\n    6 --> NUM_6\\n    7 --> NUM_7\\n    8 --> NUM_8\\n    9 --> NUM_9\\n    A --> NUM_10\\n    B --> NUM_11      \\n  \\\\end\\n\\\\end\\n\\n\\\\beg postprocessor\\n  \\\\resolve_virtuals\\n\\\\end\\n\"\nGlaemscribe.resource_manager.raw_modes[\"telerin-tengwar-glaemscrafu\"] = \"\\\\**\\n\\nGlǽmscribe (also written Glaemscribe) is a software dedicated to\\nthe transcription of texts between writing systems, and more \\nspecifically dedicated to the transcription of J.R.R. Tolkien\\'s \\ninvented languages to some of his devised writing systems.\\n\\nCopyright (C) 2015 Benjamin Babut (Talagan).\\n\\nThis program is free software: you can redistribute it and/or modify\\nit under the terms of the GNU Affero General Public License as published by\\nthe Free Software Foundation, either version 3 of the License, or\\nany later version.\\n\\nThis program is distributed in the hope that it will be useful,\\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\nGNU Affero General Public License for more details.\\n\\nYou should have received a copy of the GNU Affero General Public License\\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\\n\\n**\\\\\\n\\n\\\\** Telerin mode for glaemscribe (MAY BE INCOMPLETE) - Derived from Quenya **\\\\\\n\\n\\\\beg changelog\\n  \\\\entry \\\"0.0.2\\\" \\\"Correcting ts/ps sequences to work better with eldamar\\\"\\n  \\\\entry \\\"0.0.3\\\" \\\"Porting to virtual chars\\\"\\n  \\\\entry \\\"0.0.4\\\" \\\"Added charset support for Annatar\\\"\\n  \\\\entry \\\"0.0.5\\\" \\\"Added support for the FreeMonoTengwar font\\\" \\n  \\\\entry \\\"0.0.6\\\" \\\"Ported some options from the quenya mode\\\"\\n  \\\\entry \\\"0.1.0\\\" \\\"Added support for the Tengwar Elfica font\\\"\\n  \\\\entry \\\"0.1.1\\\" \\\"Added support for inlined raw tengwar\\\"  \\n  \\\\entry \\\"0.1.2\\\" \\\"Added support for non-breaking spaces\\\"   \\n  \\\\entry \\\"0.1.3\\\" \\\"Correcting visibility options to conform to new glaeml args strict syntax\\\"  \\n  \\\\entry \\\"0.1.4\\\" \\\"Added support for new unicode charsets\\\"   \\n  \\\\entry \\\"0.1.5\\\" \\\"Added support for the Tengwar Telcontar font\\\"\\n\\\\end\\n\\n\\\\language \\\"Telerin\\\"\\n\\\\writing  \\\"Tengwar\\\"\\n\\\\mode     \\\"Telerin Tengwar - G*\\\"\\n\\\\version  \\\"0.1.5\\\"\\n\\\\authors  \\\"Talagan (Benjamin Babut), based on J.R.R Tolkien\\\"\\n\\n\\\\world      arda\\n\\\\invention  experimental\\n\\n\\\\charset  tengwar_ds_sindarin true\\n\\\\charset  tengwar_ds_parmaite false\\n\\\\charset  tengwar_ds_eldamar  false\\n\\\\charset  tengwar_ds_annatar  false\\n\\\\charset  tengwar_ds_elfica   false\\n\\n\\\\charset  tengwar_guni_sindarin false\\n\\\\charset  tengwar_guni_parmaite false\\n\\\\charset  tengwar_guni_eldamar  false\\n\\\\charset  tengwar_guni_annatar  false\\n\\\\charset  tengwar_guni_elfica   false\\n\\n\\\\charset  tengwar_freemono    false\\n\\\\charset  tengwar_telcontar   false\\n\\n\\\\raw_mode \\\"raw-tengwar\\\"\\n\\n\\\\beg      options\\n\\n  \\\\beg option reverse_o_u_tehtar U_UP_O_DOWN\\n    \\\\value O_UP_U_DOWN 1\\n    \\\\value U_UP_O_DOWN 2\\n  \\\\end\\n\\n  \\\\beg option long_vowels_format LONG_VOWELS_USE_LONG_CARRIER\\n    \\\\value LONG_VOWELS_USE_LONG_CARRIER 1\\n    \\\\value LONG_VOWELS_USE_DOUBLE_TEHTAR 2\\n  \\\\end  \\n\\n  \\\\beg option double_tehta_e false\\n    \\\\visible_when \\\"long_vowels_format == LONG_VOWELS_USE_DOUBLE_TEHTAR\\\"\\n  \\\\end\\n  \\\\beg option double_tehta_i false\\n    \\\\visible_when \\\"long_vowels_format == LONG_VOWELS_USE_DOUBLE_TEHTAR\\\"\\n  \\\\end\\n  \\\\beg option double_tehta_o true\\n    \\\\visible_when \\\"long_vowels_format == LONG_VOWELS_USE_DOUBLE_TEHTAR\\\"\\n  \\\\end\\n  \\\\beg option double_tehta_u true\\n    \\\\visible_when \\\"long_vowels_format == LONG_VOWELS_USE_DOUBLE_TEHTAR\\\"\\n  \\\\end\\n  \\n  \\\\beg option consonant_modification_style CONSONANT_MODIFICATION_STYLE_BAR\\n    \\\\value CONSONANT_MODIFICATION_STYLE_WAVE 0\\n    \\\\value CONSONANT_MODIFICATION_STYLE_BAR 1\\n  \\\\end\\n\\n  \\\\option reverse_numbers true\\n  \\\\beg option numbers_base BASE_12\\n    \\\\value    BASE_10 10\\n    \\\\value    BASE_12 12\\n  \\\\end\\n\\\\end\\n\\n\\\\beg      preprocessor\\n  \\\\** Work exclusively downcase **\\\\\\n  \\\\downcase\\n  \\n  \\\\** Simplify trema vowels **\\\\\\n  \\\\substitute ä a\\n  \\\\substitute ë e\\n  \\\\substitute ï i\\n  \\\\substitute ö o\\n  \\\\substitute ü u\\n  \\\\substitute ÿ y\\n  \\n  \\\\** Dis-ambiguate long vowels **\\\\\\n  \\\\rxsubstitute \\\"(ā|â|aa)\\\" \\\"á\\\"\\n  \\\\rxsubstitute \\\"(ē|ê|ee)\\\" \\\"é\\\" \\n  \\\\rxsubstitute \\\"(ī|î|ii)\\\" \\\"í\\\"\\n  \\\\rxsubstitute \\\"(ō|ô|oo)\\\" \\\"ó\\\"\\n  \\\\rxsubstitute \\\"(ū|û|uu)\\\" \\\"ú\\\"\\n  \\\\rxsubstitute \\\"(ȳ|ŷ|yy)\\\" \\\"ý\\\"\\n\\n  \\\\substitute   \\\"qu\\\" \\\"q\\\" \\\\** Dis-ambiguate qu **\\\\\\n  \\n  \\\\elvish_numbers \\\"\\\\\\\\eval numbers_base\\\" \\\"\\\\\\\\eval reverse_numbers\\\"\\n\\\\end\\n  \\n\\\\beg processor\\n\\n  \\\\beg rules litteral\\n                       \\n    {K}                 === (c,k)\\n    {W}                 === (v,w)\\n    {SS}                === (z,ss)\\n    \\n    \\\\if \\\"consonant_modification_style == CONSONANT_MODIFICATION_STYLE_WAVE\\\"\\n      {GEMINATE} === GEMINATE_SIGN_TILD\\n    \\\\else\\n      {GEMINATE} === GEMINATE_SIGN\\n    \\\\endif\\n    \\n    {VOWELS}            === a               *  e              * i              * o              *  u\\n    {LVOWELS}           === á               *  é              * í              * ó              *  ú\\n\\n    \\\\if \\\"reverse_o_u_tehtar == U_UP_O_DOWN\\\"\\n      {O_LOOP}        === O_TEHTA\\n      {O_LOOP_DOUBLE} === O_TEHTA_DOUBLE\\n      {U_LOOP}        === U_TEHTA\\n      {U_LOOP_DOUBLE} === U_TEHTA_DOUBLE\\n    \\\\else\\n      {O_LOOP}        === U_TEHTA\\n      {O_LOOP_DOUBLE} === U_TEHTA_DOUBLE\\n      {U_LOOP}        === O_TEHTA\\n      {U_LOOP_DOUBLE} === O_TEHTA_DOUBLE\\n    \\\\endif\\n\\n    \\\\** Shape of the a, option removed from quenya, may be readded later **\\\\\\n    {A_SHAPE}         === A_TEHTA\\n\\n    \\\\** Implicit a, option removed from quenya, may be readded later **\\\\\\n    {_A_}              === {A_SHAPE}\\n    {_NVOWEL_}         === {NULL}\\n  \\n    {_TEHTAR_}          === {_A_}      *  E_TEHTA     *  I_TEHTA    * {O_LOOP}    *  {U_LOOP}\\n\\n    \\\\** Split diphtongs option removed from quenya, may be readded later **\\\\\\n    {DIPHTHONGS}      === ai            * au            * eu            * iu             * oi               * ui\\n    {_DIPHTHONGS_}    === YANTA {_A_}   * URE {_A_}     * URE E_TEHTA   * URE I_TEHTA    * YANTA {O_LOOP}   * YANTA {U_LOOP}\\n    {WDIPHTHONGS}     === * {DIPHTHONGS}   \\\\** groovy! **\\\\\\n    {_WDIPHTHONGS_}   === * {_DIPHTHONGS_} \\\\** same thing **\\\\\\n    \\n\t\t{_LONG_A_}      === ARA {A_SHAPE}\\n\t\t{_LONG_E_}      === ARA E_TEHTA\t\\n\t\t{_LONG_I_}      === ARA I_TEHTA\\n\t\t{_LONG_O_}      === ARA {O_LOOP}\t\\n\t\t{_LONG_U_}      === ARA {U_LOOP}\\n\t\t{_LONE_LONG_A_} === {_LONG_A_}\\n\t\t{_LONE_LONG_E_} === {_LONG_E_}\\n\t\t{_LONE_LONG_I_} === {_LONG_I_}\\n\t\t{_LONE_LONG_O_} === {_LONG_O_}\\n\t\t{_LONE_LONG_U_} === {_LONG_U_}\\n    \\n    {LTEHTAR}       === {NULL}\\n    {_LTEHTAR_}     === {NULL} \t\t\t\t\\n \t\t\\n\t\t\\\\if \\\"long_vowels_format == LONG_VOWELS_USE_DOUBLE_TEHTAR\\\"\\n\t    \\\\if double_tehta_e\\n\t\t    {_LONG_E_}       === E_TEHTA_DOUBLE\\n\t\t    {_LONE_LONG_E_}  === TELCO {_LONG_E_}\\n        {LTEHTAR}        === {LTEHTAR}   * é\\n        {_LTEHTAR_}      === {_LTEHTAR_} * {_LONG_E_}\\n\t\t\t\\\\endif\\n\t\t  \\\\if double_tehta_i\\n\t\t    {_LONG_I_}       === I_TEHTA_DOUBLE\\n\t\t    {_LONE_LONG_I_}  === TELCO {_LONG_I_}\\n        {LTEHTAR}        === {LTEHTAR}   * í\\n        {_LTEHTAR_}      === {_LTEHTAR_} * {_LONG_I_}\\n\t\t  \\\\endif\\n\t\t  \\\\if double_tehta_o\\n\t\t    {_LONG_O_}       === {O_LOOP_DOUBLE}\\n\t\t    {_LONE_LONG_O_}  === TELCO {_LONG_O_}\\n        {LTEHTAR}        === {LTEHTAR}   * ó\\n        {_LTEHTAR_}      === {_LTEHTAR_} * {_LONG_O_}\\n\t\t  \\\\endif\\n\t\t  \\\\if double_tehta_u\\n\t\t    {_LONG_U_}       === {U_LOOP_DOUBLE}\\n\t\t    {_LONE_LONG_U_}  === TELCO {_LONG_U_}\\n        {LTEHTAR}        === {LTEHTAR}   * ú\\n        {_LTEHTAR_}      === {_LTEHTAR_} * {_LONG_U_}\\n\t\t  \\\\endif\\n    \\\\endif  \\n       \t\t\\n    \\\\** images of long vowels, either tehtar or ara versions **\\\\\\n    {_LVOWELS_}     === {_LONG_A_} * {_LONG_E_} * {_LONG_I_} * {_LONG_O_} * {_LONG_U_}      \\n\\n\t\t{WLONG}         === * {LVOWELS} \\n\t\t{_WLONG_}       === * {_LVOWELS_}\\n\\n    {V_D}           === [ {VOWELS} {WLONG} {WDIPHTHONGS} ]\\n    {V_D_WN}        === [ {VOWELS} {WLONG} {WDIPHTHONGS} * {NULL} ]\\n\\n    {_V_D_}         === [ {_TEHTAR_} {_WLONG_} {_WDIPHTHONGS_} ]\\n    {_V_D_WN_}      === [ {_TEHTAR_} {_WLONG_} {_WDIPHTHONGS_} * {_NVOWEL_} ]\\n\t\t\\n\t\t\\\\** LONE SHORT VOWELS **\\\\\\n    [{VOWELS}]    --> TELCO [{_TEHTAR_}]  \\\\** Replace isolated short vowels **\\\\\\n    \\n\t\t\\\\** LONE LONG VOWELS **\\\\\t\\n\t\t[{LVOWELS}]   --> [{_LONE_LONG_A_} * {_LONE_LONG_E_} * {_LONE_LONG_I_} * {_LONE_LONG_O_} * {_LONE_LONG_U_}]\\n\\n    [{DIPHTHONGS}]    -->   [{_DIPHTHONGS_}]     \\\\**  Replace diphthongs **\\\\\\n    \\n  \\n    \\\\** TELERIN: changed v/w, removed all y rules **\\\\\\n    \\n    \\\\** ===================== **\\\\\\n    \\\\** 1ST LINE RULES **\\\\\\n    \\\\** ===================== **\\\\\\n    {L1}          === {K}   * q      * t       * p \\n    {_L1_}        === CALMA * QUESSE * TINCO   * PARMA\\n    \\n    {L1_GEMS}     === {K}{K}              * tt                     * pp\\n    {_L1_GEMS_}   === CALMA {GEMINATE} * TINCO {GEMINATE}    * PARMA {GEMINATE}\\n\\n    \\\\** NORMAL **\\\\\\n    [ {L1} ] {V_D_WN}         --> [ {_L1_} ] {_V_D_WN_}\\n    [ {L1_GEMS} ] {V_D_WN}    --> [ {_L1_GEMS_} ] {_V_D_WN_}\\n                            \\n    ts{V_D_WN}          --> TINCO SARINCE {_V_D_WN_} \\n    ps{V_D_WN}          --> PARMA SARINCE {_V_D_WN_}\\n    {K}s{V_D_WN}        --> CALMA SARINCE {_V_D_WN_}   \\n    x{V_D_WN}           --> CALMA SARINCE {_V_D_WN_}   \\\\** render ks for x **\\\\\\n                            \\n    \\\\** ===================== **\\\\\\n    \\\\** 2ND LINE RULES **\\\\\\n    \\\\** ===================== **\\\\\\n    {L2}        === nd      * mb        * ng      *  ngw    * d      * b        * g\\n    {_L2_}      === ANDO    * UMBAR     * ANGA    *  UNGWE  * ORE    * VALA     * ANNA\\n    \\n    \\\\** STANDARD **\\\\\\n    [{L2}]{V_D_WN}  --> [{_L2_}]{_V_D_WN_}\\n\\n    \\\\** ===================== **\\\\\\n    \\\\** 3RD LINE RULES **\\\\\\n    \\\\** ===================== **\\\\\\n    {L3}    === th     * f      * h      * hw\\n    {_L3_}  === SULE   * FORMEN * AHA    * HWESTA\\n\\n    \\\\** NORMAL **\\\\\\n    [{L3}]{V_D_WN}  --> [{_L3_}]{_V_D_WN_}\\n      \\n    \\\\** Override h with vowels (descendent) **\\\\\\n    _h{V_D}         --> HYARMEN {_V_D_}\\n    \\\\** Starting voiced h before long vowels **\\\\\\n    _h[{LVOWELS}]   --> HYARMEN [{_LVOWELS_}]\\n\\n    (h,χ)           --> AHA\\n\\n    \\\\** ===================== **\\\\\\n    \\\\** 4TH LINE RULES **\\\\\\n    \\\\** ===================== **\\\\\\n    {L4}    === nt    * mp    * nc    * nq      \\\\** Not nqu, due to preprocessor **\\\\\\n    {_L4_}  === ANTO  * AMPA  * ANCA  * UNQUE\\n \\n    \\\\** NORMAL **\\\\\\n    [{L4}]{V_D_WN}    --> [{_L4_}]{_V_D_WN_}\\n\\n    \\\\** ===================== **\\\\\\n    \\\\** 5TH LINE RULES **\\\\\\n    \\\\** ===================== **\\\\\\n    {L5}    === n     * m     * ñ     * ñw      * _nw \\n    {_L5_}  === NUMEN * MALTA * NOLDO * NWALME  * NWALME\\n\\n    [{L5}]{V_D_WN}  --> [{_L5_}]{_V_D_WN_}\\n\\n    nn{V_D_WN}          --> NUMEN {GEMINATE} {_V_D_WN_}\\n    mm{V_D_WN}          --> MALTA {GEMINATE} {_V_D_WN_}\\n\\n    \\\\** ===================== **\\\\\\n    \\\\** 6TH LINE RULES **\\\\\\n    \\\\** ===================== **\\\\\\n    {L6}        === r     * {W}  \\n    {_L6_}      === ROMEN * VILYA \\n\\n    [{L6}]{V_D_WN} --> [{_L6_}]{_V_D_WN_}\\n\\n    rr{V_D_WN}        --> ROMEN {GEMINATE} {_V_D_WN_}\\n    rd{V_D_WN}        --> ARDA {_V_D_WN_}\\n\\n    \\\\** ===================== **\\\\\\n    \\\\** L   LINE RULES **\\\\\\n    \\\\** ===================== **\\\\\\n    {LINE_L}          === l     * ld      * ll\\n    {_LINE_L_}        === LAMBE * ALDA    * LAMBE {GEMINATE}\\n\\n    [{LINE_L}]{V_D_WN}    --> [{_LINE_L_}]{_V_D_WN_}\\n\\n    hl{V_D_WN}            --> HALLA LAMBE {_V_D_WN_}\\n    hr{V_D_WN}            --> HALLA ROMEN {_V_D_WN_}\\n    \\n    \\\\** ===================== **\\\\\\n    \\\\** S/Z LINE RULES **\\\\\\n    \\\\** ===================== **\\\\\\n    {L8}              === s               * {SS}\\n    {_L8_TEHTAR_}     === SILME_NUQUERNA  * ESSE_NUQUERNA\\n    {_L8_NO_TEHTAR_}  === SILME           * ESSE\\n\\n    [{L8}][{VOWELS}]   --> [{_L8_TEHTAR_}][{_TEHTAR_}]\\n    [{L8}][{LTEHTAR}]  --> [{_L8_TEHTAR_}][{_LTEHTAR_}]\\n    \\n    {L8}               --> {_L8_NO_TEHTAR_}\\n    {L8}[{DIPHTHONGS}] --> {_L8_NO_TEHTAR_}[{_DIPHTHONGS_}]\\n  \\\\end\\n  \\n  \\\\beg rules punctuation\\n    . --> PUNCT_DDOT\\n    .. --> PUNCT_DOT PUNCT_DDOT PUNCT_DOT\\n    …  --> PUNCT_TILD\\n    ... --> PUNCT_TILD\\n    .... --> PUNCT_TILD\\n    ..... --> PUNCT_TILD\\n    ...... --> PUNCT_TILD\\n    ....... --> PUNCT_TILD\\n\\n    , --> PUNCT_DOT\\n    : --> PUNCT_DOT\\n    ; --> PUNCT_DOT\\n    ! --> PUNCT_EXCLAM\\n    ? --> PUNCT_INTERR\\n    · --> PUNCT_DOT\\n\\n    \\\\** Apostrophe **\\\\\\n\\n    \\' --> {NULL}\\n    ’ --> {NULL}\\n    \\n    \\\\** NBSP **\\\\\\n    {NBSP} --> NBSP\\n    \\n    \\\\** Quotes **\\\\\\n\\n    “ --> DQUOT_OPEN\\n    ” --> DQUOT_CLOSE\\n    « --> DQUOT_OPEN \\n    » --> DQUOT_CLOSE \\n    \\n    - --> {NULL}\\n    – --> PUNCT_TILD  \\n    — --> PUNCT_TILD\\n\\n    [ --> PUNCT_PAREN_L\\n    ] --> PUNCT_PAREN_R\\n    ( --> PUNCT_PAREN_L\\n    ) --> PUNCT_PAREN_R\\n    { --> PUNCT_PAREN_L\\n    } --> PUNCT_PAREN_R\\n    < --> PUNCT_PAREN_L\\n    > --> PUNCT_PAREN_R  \\n\\n    \\\\** Not universal between fonts ... **\\\\\\n    $ --> ELVISH_PAREN\\n    ≤ --> RING_MARK_L \\\\** Ring inscription left beautiful stuff **\\\\\\n    ≥ --> RING_MARK_R \\\\** Ring inscription right beautiful stuff **\\\\\\n \\n  \\\\end\\n  \\n  \\\\beg rules numbers\\n    0 --> NUM_0\\n    1 --> NUM_1\\n    2 --> NUM_2\\n    3 --> NUM_3\\n    4 --> NUM_4\\n    5 --> NUM_5\\n    6 --> NUM_6\\n    7 --> NUM_7\\n    8 --> NUM_8\\n    9 --> NUM_9\\n    A --> NUM_10\\n    B --> NUM_11      \\n  \\\\end\\n\\\\end\\n\\n\\\\beg postprocessor\\n  \\\\resolve_virtuals\\n\\\\end  \\n\"\nGlaemscribe.resource_manager.raw_modes[\"valarin-sarati\"] = \"\\\\**\\n\\nGlǽmscribe (also written Glaemscribe) is a software dedicated to\\nthe transcription of texts between writing systems, and more \\nspecifically dedicated to the transcription of J.R.R. Tolkien\\'s \\ninvented languages to some of his devised writing systems.\\n\\nCopyright (C) 2015 Benjamin Babut (Talagan).\\n\\nThis program is free software: you can redistribute it and/or modify\\nit under the terms of the GNU Affero General Public License as published by\\nthe Free Software Foundation, either version 3 of the License, or\\nany later version.\\n\\nThis program is distributed in the hope that it will be useful,\\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\nGNU Affero General Public License for more details.\\n\\nYou should have received a copy of the GNU Affero General Public License\\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\\n\\n**\\\\\\n\\n\\\\beg changelog\\n  \\\\entry \\\"0.0.1\\\" \\\"Initial version\\\"\\n  \\\\entry \\\"0.0.2\\\" \\\"Adding quotes handling\\\"\\n  \\\\entry \\\"0.0.3\\\" \\\" Moved out space to general element\\\"\\n\\\\end\\n\\n\\\\language \\\"Valarin\\\"\\n\\\\writing  \\\"Sarati\\\"\\n\\\\mode     \\\"Valarin Sarati - G*\\\"\\n\\\\version  \\\"0.0.3\\\"\\n\\\\authors  \\\"Talagan (Benjamin Babut), based on J.R.R. Tolkien\\\"\\n\\n\\\\world      arda\\n\\\\invention  experimental\\n\\n\\\\charset  sarati_eldamar true\\n\\n\\\\outspace SARATI_SPACE\\n  \\n\\n\\\\beg      preprocessor\\n  \\\\** Work exclusively downcase **\\\\\\n  \\\\downcase\\n  \\n  \\\\** Simplify trema vowels **\\\\\\n  \\\\substitute ä a\\n  \\\\substitute ë e\\n  \\\\substitute ï i\\n  \\\\substitute ö o\\n  \\\\substitute ü u\\n  \\\\substitute ÿ y\\n  \\n  \\\\** Dis-ambiguate long vowels **\\\\\\n  \\\\rxsubstitute \\\"(ā|â|aa)\\\" \\\"á\\\"\\n  \\\\rxsubstitute \\\"(ē|ê|ee)\\\" \\\"é\\\" \\n  \\\\rxsubstitute \\\"(ī|î|ii)\\\" \\\"í\\\"\\n  \\\\rxsubstitute \\\"(ō|ô|oo)\\\" \\\"ó\\\"\\n  \\\\rxsubstitute \\\"(ū|û|uu)\\\" \\\"ú\\\"\\n  \\\\rxsubstitute \\\"(ȳ|ŷ|yy)\\\" \\\"ý\\\"\\n\\n  \\\\substitute   \\\"ai\\\" \\\"ay\\\" \\\\** Dis-ambiguate ai **\\\\\\n\\\\end\\n  \\n\\\\beg      processor\\n\\n  \\n  \\\\beg rules litteral \\n      \\n    {A}                           === a\\n    {AA}                          === á     \\n    {E}                           === e\\n    {EE}                          === é     \\n    {I}                           === i\\n    {II}                          === í     \\n    {O}                           === o\\n    {OO}                          === ó     \\n    {U}                           === u\\n    {UU}                          === ú     \\n    {Y}                           === y\\n    {YY}                          === ý                                        \\n\\n    {AE}                          === (æ,ae)\\n    {AEAE}                        === (ǽ,ǣ)\\n\\n    {OE}                          === ǫ\\n    {OEOE}                        === ǭ\\n\\n    \\\\** ################################################# **\\\\\\n    \\\\**  DIPHTHONGS are dis-ambiguated in the preprocessor # **\\\\\\n    \\\\** ################################################# **\\\\\\n\\n    \\\\** ############# **\\\\\\n    \\\\**  DIACRITICS # **\\\\\\n    \\\\** ############# **\\\\\\n\\n    {VOWELS}                      === {A}                 * {E}                   * {I}                 * {O}                 * {U}                 * {AE}                            * {OE}    \\n    {LVOWELS}                     === {AA}                * {EE}                  * {II}                * {OO}                * {UU}                * {AEAE}                          * {OEOE}  \\n    {STEHTAS}                     === SARATI_QUENYA_A     * SARATI_QUENYA_E       * SARATI_QUENYA_I     * SARATI_QUENYA_O     * SARATI_QUENYA_U     * SARATI_QUENYA_A_REVERSED        * SARATI_DIACRITIC_CIRCLE       \\n\\n    {V_L_KER_WN}                  === [ {VOWELS}  * {NULL} ]\\n    {V_IMG_FOR_CONSONNANTS_WN}    === [ {STEHTAS} * {NULL} ]  \\\\** # No vowel == nothing **\\\\\\n\\n    \\\\** ######## **\\\\\\n    \\\\**  RULES # **\\\\\\n    \\\\** ######## **\\\\\\n\\n    [{VOWELS}]      -->   [{STEHTAS}] SARATI_QUENYA_LONG_VOWEL_CARRIER    \\\\** # Isolated vowels : use short carrier (reversed order RTL) **\\\\\\n    [{LVOWELS}]     -->   [{STEHTAS}] SARATI_DASH_U SARATI_QUENYA_LONG_VOWEL_CARRIER   \\\\** # Long vowels: carrier + dash + tehta **\\\\\\n\\n    \\\\** ########### **\\\\\\n    \\\\**  FIRST LINE **\\\\\\n\\n    {K}   === (c,k) \\\\** # For tolkienian compatibility\\'s sake **\\\\\\n\\n    {LINE_1ST_KER}        === t         * p         * {K}               \\\\** # * tt * pp * {K}{K}   **\\\\\\n    {LINE_1ST_IMG}        === SARATI_T  * SARATI_P  * SARATI_QUENYA_C                 \\\\** # * ó\\\" * óq * ó# **\\\\\\n\\n    {V_L_KER_WN}[{LINE_1ST_KER}]  --> {V_IMG_FOR_CONSONNANTS_WN}[{LINE_1ST_IMG}]\\n\\n    \\\\** ########### **\\\\\\n    \\\\**  SECOND LINE **\\\\\\n\\n    {LINE_2ND_KER}        === d                 * b                 * g         * gw \\n    {LINE_2ND_IMG}        === SARATI_QUENYA_ND  * SARATI_QUENYA_MB  * SARATI_NG * SARATI_PHONETIC_GW\\n\\n    {V_L_KER_WN}[{LINE_2ND_KER}] --> {V_IMG_FOR_CONSONNANTS_WN}[{LINE_2ND_IMG}]\\n\\n    \\\\** ########### **\\\\\\n    \\\\**  THIRD LINE **\\\\\\n\\n    {LINE_3RD_KER}        ===   þ                 * s               * š                                                   * (χ,x)                             * h         * šš \\\\** # * s_ **\\\\\\n    {LINE_3RD_IMG}        ===   SARATI_QUENYA_NT  * SARATI_QUENYA_S * SARATI_VOICELESS_PALATO_ALVEOLAR_SIBILANT_FRICATIVE * SARATI_VOICELESS_VELAR_FRICATIVE  * SARATI_H  * SARATI_DASH_D SARATI_VOICELESS_PALATO_ALVEOLAR_SIBILANT_FRICATIVE \\\\** # * ü **\\\\\\n\\n    {V_L_KER_WN}[{LINE_3RD_KER}] --> {V_IMG_FOR_CONSONNANTS_WN}[{LINE_3RD_IMG}]\\n\\n    \\\\** ########### **\\\\\\n    \\\\**  FOURTH LINE **\\\\\\n\\n    {LINE_4TH_KER}        ===   ð                               * z                       * ȝ \\\\** # * z_  **\\\\\\n    {LINE_4TH_IMG}        ===   SARATI_VOICED_DENTAL_FRICATIVE  * SARATI_QUENYA_SS_ALT_1  * SARATI_VOICED_VELAR_FRICATIVE \\\\** # * ú **\\\\\\n\\n    {V_L_KER_WN}[{LINE_4TH_KER}] --> {V_IMG_FOR_CONSONNANTS_WN}[{LINE_4TH_IMG}]\\n\\n    \\\\** ########### **\\\\\\n    \\\\**  FIFTH LINE **\\\\\\n\\n    {LINE_5TH_KER}        ===   m         * n\\n    {LINE_5TH_IMG}        ===   SARATI_M  * SARATI_N\\n\\n    {V_L_KER_WN}[{LINE_5TH_KER}] --> {V_IMG_FOR_CONSONNANTS_WN}[{LINE_5TH_IMG}]\\n\\n    \\\\** ########### **\\\\\\n    \\\\**  SIXTH LINE **\\\\\\n\\n    {LINE_6TH_KER}        === l * ll  \\n    {LINE_6TH_IMG}        === SARATI_L * SARATI_DASH_D SARATI_L \\n\\n    {V_L_KER_WN}[{LINE_6TH_KER}] --> {V_IMG_FOR_CONSONNANTS_WN}[{LINE_6TH_IMG}]\\n\\n    \\\\** ########### **\\\\\\n    \\\\**  SEVENTH LINE **\\\\\\n\\n    {LINE_7TH_KER}        === r * rr  \\n    {LINE_7TH_IMG}        === SARATI_R * SARATI_DASH_D SARATI_R  \\n\\n    {V_L_KER_WN}[{LINE_7TH_KER}] --> {V_IMG_FOR_CONSONNANTS_WN}[{LINE_7TH_IMG}]\\n\\n    \\\\** ########### **\\\\\\n    \\\\**  EIGHTH LINE **\\\\\\n\\n    {LINE_8TH_KER}        === y * w   \\n    {LINE_8TH_IMG}        === SARATI_QUENYA_Y * SARATI_W  \\n\\n    {V_L_KER_WN}[{LINE_8TH_KER}] --> {V_IMG_FOR_CONSONNANTS_WN}[{LINE_8TH_IMG}]\\n  \\\\end\\n    \\n  \\\\beg rules punctuation\\n    · --> {NULL}\\n    , --> {NULL}\\n    ; --> {NULL}\\n    : --> {NULL}\\n    . --> SARATI_SPACE\\n    - --> SARATI_SPACE\\n    – --> SARATI_SPACE\\n    ! --> {NULL}\\n    ? --> {NULL}\\n    \\' --> {NULL}\\n    [ --> {NULL}\\n    ] --> {NULL}\\n    ‘ --> {NULL}\\n    ’ --> {NULL}\\n    “ --> {NULL}\\n    ” --> {NULL}\\n    « --> {NULL}\\n    » --> {NULL}\\n  \\\\end \\n\\\\end \\n\\n\\\\beg postprocessor\\n  \\\\reverse\\n\\\\end\\n\\n\\n\\\\** # Voyelles : a æ e i o ǫ u / ǭ Ǭ **\\\\\\n\\\\** # Diphtongues : ai **\\\\\\n\\\\** # **\\\\\\n\\\\** # Occlusives aspirées   ph th .  .  .  kh .  **\\\\\\n\\\\** # Occlusives sourdes    p  t  .  .  .  k  .  **\\\\\\n\\\\** # Occlusives sonores    b  d  .  .  .  g  .  **\\\\\\n\\\\** # Fricatives sourdes    .  þ  s  š  .  χ  h  **\\\\\\n\\\\** # Fricatives sonores    .  ð  z  .  .  ȝ  .  **\\\\\\n\\\\** # Nasales               m  n  .  .  .  .  .  **\\\\\\n\\\\** # Latérales             .  l  .  .  .  .  .  **\\\\\\n\\\\** # Vibrantes             .  r  .  .  .  .  .  **\\\\\\n\\\\** # Semi-voyelles         w  .  .  .  y  .  .  **\\\\\\n\\n\\n      \\n\\n\"\nGlaemscribe.resource_manager.raw_modes[\"westron-tengwar-glaemscrafu\"] = \"\\\\**\\n\\nGlǽmscribe (also written Glaemscribe) is a software dedicated to\\nthe transcription of texts between writing systems, and more \\nspecifically dedicated to the transcription of J.R.R. Tolkien\\'s \\ninvented languages to some of his devised writing systems.\\n\\nCopyright (C) 2015 Benjamin Babut (Talagan).\\n\\nThis program is free software: you can redistribute it and/or modify\\nit under the terms of the GNU Affero General Public License as published by\\nthe Free Software Foundation, either version 3 of the License, or\\nany later version.\\n\\nThis program is distributed in the hope that it will be useful,\\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\nGNU Affero General Public License for more details.\\n\\nYou should have received a copy of the GNU Affero General Public License\\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\\n\\n**\\\\\\n\\n\\\\beg changelog\\n  \\\\entry \\\"0.0.2\\\" \\\"Correcting ts/ps sequences to work better with eldamar\\\"\\n  \\\\entry \\\"0.0.3\\\" \\\"Porting to virtual chars\\\"\\n  \\\\entry \\\"0.0.4\\\" \\\"Added charset support for Annatar\\\"\\n  \\\\entry \\\"0.0.5\\\" \\\"Added support for the FreeMonoTengwar font\\\" \\n  \\\\entry \\\"0.1.0\\\" \\\"Added support for the Tengwar Elfica font\\\"\\n  \\\\entry \\\"0.1.1\\\" \\\"Added support for inlined raw tengwar\\\"  \\n  \\\\entry \\\"0.1.2\\\" \\\"Added support for non-breaking spaces\\\"   \\n  \\\\entry \\\"0.1.3\\\" \\\"Added support for new unicode charsets\\\"   \\n  \\\\entry \\\"0.1.4\\\" \\\"Added support for the Tengwar Telcontar font\\\"\\n\\\\end\\n\\n\\\\**  Westron mode for glaemscribe (MAY BE INCOMPLETE) **\\\\\\n\\\\language Westron\\n\\\\writing  Tengwar\\n\\\\mode     \\\"Westron Tengwar - G*\\\"\\n\\\\version  \\\"0.1.4\\\"\\n\\\\authors  \\\"Talagan (Benjamin Babut), based on J.R.R. Tolkien\\\"\\n\\n\\\\world      arda\\n\\\\invention  experimental\\n\\n\\\\raw_mode \\\"raw-tengwar\\\"\\n\\n\\\\charset  tengwar_ds_sindarin true\\n\\\\charset  tengwar_ds_parmaite false\\n\\\\charset  tengwar_ds_eldamar  false\\n\\\\charset  tengwar_ds_annatar  false\\n\\\\charset  tengwar_ds_elfica   false\\n\\n\\\\charset  tengwar_guni_sindarin false\\n\\\\charset  tengwar_guni_parmaite false\\n\\\\charset  tengwar_guni_eldamar  false\\n\\\\charset  tengwar_guni_annatar  false\\n\\\\charset  tengwar_guni_elfica   false\\n\\n\\\\charset  tengwar_freemono    false\\n\\\\charset  tengwar_telcontar   false\\n\\n\\\\beg      options\\n\\n  \\\\beg option reverse_o_u_tehtar U_UP_O_DOWN\\n    \\\\value O_UP_U_DOWN 1\\n    \\\\value U_UP_O_DOWN 2\\n  \\\\end\\n  \\\\beg option consonant_modification_style CONSONANT_MODIFICATION_STYLE_BAR\\n    \\\\value CONSONANT_MODIFICATION_STYLE_WAVE 0\\n    \\\\value CONSONANT_MODIFICATION_STYLE_BAR 1\\n  \\\\end\\n\\n  \\\\option reverse_numbers true\\n  \\\\beg option numbers_base BASE_12\\n    \\\\value    BASE_10 10\\n    \\\\value    BASE_12 12\\n  \\\\end\\n  \\n\\\\end\\n\\n\\\\beg      preprocessor\\n  \\\\** Work exclusively downcase **\\\\\\n  \\\\downcase\\n  \\n  \\\\** Simplify trema vowels **\\\\\\n  \\\\substitute \\\"ä\\\" \\\"a\\\"\\n  \\\\substitute \\\"ë\\\" \\\"e\\\"\\n  \\\\substitute \\\"ï\\\" \\\"i\\\"\\n  \\\\substitute \\\"ö\\\" \\\"o\\\"\\n  \\\\substitute \\\"ü\\\" \\\"u\\\"\\n  \\\\substitute \\\"ÿ\\\" \\\"y\\\"\\n  \\n  \\\\** Dis-ambiguate long vowels **\\\\\\n  \\\\rxsubstitute \\\"(ā|â|aa)\\\" \\\"á\\\"\\n  \\\\rxsubstitute \\\"(ē|ê|ee)\\\" \\\"é\\\"\\n  \\\\rxsubstitute \\\"(ī|î|ii)\\\" \\\"í\\\"\\n  \\\\rxsubstitute \\\"(ō|ô|oo)\\\" \\\"ó\\\"\\n  \\\\rxsubstitute \\\"(ū|û|uu)\\\" \\\"ú\\\"\\n  \\\\rxsubstitute \\\"(ȳ|ŷ|yy)\\\" \\\"ý\\\"\\n  \\n  \\\\** Preprocess numbers **\\\\\\n  \\\\elvish_numbers \\\"\\\\\\\\eval numbers_base\\\" \\\"\\\\\\\\eval reverse_numbers\\\"\\n\\\\end\\n\\n\\\\beg      processor\\n\\n  \\\\beg    rules litteral  \\n  \\n    \\\\if \\\"consonant_modification_style == CONSONANT_MODIFICATION_STYLE_WAVE\\\"\\n      {GEMINATE} === GEMINATE_SIGN_TILD\\n      {NASAL}    === NASALIZE_SIGN_TILD\\n    \\\\else\\n      {GEMINATE} === GEMINATE_SIGN\\n      {NASAL}    === NASALIZE_SIGN\\n    \\\\endif\\n    \\n    \\\\if \\\"reverse_o_u_tehtar == U_UP_O_DOWN\\\"\\n      {O_LOOP}        === O_TEHTA\\n      {O_LOOP_DOUBLE} === O_TEHTA_DOUBLE\\n      {U_LOOP}        === U_TEHTA\\n      {U_LOOP_DOUBLE} === U_TEHTA_DOUBLE\\n    \\\\else\\n      {O_LOOP}        === U_TEHTA\\n      {O_LOOP_DOUBLE} === U_TEHTA_DOUBLE\\n      {U_LOOP}        === O_TEHTA\\n      {U_LOOP_DOUBLE} === O_TEHTA_DOUBLE\\n    \\\\endif\\n  \\n    {A}   === a\\n    {AA}  === á\\n    {E}   === e\\n    {EE}  === é\\n    {I}   === i\\n    {II}  === í\\n    {O}   === o\\n    {OO}  === ó\\n    {U}   === u\\n    {UU}  === ú\\n\\n    \\\\** Short diphthongs **\\\\\\n    {AI}  === {A}{I}\\n    {AU}  === {A}{U}\\n\t  {EI}  === {E}{I}\\n\t  {EU}  === {E}{U}\\n\t  {OI}  === {O}{I}\\n\t  {OU}  === {O}{U}\\n\t  {UI}  === {U}{I}\\n\t  {IU}  === {I}{U}\\n\\n    \\\\** LONG diphthongs **\\\\      \\n    {AAI} === {AA}{I} \\\\** âi **\\\\\\n    {AAU} === {AA}{U} \\\\** âu **\\\\\\n    {EEI} === {EE}{I} \\\\** êi **\\\\\\n    {EEU} === {EE}{U} \\\\** êu **\\\\\\n    {OOI} === {OO}{I} \\\\** ôi **\\\\\\n    {OOU} === {OO}{U} \\\\** ôu **\\\\\\n\\n    {SDIPHTHONGS}  === {AI}           * {AU}          * {EI} \t\t\t\t    * {EU}        * {IU}        * {OI}          * {OU}        * {UI}\\n    {_SDIPHTONGS_} === YANTA A_TEHTA  * URE A_TEHTA   * YANTA E_TEHTA\t  * URE E_TEHTA * URE I_TEHTA * YANTA {O_LOOP} * URE {O_LOOP} * YANTA {U_LOOP}                   \\n    \\n    {LDIPHTHONGS}  === {AAI}              * {AAU}              * {EEI}              * {EEU}            * {OOI}              * {OOU}\\n    {_LDIPHTONGS_} === ARA A_TEHTA YANTA  * ARA A_TEHTA URE    * ARA E_TEHTA YANTA  * ARA E_TEHTA URE  * ARA {O_LOOP} YANTA  * ARA {O_LOOP} URE\\n                   \\n    {VOWELS}      === {A}      * {E}      * {I}        * {O}        * {U}    \\n    {TEHTAR}      === A_TEHTA  * E_TEHTA  * I_TEHTA    * {O_LOOP}    * {U_LOOP}\\n                  \\n    {LVOWELS}     === {AA}         * {EE}         * {II}         * {OO}         * {UU}\\n    {LTETHAR}     === ARA A_TEHTA  * ARA E_TEHTA  * ARA I_TEHTA  * ARA {O_LOOP}  * ARA {U_LOOP} \\n\\n    \\\\** Let\\' put all vowels/diphthongs in the same basket **\\\\\\n    {V_D}         === [ {VOWELS}  * {LVOWELS} * {SDIPHTHONGS} * {LDIPHTHONGS} ]        \\n    \\\\** And their images... **\\\\            \\n    {_V_D_}       === [ {TEHTAR}  * {LTETHAR} * {_SDIPHTONGS_} * {_LDIPHTONGS_} ]\\n \\n    [{VOWELS}]      --> TELCO [{TEHTAR}]   \\\\** Replace isolated short vowels **\\\\\\n    [{LVOWELS}]     --> [{LTETHAR}]    \\\\** Replace long vowels **\\\\\\n    [{SDIPHTHONGS}]  --> [{_SDIPHTONGS_}]  \\\\** Replace short diphthongs **\\\\\\n    [{LDIPHTHONGS}]  --> [{_LDIPHTONGS_}]  \\\\** Replace long diphthongs **\\\\\\n\\n    \\\\** ================ **\\\\\\n    \\\\**    CONSONANTS    **\\\\\\n    \\\\** ================ **\\\\     \\n\\n    {L1_S}         === t      * p     * ch\t\t  * (c,k)       \\n    {L1_T}         === TINCO  * PARMA * CALMA\t  * QUESSE \\n    \\n    [{L1_S}]       -->  [ {L1_T} ]\\n    [{L1_S}]{V_D}  -->  [ {L1_T} ]{_V_D_} \\n\t\\n    {L1_G_S}         === tt\t\t\t           * pp               * cch\t\t\t\t        * (c,k)(c,k)             \\n    {L1_G_T}         === TINCO {GEMINATE}  * PARMA {GEMINATE} * CALMA {GEMINATE}\t* QUESSE {GEMINATE}  \\n    \\n    [{L1_G_S}]       -->  [ {L1_G_T} ]\\n    [{L1_G_S}]{V_D}  -->  [ {L1_G_T} ]{_V_D_} \\n\t  \\n    {L1_N_S}         === nt\t\t\t        * mp              * nch\t\t\t\t    * (n,ñ)(c,k)             \\n    {L1_N_T}         === TINCO {NASAL}  * PARMA {NASAL}   * CALMA {NASAL} * QUESSE {NASAL}  \\n    \\n    [{L1_N_S}]       -->  [ {L1_N_T} ]\\n    [{L1_N_S}]{V_D}  -->  [ {L1_N_T} ]{_V_D_} \t \\n\\n    {L2_S}         === d    * b     * j\t  \t* g\\n    {L2_T}         === ANDO * UMBAR * ANGA\t* UNGWE\\n\t\t\\n    [{L2_S}]       --> [{L2_T}] \\n    [{L2_S}]{V_D}  --> [{L2_T}]{_V_D_} \\n\\n    {L2_G_S}         === dd              * bb               * jj\t\t\t         * gg\\n    {L2_G_T}         === ANDO {GEMINATE} * UMBAR {GEMINATE} * ANGA {GEMINATE}  * UNGWE {GEMINATE}\\n\t\t\\n    [{L2_G_S}]       --> [{L2_G_T}] \\n    [{L2_G_S}]{V_D}  --> [{L2_G_T}]{_V_D_} \\n\\n    {L2_N_S}         === nd           * mb            * nj\t\t\t      * (n,ñ)g\\n    {L2_N_T}         === ANDO {NASAL} * UMBAR {NASAL} * ANGA {NASAL}  * UNGWE {NASAL}\\n\t\t\\n    [{L2_N_S}]       --> [{L2_N_T}] \\n    [{L2_N_S}]{V_D}  --> [{L2_N_T}]{_V_D_} \\n\\n    \\\\** Alignment of tehta is not the same in the font **\\\\\\n    \\\\** So we need to split the third line unfortunately **\\\\\\n    {L3_1_S}          === (th,þ)    * (f,ph)      \\n    {L3_1_T}          === SULE      * FORMEN  \\n   \\n    {L3_2_S}          === sh     * kh     \\n    {L3_2_T}          === AHA    * HWESTA\\n   \\n    [{L3_1_S}]        --> [{L3_1_T}] \\n    [{L3_1_S}]{V_D}   --> [{L3_1_T}]{_V_D_} \\n    [{L3_2_S}]        --> [{L3_2_T}] \\n    [{L3_2_S}]{V_D}   --> [{L3_2_T}]{_V_D_} \\n\t\t\\n    {L3_1G_S}         === (thth,tth,þþ)    * (ff,phph,pph)\\n    {L3_1G_T}         === SULE {GEMINATE}  * FORMEN {GEMINATE}\\n   \\n    {L3_2G_S}          === (shsh,ssh)      * (k,kh)kh\\n    {L3_2G_T}          === AHA {GEMINATE}  * HWESTA {GEMINATE}\\n   \\n    [{L3_1G_S}]        --> [{L3_1G_T}] \\n    [{L3_1G_S}]{V_D}   --> [{L3_1G_T}]{_V_D_} \\n    [{L3_2G_S}]        --> [{L3_2G_T}] \\n    [{L3_2G_S}]{V_D}   --> [{L3_2G_T}]{_V_D_} \t\t\\n\\n    {L3_1N_S}          === (nth,nþ)     * (nf,mf,mph)      \\n    {L3_1N_T}          === SULE {NASAL} * FORMEN {NASAL}  \\n   \\n    {L3_2N_S}          === nsh         * (n,ñ)kh     \\n    {L3_2N_T}          === AHA {NASAL} * HWESTA {NASAL}\\n   \\n    [{L3_1N_S}]        --> [{L3_1N_T}] \\n    [{L3_1N_S}]{V_D}   --> [{L3_1N_T}]{_V_D_} \\n    [{L3_2N_S}]        --> [{L3_2N_T}] \\n    [{L3_2N_S}]{V_D}   --> [{L3_2N_T}]{_V_D_} \\n\\n    {L4_S}            === (dh,ð)    * v   \t* zh\t  * gh\\n    {L4_T}            === ANTO      * AMPA  * ANCA\t* UNQUE\\n\t\t\\n    [{L4_S}]          --> [{L4_T}] \\n    [{L4_S}]{V_D}     --> [{L4_T}]{_V_D_} \\n\\n    {L4_G_S}            === (dh,ð)(dh,ð)     * vv               * (zhzh,zzh)\t     * (ghgh,ggh)\\n    {L4_G_T}            === ANTO {GEMINATE}  * AMPA {GEMINATE}  * ANCA {GEMINATE}  * UNQUE {GEMINATE}\\n\t\t\\n    [{L4_G_S}]          --> [{L4_G_T}] \\n    [{L4_G_S}]{V_D}     --> [{L4_G_T}]{_V_D_} \\n\\n    {L4_N_S}            === n(dh,ð)       * (mv,nv)       * nzh\t          * (n,ñ)gh\\n    {L4_N_T}            === ANTO {NASAL}  * AMPA {NASAL}  * ANCA {NASAL}  * UNQUE {NASAL}\\n\t\t\\n    [{L4_N_S}]          --> [{L4_N_T}] \\n    [{L4_N_S}]{V_D}     --> [{L4_N_T}]{_V_D_} \\n\\n    {L5_S}            === n     * m     * ny     * ñ\\n    {L5_T}            === NUMEN * MALTA * NOLDO  * NWALME\\n\t\t\\n    [{L5_S}]          --> [{L5_T}] \\n    [{L5_S}]{V_D}     --> [{L5_T}]{_V_D_} \\n\\n    {L5_G_S}            === nn      * mn      * (nyny,nny)   * ññ\\n    {L5_G_T}            === NUMEN   * MALTA   * NOLDO        * NWALME\\n\t\t\\n    [{L5_G_S}]          --> [{L5_G_T}] \\n    [{L5_G_S}]{V_D}     --> [{L5_G_T}]{_V_D_} \\n\t\t\\n    {L6_S}            === w  \t  * y     * rr               * ww         \t    * yy\\n    {L6_T}            === VALA  * ANNA  * ROMEN {GEMINATE} * VALA {GEMINATE}  * ANNA {GEMINATE}\\n    [r * {L6_S}]      --> [ ORE   * {L6_T}] \\n    [r * {L6_S}]{V_D} --> [ ROMEN * {L6_T}]{_V_D_} \\n\\n    \\\\** This one is not useful (redundant with higher) **\\\\\\n    \\\\** Keep it for clarity of mind **\\\\\\n    r_                --> ORE\\n\\n    s{V_D}            --> SILME_NUQUERNA {_V_D_}  \\\\** Before a vowel goes down **\\\\\\n    s                 --> SILME                   \\\\** Any other pos, up **\\\\\\n    z{V_D}            --> ESSE_NUQUERNA {_V_D_}   \\\\** Before a vowel goes down **\\\\\\n    z                 --> ESSE                    \\\\** Any other pos, up **\\\\\\n\t\t\\n    ns{V_D}           --> SILME_NUQUERNA {NASAL} {_V_D_}\\n    ns                --> SILME_NUQUERNA {NASAL}                   \\n    nz{V_D}           --> ESSE_NUQUERNA {NASAL} {_V_D_}   \\n    nz                --> ESSE_NUQUERNA {NASAL}                \\n\\n    ts                --> TINCO SARINCE\\n    ps                --> PARMA SARINCE\\n    (ks,cs,x)         --> QUESSE SARINCE\\n\\n    ts{V_D}           --> TINCO SARINCE {_V_D_}  \\n    ps{V_D}           --> PARMA SARINCE {_V_D_}\\n    (ks,cs,x){V_D}    --> QUESSE SARINCE {_V_D_}\t\\n\\n    h{V_D}            --> HYARMEN {_V_D_}\\n    h                 --> HYARMEN\\n    hh{V_D}           --> HYARMEN {GEMINATE} {_V_D_}\\n    hh                --> HYARMEN {GEMINATE}\\n                      \\n    l{V_D}            --> LAMBE {_V_D_}\\n    l                 --> LAMBE\\n                      \\n    ll{V_D}           --> LAMBE {GEMINATE} {_V_D_}\\n    ll                --> LAMBE {GEMINATE}\\n\t\t\\n    (hl,lh){V_D}      --> ALDA {_V_D_}\\n    (hl,lh)           --> ALDA\t\t\\n\\n    (hr,rh){V_D}      --> ARDA {_V_D_}\\n    (hr,rh)           --> ARDA\t\\n\t\t\\n  \\\\end\\n  \\n  \\\\beg rules punctutation\\n    . --> PUNCT_DDOT\\n    .. --> PUNCT_DOT PUNCT_DDOT PUNCT_DOT\\n    …  --> PUNCT_TILD\\n    ... --> PUNCT_TILD\\n    .... --> PUNCT_TILD\\n    ..... --> PUNCT_TILD\\n    ...... --> PUNCT_TILD\\n    ....... --> PUNCT_TILD\\n\\n    , --> PUNCT_DOT\\n    : --> PUNCT_DOT\\n    ; --> PUNCT_DOT\\n    ! --> PUNCT_EXCLAM\\n    ? --> PUNCT_INTERR\\n    · --> PUNCT_DOT\\n\\n    \\\\** Apostrophe **\\\\\\n\\n    \\' --> {NULL}\\n    ’ --> {NULL}\\n    \\n    \\\\** NBSP **\\\\\\n    {NBSP} --> NBSP\\n    \\n    \\\\** Quotes **\\\\\\n\\n    “ --> DQUOT_OPEN\\n    ” --> DQUOT_CLOSE\\n    « --> DQUOT_OPEN \\n    » --> DQUOT_CLOSE \\n    \\n    - --> PUNCT_DOT    \\n    – --> PUNCT_TILD  \\n    — --> PUNCT_DTILD\\n \\n    [ --> PUNCT_PAREN_L\\n    ] --> PUNCT_PAREN_R\\n    ( --> PUNCT_PAREN_L\\n    ) --> PUNCT_PAREN_R\\n    { --> PUNCT_PAREN_L\\n    } --> PUNCT_PAREN_R\\n    < --> PUNCT_PAREN_L\\n    > --> PUNCT_PAREN_R  \\n\\n    \\\\** Not universal between fonts ... **\\\\\\n    $ --> ELVISH_PAREN\\n    ≤ --> RING_MARK_L \\\\** Ring inscription left beautiful stuff **\\\\\\n    ≥ --> RING_MARK_R \\\\** Ring inscription right beautiful stuff **\\\\\\n  \\\\end\\n\\n  \\\\beg rules numbers\\n    0 --> NUM_0\\n    1 --> NUM_1\\n    2 --> NUM_2\\n    3 --> NUM_3\\n    4 --> NUM_4\\n    5 --> NUM_5\\n    6 --> NUM_6\\n    7 --> NUM_7\\n    8 --> NUM_8\\n    9 --> NUM_9\\n    A --> NUM_10\\n    B --> NUM_11   \\n  \\\\end\\n  \\n\\\\end\\n\\n\\\\beg postprocessor\\n  \\\\resolve_virtuals\\n\\\\end\"\n\treturn Glaemscribe\n})()\n/* eslint-enable */\n"],"sourceRoot":""}